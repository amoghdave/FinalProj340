{"ast":null,"code":"(function () {\n  var d;\n  window.AmCharts ? d = window.AmCharts : (d = {}, window.AmCharts = d, d.themes = {}, d.maps = {}, d.inheriting = {}, d.charts = [], d.onReadyArray = [], d.useUTC = !1, d.updateRate = 60, d.uid = 0, d.lang = {}, d.translations = {}, d.mapTranslations = {}, d.windows = {}, d.initHandlers = [], d.amString = \"am\", d.pmString = \"pm\");\n\n  d.Class = function (a) {\n    var b = function b() {\n      arguments[0] !== d.inheriting && (this.events = {}, this.construct.apply(this, arguments));\n    };\n\n    a.inherits ? (b.prototype = new a.inherits(d.inheriting), b.base = a.inherits.prototype, delete a.inherits) : (b.prototype.createEvents = function () {\n      for (var a = 0; a < arguments.length; a++) {\n        this.events[arguments[a]] = [];\n      }\n    }, b.prototype.listenTo = function (a, b, c) {\n      this.removeListener(a, b, c);\n      a.events[b].push({\n        handler: c,\n        scope: this\n      });\n    }, b.prototype.addListener = function (a, b, c) {\n      this.removeListener(this, a, b);\n      a && this.events[a] && this.events[a].push({\n        handler: b,\n        scope: c\n      });\n    }, b.prototype.removeListener = function (a, b, c) {\n      if (a && a.events && (a = a.events[b])) for (b = a.length - 1; 0 <= b; b--) {\n        a[b].handler === c && a.splice(b, 1);\n      }\n    }, b.prototype.fire = function (a) {\n      for (var b = this.events[a.type], c = 0; c < b.length; c++) {\n        var d = b[c];\n        d.handler.call(d.scope, a);\n      }\n    });\n\n    for (var c in a) {\n      b.prototype[c] = a[c];\n    }\n\n    return b;\n  };\n\n  d.addChart = function (a) {\n    window.requestAnimationFrame ? d.animationRequested || (d.animationRequested = !0, window.requestAnimationFrame(d.update)) : d.updateInt || (d.updateInt = setInterval(function () {\n      d.update();\n    }, Math.round(1E3 / d.updateRate)));\n    d.charts.push(a);\n  };\n\n  d.removeChart = function (a) {\n    for (var b = d.charts, c = b.length - 1; 0 <= c; c--) {\n      b[c] == a && b.splice(c, 1);\n    }\n\n    0 === b.length && (d.requestAnimation && (window.cancelAnimationFrame(d.requestAnimation), d.animationRequested = !1), d.updateInt && (clearInterval(d.updateInt), d.updateInt = NaN));\n  };\n\n  d.isModern = !0;\n\n  d.getIEVersion = function () {\n    var a = 0,\n        b,\n        c;\n    \"Microsoft Internet Explorer\" == navigator.appName && (b = navigator.userAgent, c = /MSIE ([0-9]{1,}[.0-9]{0,})/, null !== c.exec(b) && (a = parseFloat(RegExp.$1)));\n    return a;\n  };\n\n  d.applyLang = function (a, b) {\n    var c = d.translations;\n    b.dayNames = d.extend({}, d.dayNames);\n    b.shortDayNames = d.extend({}, d.shortDayNames);\n    b.monthNames = d.extend({}, d.monthNames);\n    b.shortMonthNames = d.extend({}, d.shortMonthNames);\n    b.amString = \"am\";\n    b.pmString = \"pm\";\n    c && (c = c[a]) && (d.lang = c, b.langObj = c, c.monthNames && (b.dayNames = d.extend({}, c.dayNames), b.shortDayNames = d.extend({}, c.shortDayNames), b.monthNames = d.extend({}, c.monthNames), b.shortMonthNames = d.extend({}, c.shortMonthNames)), c.am && (b.amString = c.am), c.pm && (b.pmString = c.pm));\n    d.amString = b.amString;\n    d.pmString = b.pmString;\n  };\n\n  d.IEversion = d.getIEVersion();\n  9 > d.IEversion && 0 < d.IEversion && (d.isModern = !1, d.isIE = !0);\n  d.dx = 0;\n  d.dy = 0;\n  if (document.addEventListener || window.opera) d.isNN = !0, d.isIE = !1, d.dx = .5, d.dy = .5;\n  document.attachEvent && (d.isNN = !1, d.isIE = !0, d.isModern || (d.dx = 0, d.dy = 0));\n  window.chrome && (d.chrome = !0);\n\n  d.handleMouseUp = function (a) {\n    for (var b = d.charts, c = 0; c < b.length; c++) {\n      var e = b[c];\n      e && e.handleReleaseOutside && e.handleReleaseOutside(a);\n    }\n  };\n\n  d.handleMouseMove = function (a) {\n    for (var b = d.charts, c = 0; c < b.length; c++) {\n      var e = b[c];\n      e && e.handleMouseMove && e.handleMouseMove(a);\n    }\n  };\n\n  d.handleKeyUp = function (a) {\n    for (var b = d.charts, c = 0; c < b.length; c++) {\n      var e = b[c];\n      e && e.handleKeyUp && e.handleKeyUp(a);\n    }\n  };\n\n  d.handleWheel = function (a) {\n    for (var b = d.charts, c = 0; c < b.length; c++) {\n      var e = b[c];\n\n      if (e && e.mouseIsOver) {\n        (e.mouseWheelScrollEnabled || e.mouseWheelZoomEnabled) && e.handleWheel && (e.handleMouseMove(a), e.handleWheel(a));\n        break;\n      }\n    }\n  };\n\n  d.resetMouseOver = function () {\n    for (var a = d.charts, b = 0; b < a.length; b++) {\n      var c = a[b];\n      c && (c.mouseIsOver = !1);\n    }\n  };\n\n  d.ready = function (a) {\n    d.onReadyArray.push(a);\n  };\n\n  d.handleLoad = function () {\n    d.isReady = !0;\n\n    for (var a = d.onReadyArray, b = 0; b < a.length; b++) {\n      var c = a[b];\n      isNaN(d.processDelay) ? c() : setTimeout(c, d.processDelay * b);\n    }\n\n    d.onReadyArray = [];\n  };\n\n  d.addInitHandler = function (a, b) {\n    d.initHandlers.push({\n      method: a,\n      types: b\n    });\n  };\n\n  d.callInitHandler = function (a) {\n    var b = d.initHandlers;\n    if (d.initHandlers) for (var c = 0; c < b.length; c++) {\n      var e = b[c];\n      e.types ? d.isInArray(e.types, a.type) && e.method(a) : e.method(a);\n    }\n  };\n\n  d.getUniqueId = function () {\n    d.uid++;\n    return \"AmChartsEl-\" + d.uid;\n  };\n\n  d.addGlobalListeners = function () {\n    d.globalListenersAdded || (d.globalListenersAdded = !0, d.isNN && (document.addEventListener(\"mousemove\", d.handleMouseMove), document.addEventListener(\"keyup\", d.handleKeyUp), document.addEventListener(\"mouseup\", d.handleMouseUp, !0), window.addEventListener(\"load\", d.handleLoad, !0)), d.isIE && (document.attachEvent(\"onmousemove\", d.handleMouseMove), document.attachEvent(\"onmouseup\", d.handleMouseUp), window.attachEvent(\"onload\", d.handleLoad)));\n  };\n\n  d.addGlobalListeners();\n\n  d.addWheelListeners = function () {\n    d.wheelIsListened || (d.isNN && (window.addEventListener(\"DOMMouseScroll\", d.handleWheel, !0), document.addEventListener(\"mousewheel\", d.handleWheel, !0)), d.isIE && document.attachEvent(\"onmousewheel\", d.handleWheel));\n    d.wheelIsListened = !0;\n  };\n\n  d.clear = function () {\n    var a = d.charts;\n    if (a) for (var b = a.length - 1; 0 <= b; b--) {\n      a[b].clear();\n    }\n    d.updateInt && clearInterval(d.updateInt);\n    d.requestAnimation && window.cancelAnimationFrame(d.requestAnimation);\n    d.charts = [];\n    d.isNN && (document.removeEventListener(\"mousemove\", d.handleMouseMove, !0), document.removeEventListener(\"keyup\", d.handleKeyUp, !0), document.removeEventListener(\"mouseup\", d.handleMouseUp, !0), window.removeEventListener(\"load\", d.handleLoad, !0), window.removeEventListener(\"DOMMouseScroll\", d.handleWheel, !0), document.removeEventListener(\"mousewheel\", d.handleWheel, !0));\n    d.isIE && (document.detachEvent(\"onmousemove\", d.handleMouseMove), document.detachEvent(\"onmouseup\", d.handleMouseUp), window.detachEvent(\"onload\", d.handleLoad));\n    d.globalListenersAdded = !1;\n    d.wheelIsListened = !1;\n  };\n\n  d.makeChart = function (a, b, c) {\n    var e = b.type,\n        g = b.theme;\n    d.addGlobalListeners();\n    d.isString(g) && (g = d.themes[g], b.theme = g);\n    var f;\n\n    switch (e) {\n      case \"serial\":\n        f = new d.AmSerialChart(g);\n        break;\n\n      case \"xy\":\n        f = new d.AmXYChart(g);\n        break;\n\n      case \"pie\":\n        f = new d.AmPieChart(g);\n        break;\n\n      case \"radar\":\n        f = new d.AmRadarChart(g);\n        break;\n\n      case \"gauge\":\n        f = new d.AmAngularGauge(g);\n        break;\n\n      case \"funnel\":\n        f = new d.AmFunnelChart(g);\n        break;\n\n      case \"map\":\n        f = new d.AmMap(g);\n        break;\n\n      case \"stock\":\n        f = new d.AmStockChart(g);\n        break;\n\n      case \"gantt\":\n        f = new d.AmGanttChart(g);\n    }\n\n    d.extend(f, b);\n    d.isReady ? isNaN(c) ? f.write(a) : setTimeout(function () {\n      d.realWrite(f, a);\n    }, c) : d.ready(function () {\n      isNaN(c) ? f.write(a) : setTimeout(function () {\n        d.realWrite(f, a);\n      }, c);\n    });\n    return f;\n  };\n\n  d.realWrite = function (a, b) {\n    a.write(b);\n  };\n\n  d.updateCount = 0;\n  d.validateAt = Math.round(d.updateRate / 10);\n\n  d.update = function () {\n    var a = d.charts;\n    d.updateCount++;\n    var b = !1;\n    d.updateCount == d.validateAt && (b = !0, d.updateCount = 0);\n    if (a) for (var c = a.length - 1; 0 <= c; c--) {\n      a[c].update && a[c].update(), b && (a[c].autoResize ? a[c].validateSize && a[c].validateSize() : a[c].premeasure && a[c].premeasure());\n    }\n    window.requestAnimationFrame && (d.requestAnimation = window.requestAnimationFrame(d.update));\n  };\n\n  \"complete\" == document.readyState && d.handleLoad();\n})();\n\n(function () {\n  var d = window.AmCharts;\n\n  d.toBoolean = function (a, b) {\n    if (void 0 === a) return b;\n\n    switch (String(a).toLowerCase()) {\n      case \"true\":\n      case \"yes\":\n      case \"1\":\n        return !0;\n\n      case \"false\":\n      case \"no\":\n      case \"0\":\n      case null:\n        return !1;\n\n      default:\n        return !!a;\n    }\n  };\n\n  d.removeFromArray = function (a, b) {\n    var c;\n    if (void 0 !== b && void 0 !== a) for (c = a.length - 1; 0 <= c; c--) {\n      a[c] == b && a.splice(c, 1);\n    }\n  };\n\n  d.getPath = function () {\n    var a = document.getElementsByTagName(\"script\");\n    if (a) for (var b = 0; b < a.length; b++) {\n      var c = a[b].src;\n      if (-1 !== c.search(/\\/(amcharts|ammap)\\.js/)) return c.replace(/\\/(amcharts|ammap)\\.js.*/, \"/\");\n    }\n  };\n\n  d.normalizeUrl = function (a) {\n    return \"\" !== a && -1 === a.search(/\\/$/) ? a + \"/\" : a;\n  };\n\n  d.isAbsolute = function (a) {\n    return 0 === a.search(/^http[s]?:|^\\//);\n  };\n\n  d.isInArray = function (a, b) {\n    for (var c = 0; c < a.length; c++) {\n      if (a[c] == b) return !0;\n    }\n\n    return !1;\n  };\n\n  d.getDecimals = function (a) {\n    var b = 0;\n    isNaN(a) || (a = String(a), -1 != a.indexOf(\"e-\") ? b = Number(a.split(\"-\")[1]) : -1 != a.indexOf(\".\") && (b = a.split(\".\")[1].length));\n    return b;\n  };\n\n  d.wordwrap = function (a, b, c, e) {\n    var g, f, k, h;\n    a += \"\";\n    if (1 > b) return a;\n    g = -1;\n\n    for (a = (h = a.split(/\\r\\n|\\n|\\r/)).length; ++g < a; h[g] += k) {\n      k = h[g];\n\n      for (h[g] = \"\"; k.length > b; h[g] += d.trim(k.slice(0, f)) + ((k = k.slice(f)).length ? c : \"\")) {\n        f = 2 == e || (f = k.slice(0, b + 1).match(/\\S*(\\s)?$/))[1] ? b : f.input.length - f[0].length || 1 == e && b || f.input.length + (f = k.slice(b).match(/^\\S*/))[0].length;\n      }\n\n      k = d.trim(k);\n    }\n\n    return h.join(c);\n  };\n\n  d.trim = function (a) {\n    return a.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, \"\");\n  };\n\n  d.wrappedText = function (a, b, c, e, g, f, k, h) {\n    var l = d.text(a, b, c, e, g, f, k);\n\n    if (l) {\n      var m = l.getBBox();\n\n      if (m.width > h) {\n        var n = \"\\n\";\n        d.isModern || (n = \"<br>\");\n        h = Math.floor(h / (m.width / b.length));\n        2 < h && (h -= 2);\n        b = d.wordwrap(b, h, n, !0);\n        l.remove();\n        l = d.text(a, b, c, e, g, f, k);\n      }\n    }\n\n    return l;\n  };\n\n  d.getStyle = function (a, b) {\n    var c = \"\";\n    if (document.defaultView && document.defaultView.getComputedStyle) try {\n      c = document.defaultView.getComputedStyle(a, \"\").getPropertyValue(b);\n    } catch (e) {} else a.currentStyle && (b = b.replace(/\\-(\\w)/g, function (a, b) {\n      return b.toUpperCase();\n    }), c = a.currentStyle[b]);\n    return c;\n  };\n\n  d.removePx = function (a) {\n    if (void 0 !== a) return Number(a.substring(0, a.length - 2));\n  };\n\n  d.getURL = function (a, b) {\n    if (a) if (\"_self\" != b && b) {\n      if (\"_top\" == b && window.top) window.top.location.href = a;else if (\"_parent\" == b && window.parent) window.parent.location.href = a;else if (\"_blank\" == b) window.open(a);else {\n        var c = document.getElementsByName(b)[0];\n        c ? c.src = a : (c = d.windows[b]) ? c.opener && !c.opener.closed ? c.location.href = a : d.windows[b] = window.open(a) : d.windows[b] = window.open(a);\n      }\n    } else window.location.href = a;\n  };\n\n  d.ifArray = function (a) {\n    return a && \"object\" == typeof a && 0 < a.length ? !0 : !1;\n  };\n\n  d.callMethod = function (a, b) {\n    var c;\n\n    for (c = 0; c < b.length; c++) {\n      var e = b[c];\n\n      if (e) {\n        if (e[a]) e[a]();\n        var d = e.length;\n\n        if (0 < d) {\n          var f;\n\n          for (f = 0; f < d; f++) {\n            var k = e[f];\n            if (k && k[a]) k[a]();\n          }\n        }\n      }\n    }\n  };\n\n  d.toNumber = function (a) {\n    return \"number\" == typeof a ? a : Number(String(a).replace(/[^0-9\\-.]+/g, \"\"));\n  };\n\n  d.toColor = function (a) {\n    if (\"\" !== a && void 0 !== a) if (-1 != a.indexOf(\",\")) {\n      a = a.split(\",\");\n      var b;\n\n      for (b = 0; b < a.length; b++) {\n        var c = a[b].substring(a[b].length - 6, a[b].length);\n        a[b] = \"#\" + c;\n      }\n    } else a = a.substring(a.length - 6, a.length), a = \"#\" + a;\n    return a;\n  };\n\n  d.toCoordinate = function (a, b, c) {\n    var e;\n    void 0 !== a && (a = String(a), c && c < b && (b = c), e = Number(a), -1 != a.indexOf(\"!\") && (e = b - Number(a.substr(1))), -1 != a.indexOf(\"%\") && (e = b * Number(a.substr(0, a.length - 1)) / 100));\n    return e;\n  };\n\n  d.fitToBounds = function (a, b, c) {\n    a < b && (a = b);\n    a > c && (a = c);\n    return a;\n  };\n\n  d.isDefined = function (a) {\n    return void 0 === a ? !1 : !0;\n  };\n\n  d.stripNumbers = function (a) {\n    return a.replace(/[0-9]+/g, \"\");\n  };\n\n  d.roundTo = function (a, b) {\n    if (0 > b) return a;\n    var c = Math.pow(10, b);\n    return Math.round(a * c) / c;\n  };\n\n  d.toFixed = function (a, b) {\n    var c = !1;\n    0 > a && (c = !0, a = Math.abs(a));\n    var e = String(Math.round(a * Math.pow(10, b)));\n\n    if (0 < b) {\n      var d = e.length;\n\n      if (d < b) {\n        var f;\n\n        for (f = 0; f < b - d; f++) {\n          e = \"0\" + e;\n        }\n      }\n\n      d = e.substring(0, e.length - b);\n      \"\" === d && (d = 0);\n      e = d + \".\" + e.substring(e.length - b, e.length);\n      return c ? \"-\" + e : e;\n    }\n\n    return String(e);\n  };\n\n  d.formatDuration = function (a, b, c, e, g, f) {\n    var k = d.intervals,\n        h = f.decimalSeparator;\n\n    if (a >= k[b].contains) {\n      var l = a - Math.floor(a / k[b].contains) * k[b].contains;\n      \"ss\" == b ? (l = d.formatNumber(l, f), 1 == l.split(h)[0].length && (l = \"0\" + l)) : l = d.roundTo(l, f.precision);\n      (\"mm\" == b || \"hh\" == b) && 10 > l && (l = \"0\" + l);\n      c = l + \"\" + e[b] + \"\" + c;\n      a = Math.floor(a / k[b].contains);\n      b = k[b].nextInterval;\n      return d.formatDuration(a, b, c, e, g, f);\n    }\n\n    \"ss\" == b && (a = d.formatNumber(a, f), 1 == a.split(h)[0].length && (a = \"0\" + a));\n    \"mm\" == b && (a = d.roundTo(a, f.precision));\n    (\"mm\" == b || \"hh\" == b) && 10 > a && (a = \"0\" + a);\n    c = a + \"\" + e[b] + \"\" + c;\n    if (k[g].count > k[b].count) for (a = k[b].count; a < k[g].count; a++) {\n      b = k[b].nextInterval, \"ss\" == b || \"mm\" == b || \"hh\" == b ? c = \"00\" + e[b] + \"\" + c : \"DD\" == b && (c = \"0\" + e[b] + \"\" + c);\n    }\n    \":\" == c.charAt(c.length - 1) && (c = c.substring(0, c.length - 1));\n    return c;\n  };\n\n  d.formatNumber = function (a, b, c, e, g) {\n    a = d.roundTo(a, b.precision);\n    isNaN(c) && (c = b.precision);\n    var f = b.decimalSeparator;\n    b = b.thousandsSeparator;\n    void 0 == f && (f = \",\");\n    void 0 == b && (b = \" \");\n    var k;\n    k = 0 > a ? \"-\" : \"\";\n    a = Math.abs(a);\n    var h = String(a),\n        l = !1;\n    -1 != h.indexOf(\"e\") && (l = !0);\n    0 <= c && !l && (h = d.toFixed(a, c));\n    var m = \"\";\n    if (l) m = h;else {\n      var h = h.split(\".\"),\n          l = String(h[0]),\n          n;\n\n      for (n = l.length; 0 <= n; n -= 3) {\n        m = n != l.length ? 0 !== n ? l.substring(n - 3, n) + b + m : l.substring(n - 3, n) + m : l.substring(n - 3, n);\n      }\n\n      void 0 !== h[1] && (m = m + f + h[1]);\n      void 0 !== c && 0 < c && \"0\" != m && (m = d.addZeroes(m, f, c));\n    }\n    m = k + m;\n    \"\" === k && !0 === e && 0 !== a && (m = \"+\" + m);\n    !0 === g && (m += \"%\");\n    return m;\n  };\n\n  d.addZeroes = function (a, b, c) {\n    a = a.split(b);\n    void 0 === a[1] && 0 < c && (a[1] = \"0\");\n    return a[1].length < c ? (a[1] += \"0\", d.addZeroes(a[0] + b + a[1], b, c)) : void 0 !== a[1] ? a[0] + b + a[1] : a[0];\n  };\n\n  d.scientificToNormal = function (a) {\n    var b;\n    a = String(a).split(\"e\");\n    var c;\n\n    if (\"-\" == a[1].substr(0, 1)) {\n      b = \"0.\";\n\n      for (c = 0; c < Math.abs(Number(a[1])) - 1; c++) {\n        b += \"0\";\n      }\n\n      b += a[0].split(\".\").join(\"\");\n    } else {\n      var e = 0;\n      b = a[0].split(\".\");\n      b[1] && (e = b[1].length);\n      b = a[0].split(\".\").join(\"\");\n\n      for (c = 0; c < Math.abs(Number(a[1])) - e; c++) {\n        b += \"0\";\n      }\n    }\n\n    return b;\n  };\n\n  d.toScientific = function (a, b) {\n    if (0 === a) return \"0\";\n    var c = Math.floor(Math.log(Math.abs(a)) * Math.LOG10E),\n        e = String(e).split(\".\").join(b);\n    return String(e) + \"e\" + c;\n  };\n\n  d.randomColor = function () {\n    return \"#\" + (\"00000\" + (16777216 * Math.random() << 0).toString(16)).substr(-6);\n  };\n\n  d.hitTest = function (a, b, c) {\n    var e = !1,\n        g = a.x,\n        f = a.x + a.width,\n        k = a.y,\n        h = a.y + a.height,\n        l = d.isInRectangle;\n    e || (e = l(g, k, b));\n    e || (e = l(g, h, b));\n    e || (e = l(f, k, b));\n    e || (e = l(f, h, b));\n    e || !0 === c || (e = d.hitTest(b, a, !0));\n    return e;\n  };\n\n  d.isInRectangle = function (a, b, c) {\n    return a >= c.x - 5 && a <= c.x + c.width + 5 && b >= c.y - 5 && b <= c.y + c.height + 5 ? !0 : !1;\n  };\n\n  d.isPercents = function (a) {\n    if (-1 != String(a).indexOf(\"%\")) return !0;\n  };\n\n  d.formatValue = function (a, b, c, e, g, f, k, h) {\n    if (b) {\n      void 0 === g && (g = \"\");\n      var l;\n\n      for (l = 0; l < c.length; l++) {\n        var m = c[l],\n            n = b[m];\n        void 0 !== n && (n = f ? d.addPrefix(n, h, k, e) : d.formatNumber(n, e), a = a.replace(new RegExp(\"\\\\[\\\\[\" + g + \"\" + m + \"\\\\]\\\\]\", \"g\"), n));\n      }\n    }\n\n    return a;\n  };\n\n  d.formatDataContextValue = function (a, b) {\n    if (a) {\n      var c = a.match(/\\[\\[.*?\\]\\]/g),\n          e;\n\n      for (e = 0; e < c.length; e++) {\n        var d = c[e],\n            d = d.substr(2, d.length - 4);\n        void 0 !== b[d] && (a = a.replace(new RegExp(\"\\\\[\\\\[\" + d + \"\\\\]\\\\]\", \"g\"), b[d]));\n      }\n    }\n\n    return a;\n  };\n\n  d.massReplace = function (a, b) {\n    for (var c in b) {\n      if (b.hasOwnProperty(c)) {\n        var e = b[c];\n        void 0 === e && (e = \"\");\n        a = a.replace(c, e);\n      }\n    }\n\n    return a;\n  };\n\n  d.cleanFromEmpty = function (a) {\n    return a.replace(/\\[\\[[^\\]]*\\]\\]/g, \"\");\n  };\n\n  d.addPrefix = function (a, b, c, e, g) {\n    var f = d.formatNumber(a, e),\n        k = \"\",\n        h,\n        l,\n        m;\n    if (0 === a) return \"0\";\n    0 > a && (k = \"-\");\n    a = Math.abs(a);\n    if (1 < a) for (h = b.length - 1; -1 < h; h--) {\n      if (a >= b[h].number && (l = a / b[h].number, m = Number(e.precision), 1 > m && (m = 1), c = d.roundTo(l, m), m = d.formatNumber(c, {\n        precision: -1,\n        decimalSeparator: e.decimalSeparator,\n        thousandsSeparator: e.thousandsSeparator\n      }), !g || l == c)) {\n        f = k + \"\" + m + \"\" + b[h].prefix;\n        break;\n      }\n    } else for (h = 0; h < c.length; h++) {\n      if (a <= c[h].number) {\n        l = a / c[h].number;\n        m = Math.abs(Math.floor(Math.log(l) * Math.LOG10E));\n        l = d.roundTo(l, m);\n        f = k + \"\" + l + \"\" + c[h].prefix;\n        break;\n      }\n    }\n    return f;\n  };\n\n  d.remove = function (a) {\n    a && a.remove();\n  };\n\n  d.getEffect = function (a) {\n    \">\" == a && (a = \"easeOutSine\");\n    \"<\" == a && (a = \"easeInSine\");\n    \"elastic\" == a && (a = \"easeOutElastic\");\n    return a;\n  };\n\n  d.getObjById = function (a, b) {\n    var c, e;\n\n    for (e = 0; e < a.length; e++) {\n      var d = a[e];\n\n      if (d.id == b) {\n        c = d;\n        break;\n      }\n    }\n\n    return c;\n  };\n\n  d.applyTheme = function (a, b, c) {\n    b || (b = d.theme);\n\n    try {\n      b = JSON.parse(JSON.stringify(b));\n    } catch (e) {}\n\n    b && b[c] && d.extend(a, b[c]);\n  };\n\n  d.isString = function (a) {\n    return \"string\" == typeof a ? !0 : !1;\n  };\n\n  d.extend = function (a, b, c) {\n    var e;\n    a || (a = {});\n\n    for (e in b) {\n      c ? a.hasOwnProperty(e) || (a[e] = b[e]) : a[e] = b[e];\n    }\n\n    return a;\n  };\n\n  d.copyProperties = function (a, b) {\n    for (var c in a) {\n      a.hasOwnProperty(c) && \"events\" != c && void 0 !== a[c] && \"function\" != typeof a[c] && \"cname\" != c && (b[c] = a[c]);\n    }\n  };\n\n  d.processObject = function (a, b, c, e) {\n    if (!1 === a instanceof b && (a = e ? d.extend(new b(c), a) : d.extend(a, new b(c), !0), a.listeners)) for (var g in a.listeners) {\n      b = a.listeners[g], a.addListener(b.event, b.method);\n    }\n    return a;\n  };\n\n  d.fixNewLines = function (a) {\n    var b = RegExp(\"\\\\n\", \"g\");\n    a && (a = a.replace(b, \"<br />\"));\n    return a;\n  };\n\n  d.fixBrakes = function (a) {\n    if (d.isModern) {\n      var b = RegExp(\"<br>\", \"g\");\n      a && (a = a.replace(b, \"\\n\"));\n    } else a = d.fixNewLines(a);\n\n    return a;\n  };\n\n  d.deleteObject = function (a, b) {\n    if (a) {\n      if (void 0 === b || null === b) b = 20;\n      if (0 !== b) if (\"[object Array]\" === Object.prototype.toString.call(a)) for (var c = 0; c < a.length; c++) {\n        d.deleteObject(a[c], b - 1), a[c] = null;\n      } else if (a && !a.tagName) try {\n        for (c in a.theme = null, a) {\n          a[c] && (\"object\" == typeof a[c] && d.deleteObject(a[c], b - 1), \"function\" != typeof a[c] && (a[c] = null));\n        }\n      } catch (e) {}\n    }\n  };\n\n  d.bounce = function (a, b, c, e, d) {\n    return (b /= d) < 1 / 2.75 ? 7.5625 * e * b * b + c : b < 2 / 2.75 ? e * (7.5625 * (b -= 1.5 / 2.75) * b + .75) + c : b < 2.5 / 2.75 ? e * (7.5625 * (b -= 2.25 / 2.75) * b + .9375) + c : e * (7.5625 * (b -= 2.625 / 2.75) * b + .984375) + c;\n  };\n\n  d.easeInOutQuad = function (a, b, c, e, d) {\n    b /= d / 2;\n    if (1 > b) return e / 2 * b * b + c;\n    b--;\n    return -e / 2 * (b * (b - 2) - 1) + c;\n  };\n\n  d.easeInSine = function (a, b, c, e, d) {\n    return -e * Math.cos(b / d * (Math.PI / 2)) + e + c;\n  };\n\n  d.easeOutSine = function (a, b, c, e, d) {\n    return e * Math.sin(b / d * (Math.PI / 2)) + c;\n  };\n\n  d.easeOutElastic = function (a, b, c, e, d) {\n    a = 1.70158;\n    var f = 0,\n        k = e;\n    if (0 === b) return c;\n    if (1 == (b /= d)) return c + e;\n    f || (f = .3 * d);\n    k < Math.abs(e) ? (k = e, a = f / 4) : a = f / (2 * Math.PI) * Math.asin(e / k);\n    return k * Math.pow(2, -10 * b) * Math.sin(2 * (b * d - a) * Math.PI / f) + e + c;\n  };\n\n  d.fixStepE = function (a) {\n    a = a.toExponential(0).split(\"e\");\n    var b = Number(a[1]);\n    9 == Number(a[0]) && b++;\n    return d.generateNumber(1, b);\n  };\n\n  d.generateNumber = function (a, b) {\n    var c = \"\",\n        e;\n    e = 0 > b ? Math.abs(b) - 1 : Math.abs(b);\n    var d;\n\n    for (d = 0; d < e; d++) {\n      c += \"0\";\n    }\n\n    return 0 > b ? Number(\"0.\" + c + String(a)) : Number(String(a) + c);\n  };\n\n  d.setCN = function (a, b, c, e) {\n    if (a.addClassNames && b && (b = b.node) && c) {\n      var d = b.getAttribute(\"class\");\n      a = a.classNamePrefix + \"-\";\n      e && (a = \"\");\n      d ? b.setAttribute(\"class\", d + \" \" + a + c) : b.setAttribute(\"class\", a + c);\n    }\n  };\n\n  d.removeCN = function (a, b, c) {\n    b && (b = b.node) && c && (b = b.classList) && b.remove(a.classNamePrefix + \"-\" + c);\n  };\n\n  d.parseDefs = function (a, b) {\n    for (var c in a) {\n      var e = typeof a[c];\n      if (0 < a[c].length && \"object\" == e) for (var g = 0; g < a[c].length; g++) {\n        e = document.createElementNS(d.SVG_NS, c), b.appendChild(e), d.parseDefs(a[c][g], e);\n      } else \"object\" == e ? (e = document.createElementNS(d.SVG_NS, c), b.appendChild(e), d.parseDefs(a[c], e)) : b.setAttribute(c, a[c]);\n    }\n  };\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.AmDraw = d.Class({\n    construct: function construct(a, b, c, e) {\n      d.SVG_NS = \"http://www.w3.org/2000/svg\";\n      d.SVG_XLINK = \"http://www.w3.org/1999/xlink\";\n      d.hasSVG = !!document.createElementNS && !!document.createElementNS(d.SVG_NS, \"svg\").createSVGRect;\n      1 > b && (b = 10);\n      1 > c && (c = 10);\n      this.div = a;\n      this.width = b;\n      this.height = c;\n      this.rBin = document.createElement(\"div\");\n      d.hasSVG ? (d.SVG = !0, b = this.createSvgElement(\"svg\"), a.appendChild(b), this.container = b, this.addDefs(e), this.R = new d.SVGRenderer(this)) : d.isIE && d.VMLRenderer && (d.VML = !0, d.vmlStyleSheet || (document.namespaces.add(\"amvml\", \"urn:schemas-microsoft-com:vml\"), 31 > document.styleSheets.length ? (b = document.createStyleSheet(), b.addRule(\".amvml\", \"behavior:url(#default#VML); display:inline-block; antialias:true\"), d.vmlStyleSheet = b) : document.styleSheets[0].addRule(\".amvml\", \"behavior:url(#default#VML); display:inline-block; antialias:true\")), this.container = a, this.R = new d.VMLRenderer(this, e), this.R.disableSelection(a));\n    },\n    createSvgElement: function createSvgElement(a) {\n      return document.createElementNS(d.SVG_NS, a);\n    },\n    circle: function circle(a, b, c, e) {\n      var g = new d.AmDObject(\"circle\", this);\n      g.attr({\n        r: c,\n        cx: a,\n        cy: b\n      });\n      this.addToContainer(g.node, e);\n      return g;\n    },\n    ellipse: function ellipse(a, b, c, e, g) {\n      var f = new d.AmDObject(\"ellipse\", this);\n      f.attr({\n        rx: c,\n        ry: e,\n        cx: a,\n        cy: b\n      });\n      this.addToContainer(f.node, g);\n      return f;\n    },\n    setSize: function setSize(a, b) {\n      0 < a && 0 < b && (this.container.style.width = a + \"px\", this.container.style.height = b + \"px\");\n    },\n    rect: function rect(a, b, c, e, g, f, k) {\n      var h = new d.AmDObject(\"rect\", this);\n      d.VML && (g = Math.round(100 * g / Math.min(c, e)), c += 2 * f, e += 2 * f, h.bw = f, h.node.style.marginLeft = -f, h.node.style.marginTop = -f);\n      1 > c && (c = 1);\n      1 > e && (e = 1);\n      h.attr({\n        x: a,\n        y: b,\n        width: c,\n        height: e,\n        rx: g,\n        ry: g,\n        \"stroke-width\": f\n      });\n      this.addToContainer(h.node, k);\n      return h;\n    },\n    image: function image(a, b, c, e, g, f) {\n      var k = new d.AmDObject(\"image\", this);\n      k.attr({\n        x: b,\n        y: c,\n        width: e,\n        height: g\n      });\n      this.R.path(k, a);\n      this.addToContainer(k.node, f);\n      return k;\n    },\n    addToContainer: function addToContainer(a, b) {\n      b || (b = this.container);\n      b.appendChild(a);\n    },\n    text: function text(a, b, c) {\n      return this.R.text(a, b, c);\n    },\n    path: function path(a, b, c, e) {\n      var g = new d.AmDObject(\"path\", this);\n      e || (e = \"100,100\");\n      g.attr({\n        cs: e\n      });\n      c ? g.attr({\n        dd: a\n      }) : g.attr({\n        d: a\n      });\n      this.addToContainer(g.node, b);\n      return g;\n    },\n    set: function set(a) {\n      return this.R.set(a);\n    },\n    remove: function remove(a) {\n      if (a) {\n        var b = this.rBin;\n        b.appendChild(a);\n        b.innerHTML = \"\";\n      }\n    },\n    renderFix: function renderFix() {\n      var a = this.container,\n          b = a.style;\n      b.top = \"0px\";\n      b.left = \"0px\";\n\n      try {\n        var c = a.getBoundingClientRect(),\n            e = c.left - Math.round(c.left),\n            d = c.top - Math.round(c.top);\n        e && (b.left = e + \"px\");\n        d && (b.top = d + \"px\");\n      } catch (f) {}\n    },\n    update: function update() {\n      this.R.update();\n    },\n    addDefs: function addDefs(a) {\n      if (d.hasSVG) {\n        var b = this.createSvgElement(\"desc\"),\n            c = this.container;\n        c.setAttribute(\"version\", \"1.1\");\n        c.style.position = \"absolute\";\n        this.setSize(this.width, this.height);\n\n        if (a.accessibleTitle) {\n          var e = this.createSvgElement(\"text\");\n          c.appendChild(e);\n          e.innerHTML = a.accessibleTitle;\n          e.style.opacity = 0;\n        }\n\n        d.rtl && (c.setAttribute(\"direction\", \"rtl\"), c.style.left = \"auto\", c.style.right = \"0px\");\n        a && (a.addCodeCredits && b.appendChild(document.createTextNode(\"JavaScript chart by amCharts \" + a.version)), a.accessibleDescription && (b.innerHTML = \"\", b.appendChild(document.createTextNode(a.accessibleDescription))), c.appendChild(b), a.defs && (b = this.createSvgElement(\"defs\"), c.appendChild(b), d.parseDefs(a.defs, b), this.defs = b));\n      }\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.AmDObject = d.Class({\n    construct: function construct(a, b) {\n      this.D = b;\n      this.R = b.R;\n      this.node = this.R.create(this, a);\n      this.y = this.x = 0;\n      this.scale = 1;\n    },\n    attr: function attr(a) {\n      this.R.attr(this, a);\n      return this;\n    },\n    getAttr: function getAttr(a) {\n      return this.node.getAttribute(a);\n    },\n    setAttr: function setAttr(a, b) {\n      this.R.setAttr(this, a, b);\n      return this;\n    },\n    clipRect: function clipRect(a, b, c, e) {\n      this.R.clipRect(this, a, b, c, e);\n    },\n    translate: function translate(a, b, c, e) {\n      e || (a = Math.round(a), b = Math.round(b));\n      this.R.move(this, a, b, c);\n      this.x = a;\n      this.y = b;\n      this.scale = c;\n      this.angle && this.rotate(this.angle);\n    },\n    rotate: function rotate(a, b) {\n      this.R.rotate(this, a, b);\n      this.angle = a;\n    },\n    animate: function animate(a, b, c) {\n      for (var e in a) {\n        if (a.hasOwnProperty(e)) {\n          var g = e,\n              f = a[e];\n          c = d.getEffect(c);\n          this.R.animate(this, g, f, b, c);\n        }\n      }\n    },\n    push: function push(a) {\n      if (a) {\n        var b = this.node;\n        b.appendChild(a.node);\n        var c = a.clipPath;\n        c && b.appendChild(c);\n        (a = a.grad) && b.appendChild(a);\n      }\n    },\n    text: function text(a) {\n      this.R.setText(this, a);\n    },\n    remove: function remove() {\n      this.stop();\n      this.R.remove(this);\n    },\n    clear: function clear() {\n      var a = this.node;\n      if (a.hasChildNodes()) for (; 1 <= a.childNodes.length;) {\n        a.removeChild(a.firstChild);\n      }\n    },\n    hide: function hide() {\n      this.setAttr(\"visibility\", \"hidden\");\n    },\n    show: function show() {\n      this.setAttr(\"visibility\", \"visible\");\n    },\n    getBBox: function getBBox() {\n      return this.R.getBBox(this);\n    },\n    toFront: function toFront() {\n      var a = this.node;\n\n      if (a) {\n        this.prevNextNode = a.nextSibling;\n        var b = a.parentNode;\n        b && b.appendChild(a);\n      }\n    },\n    toPrevious: function toPrevious() {\n      var a = this.node;\n      a && this.prevNextNode && (a = a.parentNode) && a.insertBefore(this.prevNextNode, null);\n    },\n    toBack: function toBack() {\n      var a = this.node;\n\n      if (a) {\n        this.prevNextNode = a.nextSibling;\n        var b = a.parentNode;\n\n        if (b) {\n          var c = b.firstChild;\n          c && b.insertBefore(a, c);\n        }\n      }\n    },\n    mouseover: function mouseover(a) {\n      this.R.addListener(this, \"mouseover\", a);\n      return this;\n    },\n    mouseout: function mouseout(a) {\n      this.R.addListener(this, \"mouseout\", a);\n      return this;\n    },\n    click: function click(a) {\n      this.R.addListener(this, \"click\", a);\n      return this;\n    },\n    dblclick: function dblclick(a) {\n      this.R.addListener(this, \"dblclick\", a);\n      return this;\n    },\n    mousedown: function mousedown(a) {\n      this.R.addListener(this, \"mousedown\", a);\n      return this;\n    },\n    mouseup: function mouseup(a) {\n      this.R.addListener(this, \"mouseup\", a);\n      return this;\n    },\n    touchmove: function touchmove(a) {\n      this.R.addListener(this, \"touchmove\", a);\n      return this;\n    },\n    touchstart: function touchstart(a) {\n      this.R.addListener(this, \"touchstart\", a);\n      return this;\n    },\n    touchend: function touchend(a) {\n      this.R.addListener(this, \"touchend\", a);\n      return this;\n    },\n    keyup: function keyup(a) {\n      this.R.addListener(this, \"keyup\", a);\n      return this;\n    },\n    focus: function focus(a) {\n      this.R.addListener(this, \"focus\", a);\n      return this;\n    },\n    blur: function blur(a) {\n      this.R.addListener(this, \"blur\", a);\n      return this;\n    },\n    contextmenu: function contextmenu(a) {\n      this.node.addEventListener ? this.node.addEventListener(\"contextmenu\", a, !0) : this.R.addListener(this, \"contextmenu\", a);\n      return this;\n    },\n    stop: function stop() {\n      d.removeFromArray(this.R.animations, this.an_translate);\n      d.removeFromArray(this.R.animations, this.an_y);\n      d.removeFromArray(this.R.animations, this.an_x);\n    },\n    length: function length() {\n      return this.node.childNodes.length;\n    },\n    gradient: function gradient(a, b, c) {\n      this.R.gradient(this, a, b, c);\n    },\n    pattern: function pattern(a, b, c) {\n      a && this.R.pattern(this, a, b, c);\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.SVGRenderer = d.Class({\n    construct: function construct(a) {\n      this.D = a;\n      this.animations = [];\n    },\n    create: function create(a, b) {\n      return document.createElementNS(d.SVG_NS, b);\n    },\n    attr: function attr(a, b) {\n      for (var c in b) {\n        b.hasOwnProperty(c) && this.setAttr(a, c, b[c]);\n      }\n    },\n    setAttr: function setAttr(a, b, c) {\n      void 0 !== c && a.node.setAttribute(b, c);\n    },\n    animate: function animate(a, b, c, e, g) {\n      a.animationFinished = !1;\n      var f = a.node;\n      a[\"an_\" + b] && d.removeFromArray(this.animations, a[\"an_\" + b]);\n      \"translate\" == b ? (f = (f = f.getAttribute(\"transform\")) ? String(f).substring(10, f.length - 1) : \"0,0\", f = f.split(\", \").join(\" \"), f = f.split(\" \").join(\",\"), 0 === f && (f = \"0,0\")) : f = Number(f.getAttribute(b));\n      c = {\n        obj: a,\n        frame: 0,\n        attribute: b,\n        from: f,\n        to: c,\n        time: e,\n        effect: g\n      };\n      this.animations.push(c);\n      a[\"an_\" + b] = c;\n    },\n    update: function update() {\n      var a,\n          b = this.animations;\n\n      for (a = b.length - 1; 0 <= a; a--) {\n        var c = b[a],\n            e = c.time * d.updateRate,\n            g = c.frame + 1,\n            f = c.obj,\n            k = c.attribute,\n            h,\n            l,\n            m;\n\n        if (g <= e) {\n          c.frame++;\n\n          if (\"translate\" == k) {\n            h = c.from.split(\",\");\n            k = Number(h[0]);\n            h = Number(h[1]);\n            isNaN(h) && (h = 0);\n            l = c.to.split(\",\");\n            m = Number(l[0]);\n            l = Number(l[1]);\n            m = 0 === m - k ? m : Math.round(d[c.effect](0, g, k, m - k, e));\n            c = 0 === l - h ? l : Math.round(d[c.effect](0, g, h, l - h, e));\n            k = \"transform\";\n            if (isNaN(m) || isNaN(c)) continue;\n            c = \"translate(\" + m + \",\" + c + \")\";\n          } else l = Number(c.from), h = Number(c.to), m = h - l, c = d[c.effect](0, g, l, m, e), isNaN(c) && (c = h), 0 === m && this.animations.splice(a, 1);\n\n          this.setAttr(f, k, c);\n        } else \"translate\" == k ? (l = c.to.split(\",\"), m = Number(l[0]), l = Number(l[1]), f.translate(m, l)) : (h = Number(c.to), this.setAttr(f, k, h)), f.animationFinished = !0, this.animations.splice(a, 1);\n      }\n    },\n    getBBox: function getBBox(a) {\n      if (a = a.node) try {\n        return a.getBBox();\n      } catch (b) {}\n      return {\n        width: 0,\n        height: 0,\n        x: 0,\n        y: 0\n      };\n    },\n    path: function path(a, b) {\n      a.node.setAttributeNS(d.SVG_XLINK, \"xlink:href\", b);\n    },\n    clipRect: function clipRect(a, b, c, e, g) {\n      var f = a.node,\n          k = a.clipPath;\n      k && this.D.remove(k);\n      var h = f.parentNode;\n      h && (f = document.createElementNS(d.SVG_NS, \"clipPath\"), k = d.getUniqueId(), f.setAttribute(\"id\", k), this.D.rect(b, c, e, g, 0, 0, f), h.appendChild(f), b = \"#\", d.baseHref && !d.isIE && (b = this.removeTarget(window.location.href) + b), this.setAttr(a, \"clip-path\", \"url(\" + b + k + \")\"), this.clipPathC++, a.clipPath = f);\n    },\n    text: function text(a, b, c) {\n      var e = new d.AmDObject(\"text\", this.D);\n      a = String(a).split(\"\\n\");\n      var g = d.removePx(b[\"font-size\"]),\n          f;\n\n      for (f = 0; f < a.length; f++) {\n        var k = this.create(null, \"tspan\");\n        k.appendChild(document.createTextNode(a[f]));\n        k.setAttribute(\"y\", (g + 2) * f + Math.round(g / 2));\n        k.setAttribute(\"x\", 0);\n        e.node.appendChild(k);\n      }\n\n      e.node.setAttribute(\"y\", Math.round(g / 2));\n      this.attr(e, b);\n      this.D.addToContainer(e.node, c);\n      return e;\n    },\n    setText: function setText(a, b) {\n      var c = a.node;\n      c && (c.removeChild(c.firstChild), c.appendChild(document.createTextNode(b)));\n    },\n    move: function move(a, b, c, e) {\n      isNaN(b) && (b = 0);\n      isNaN(c) && (c = 0);\n      b = \"translate(\" + b + \",\" + c + \")\";\n      e && (b = b + \" scale(\" + e + \")\");\n      this.setAttr(a, \"transform\", b);\n    },\n    rotate: function rotate(a, b) {\n      var c = a.node.getAttribute(\"transform\"),\n          e = \"rotate(\" + b + \")\";\n      c && (e = c + \" \" + e);\n      this.setAttr(a, \"transform\", e);\n    },\n    set: function set(a) {\n      var b = new d.AmDObject(\"g\", this.D);\n      this.D.container.appendChild(b.node);\n\n      if (a) {\n        var c;\n\n        for (c = 0; c < a.length; c++) {\n          b.push(a[c]);\n        }\n      }\n\n      return b;\n    },\n    addListener: function addListener(a, b, c) {\n      a.node[\"on\" + b] = c;\n    },\n    gradient: function gradient(a, b, c, e) {\n      var g = a.node,\n          f = a.grad;\n      f && this.D.remove(f);\n      b = document.createElementNS(d.SVG_NS, b);\n      f = d.getUniqueId();\n      b.setAttribute(\"id\", f);\n\n      if (!isNaN(e)) {\n        var k = 0,\n            h = 0,\n            l = 0,\n            m = 0;\n        90 == e ? l = 100 : 270 == e ? m = 100 : 180 == e ? k = 100 : 0 === e && (h = 100);\n        b.setAttribute(\"x1\", k + \"%\");\n        b.setAttribute(\"x2\", h + \"%\");\n        b.setAttribute(\"y1\", l + \"%\");\n        b.setAttribute(\"y2\", m + \"%\");\n      }\n\n      for (e = 0; e < c.length; e++) {\n        k = document.createElementNS(d.SVG_NS, \"stop\"), h = 100 * e / (c.length - 1), 0 === e && (h = 0), k.setAttribute(\"offset\", h + \"%\"), k.setAttribute(\"stop-color\", c[e]), b.appendChild(k);\n      }\n\n      g.parentNode.appendChild(b);\n      c = \"#\";\n      d.baseHref && !d.isIE && (c = this.removeTarget(window.location.href) + c);\n      g.setAttribute(\"fill\", \"url(\" + c + f + \")\");\n      a.grad = b;\n    },\n    removeTarget: function removeTarget(a) {\n      return a.split(\"#\")[0];\n    },\n    pattern: function pattern(a, b, c, e) {\n      var g = a.node;\n      isNaN(c) && (c = 1);\n      var f = a.patternNode;\n      f && this.D.remove(f);\n      var f = document.createElementNS(d.SVG_NS, \"pattern\"),\n          k = d.getUniqueId(),\n          h = b;\n      b.url && (h = b.url);\n      d.isAbsolute(h) || -1 != h.indexOf(\"data:image\") || (h = e + h);\n      e = Number(b.width);\n      isNaN(e) && (e = 4);\n      var l = Number(b.height);\n      isNaN(l) && (l = 4);\n      e /= c;\n      l /= c;\n      c = b.x;\n      isNaN(c) && (c = 0);\n      var m = -Math.random() * Number(b.randomX);\n      isNaN(m) || (c = m);\n      m = b.y;\n      isNaN(m) && (m = 0);\n      var n = -Math.random() * Number(b.randomY);\n      isNaN(n) || (m = n);\n      f.setAttribute(\"id\", k);\n      f.setAttribute(\"width\", e);\n      f.setAttribute(\"height\", l);\n      f.setAttribute(\"patternUnits\", \"userSpaceOnUse\");\n      f.setAttribute(\"xlink:href\", h);\n      b.color && (n = document.createElementNS(d.SVG_NS, \"rect\"), n.setAttributeNS(null, \"height\", e), n.setAttributeNS(null, \"width\", l), n.setAttributeNS(null, \"fill\", b.color), f.appendChild(n));\n      this.D.image(h, 0, 0, e, l, f).translate(c, m);\n      h = \"#\";\n      d.baseHref && !d.isIE && (h = this.removeTarget(window.location.href) + h);\n      g.setAttribute(\"fill\", \"url(\" + h + k + \")\");\n      a.patternNode = f;\n      g.parentNode.appendChild(f);\n    },\n    remove: function remove(a) {\n      a.clipPath && this.D.remove(a.clipPath);\n      a.grad && this.D.remove(a.grad);\n      a.patternNode && this.D.remove(a.patternNode);\n      this.D.remove(a.node);\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.AmChart = d.Class({\n    construct: function construct(a) {\n      this.svgIcons = this.tapToActivate = !0;\n      this.theme = a;\n      this.classNamePrefix = \"amcharts\";\n      this.addClassNames = !1;\n      this.version = \"3.21.14\";\n      d.addChart(this);\n      this.createEvents(\"buildStarted\", \"dataUpdated\", \"init\", \"rendered\", \"drawn\", \"failed\", \"resized\", \"animationFinished\");\n      this.height = this.width = \"100%\";\n      this.dataChanged = !0;\n      this.chartCreated = !1;\n      this.previousWidth = this.previousHeight = 0;\n      this.backgroundColor = \"#FFFFFF\";\n      this.borderAlpha = this.backgroundAlpha = 0;\n      this.color = this.borderColor = \"#000000\";\n      this.fontFamily = \"Verdana\";\n      this.fontSize = 11;\n      this.usePrefixes = !1;\n      this.autoResize = !0;\n      this.autoDisplay = !1;\n      this.addCodeCredits = this.accessible = !0;\n      this.touchStartTime = this.touchClickDuration = 0;\n      this.precision = -1;\n      this.percentPrecision = 2;\n      this.decimalSeparator = \".\";\n      this.thousandsSeparator = \",\";\n      this.labels = [];\n      this.allLabels = [];\n      this.titles = [];\n      this.marginRight = this.marginLeft = this.autoMarginOffset = 0;\n      this.timeOuts = [];\n      this.creditsPosition = \"top-left\";\n      var b = document.createElement(\"div\"),\n          c = b.style;\n      c.overflow = \"hidden\";\n      c.position = \"relative\";\n      c.textAlign = \"left\";\n      this.chartDiv = b;\n      b = document.createElement(\"div\");\n      c = b.style;\n      c.overflow = \"hidden\";\n      c.position = \"relative\";\n      c.textAlign = \"left\";\n      this.legendDiv = b;\n      this.titleHeight = 0;\n      this.hideBalloonTime = 150;\n      this.handDrawScatter = 2;\n      this.cssScale = this.handDrawThickness = 1;\n      this.cssAngle = 0;\n      this.prefixesOfBigNumbers = [{\n        number: 1E3,\n        prefix: \"k\"\n      }, {\n        number: 1E6,\n        prefix: \"M\"\n      }, {\n        number: 1E9,\n        prefix: \"G\"\n      }, {\n        number: 1E12,\n        prefix: \"T\"\n      }, {\n        number: 1E15,\n        prefix: \"P\"\n      }, {\n        number: 1E18,\n        prefix: \"E\"\n      }, {\n        number: 1E21,\n        prefix: \"Z\"\n      }, {\n        number: 1E24,\n        prefix: \"Y\"\n      }];\n      this.prefixesOfSmallNumbers = [{\n        number: 1E-24,\n        prefix: \"y\"\n      }, {\n        number: 1E-21,\n        prefix: \"z\"\n      }, {\n        number: 1E-18,\n        prefix: \"a\"\n      }, {\n        number: 1E-15,\n        prefix: \"f\"\n      }, {\n        number: 1E-12,\n        prefix: \"p\"\n      }, {\n        number: 1E-9,\n        prefix: \"n\"\n      }, {\n        number: 1E-6,\n        prefix: \"\\u03BC\"\n      }, {\n        number: .001,\n        prefix: \"m\"\n      }];\n      this.panEventsEnabled = !0;\n      this.product = \"amcharts\";\n      this.animations = [];\n      this.balloon = new d.AmBalloon(this.theme);\n      this.balloon.chart = this;\n      this.processTimeout = 0;\n      this.processCount = 1E3;\n      this.animatable = [];\n      this.langObj = {};\n      d.applyTheme(this, a, \"AmChart\");\n    },\n    drawChart: function drawChart() {\n      0 < this.realWidth && 0 < this.realHeight && (this.drawBackground(), this.redrawLabels(), this.drawTitles(), this.brr(), this.renderFix(), this.chartDiv && (this.boundingRect = this.chartDiv.getBoundingClientRect()));\n    },\n    makeAccessible: function makeAccessible(a, b, c) {\n      this.accessible && a && (c && a.setAttr(\"role\", c), a.setAttr(\"aria-label\", b));\n    },\n    drawBackground: function drawBackground() {\n      d.remove(this.background);\n      var a = this.container,\n          b = this.backgroundColor,\n          c = this.backgroundAlpha,\n          e = this.set;\n      d.isModern || 0 !== c || (c = .001);\n      var g = this.updateWidth();\n      this.realWidth = g;\n      var f = this.updateHeight();\n      this.realHeight = f;\n      b = d.polygon(a, [0, g - 1, g - 1, 0], [0, 0, f - 1, f - 1], b, c, 1, this.borderColor, this.borderAlpha);\n      d.setCN(this, b, \"bg\");\n      this.background = b;\n      e.push(b);\n      if (b = this.backgroundImage) a = a.image(b, 0, 0, g, f), d.setCN(this, b, \"bg-image\"), this.bgImg = a, e.push(a);\n    },\n    drawTitles: function drawTitles(a) {\n      var b = this.titles;\n      this.titleHeight = 0;\n\n      if (d.ifArray(b)) {\n        var c = 20,\n            e;\n\n        for (e = 0; e < b.length; e++) {\n          var g = b[e],\n              g = d.processObject(g, d.Title, this.theme);\n\n          if (!1 !== g.enabled) {\n            var f = g.color;\n            void 0 === f && (f = this.color);\n            var k = g.size;\n            isNaN(k) && (k = this.fontSize + 2);\n            isNaN(g.alpha);\n            var h = this.marginLeft,\n                l = !0;\n            void 0 !== g.bold && (l = g.bold);\n            f = d.wrappedText(this.container, g.text, f, this.fontFamily, k, \"middle\", l, this.realWidth - 35 - this.marginRight - h);\n            f.translate(h + (this.realWidth - this.marginRight - h) / 2, c);\n            f.node.style.pointerEvents = \"none\";\n            g.sprite = f;\n            void 0 !== g.tabIndex && f.setAttr(\"tabindex\", g.tabIndex);\n            d.setCN(this, f, \"title\");\n            g.id && d.setCN(this, f, \"title-\" + g.id);\n            f.attr({\n              opacity: g.alpha\n            });\n            c += f.getBBox().height + 5;\n            a ? f.remove() : this.freeLabelsSet.push(f);\n          }\n        }\n\n        this.titleHeight = c - 10;\n      }\n    },\n    write: function write(a) {\n      var b = this;\n      if (b.listeners) for (var c = 0; c < b.listeners.length; c++) {\n        var e = b.listeners[c];\n        b.addListener(e.event, e.method);\n      }\n      b.fire({\n        type: \"buildStarted\",\n        chart: b\n      });\n      b.afterWriteTO && clearTimeout(b.afterWriteTO);\n      0 < b.processTimeout ? b.afterWriteTO = setTimeout(function () {\n        b.afterWrite.call(b, a);\n      }, b.processTimeout) : b.afterWrite(a);\n    },\n    afterWrite: function afterWrite(a) {\n      var b;\n\n      if (b = \"object\" != typeof a ? document.getElementById(a) : a) {\n        for (; b.firstChild;) {\n          b.removeChild(b.firstChild);\n        }\n\n        this.div = b;\n        b.style.overflow = \"hidden\";\n        b.style.textAlign = \"left\";\n        a = this.chartDiv;\n        var c = this.legendDiv,\n            e = this.legend,\n            g = c.style,\n            f = a.style;\n        this.measure();\n        this.previousHeight = this.divRealHeight;\n        this.previousWidth = this.divRealWidth;\n        var k,\n            h = document.createElement(\"div\");\n        k = h.style;\n        k.position = \"relative\";\n        this.containerDiv = h;\n        h.className = this.classNamePrefix + \"-main-div\";\n        a.className = this.classNamePrefix + \"-chart-div\";\n        b.appendChild(h);\n        (b = this.exportConfig) && d.AmExport && !this.AmExport && (this.AmExport = new d.AmExport(this, b));\n        this.amExport && d.AmExport && (this.AmExport = d.extend(this.amExport, new d.AmExport(this), !0));\n        this.AmExport && this.AmExport.init && this.AmExport.init();\n\n        if (e) {\n          e = this.addLegend(e, e.divId);\n          if (e.enabled) switch (g.left = null, g.top = null, g.right = null, f.left = null, f.right = null, f.top = null, g.position = \"relative\", f.position = \"relative\", k.width = \"100%\", k.height = \"100%\", e.position) {\n            case \"bottom\":\n              h.appendChild(a);\n              h.appendChild(c);\n              break;\n\n            case \"top\":\n              h.appendChild(c);\n              h.appendChild(a);\n              break;\n\n            case \"absolute\":\n              g.position = \"absolute\";\n              f.position = \"absolute\";\n              void 0 !== e.left && (g.left = e.left + \"px\");\n              void 0 !== e.right && (g.right = e.right + \"px\");\n              void 0 !== e.top && (g.top = e.top + \"px\");\n              void 0 !== e.bottom && (g.bottom = e.bottom + \"px\");\n              e.marginLeft = 0;\n              e.marginRight = 0;\n              h.appendChild(a);\n              h.appendChild(c);\n              break;\n\n            case \"right\":\n              g.position = \"relative\";\n              f.position = \"absolute\";\n              h.appendChild(a);\n              h.appendChild(c);\n              break;\n\n            case \"left\":\n              g.position = \"absolute\";\n              f.position = \"relative\";\n              h.appendChild(a);\n              h.appendChild(c);\n              break;\n\n            case \"outside\":\n              h.appendChild(a);\n          } else h.appendChild(a);\n          this.prevLegendPosition = e.position;\n        } else h.appendChild(a);\n\n        this.listenersAdded || (this.addListeners(), this.listenersAdded = !0);\n        (this.mouseWheelScrollEnabled || this.mouseWheelZoomEnabled) && d.addWheelListeners();\n        this.initChart();\n      }\n    },\n    createLabelsSet: function createLabelsSet() {\n      d.remove(this.labelsSet);\n      this.labelsSet = this.container.set();\n      this.freeLabelsSet.push(this.labelsSet);\n    },\n    initChart: function initChart() {\n      this.balloon = d.processObject(this.balloon, d.AmBalloon, this.theme);\n      window.AmCharts_path && (this.path = window.AmCharts_path);\n      void 0 === this.path && (this.path = d.getPath());\n      void 0 === this.path && (this.path = \"amcharts/\");\n      this.path = d.normalizeUrl(this.path);\n      void 0 === this.pathToImages && (this.pathToImages = this.path + \"images/\");\n      this.initHC || (d.callInitHandler(this), this.initHC = !0);\n      d.applyLang(this.language, this);\n      var a = this.numberFormatter;\n      a && (isNaN(a.precision) || (this.precision = a.precision), void 0 !== a.thousandsSeparator && (this.thousandsSeparator = a.thousandsSeparator), void 0 !== a.decimalSeparator && (this.decimalSeparator = a.decimalSeparator));\n      (a = this.percentFormatter) && !isNaN(a.precision) && (this.percentPrecision = a.precision);\n      this.nf = {\n        precision: this.precision,\n        thousandsSeparator: this.thousandsSeparator,\n        decimalSeparator: this.decimalSeparator\n      };\n      this.pf = {\n        precision: this.percentPrecision,\n        thousandsSeparator: this.thousandsSeparator,\n        decimalSeparator: this.decimalSeparator\n      };\n      this.destroy();\n      (a = this.container) ? (a.container.innerHTML = \"\", a.width = this.realWidth, a.height = this.realHeight, a.addDefs(this), this.chartDiv.appendChild(a.container)) : a = new d.AmDraw(this.chartDiv, this.realWidth, this.realHeight, this);\n      this.container = a;\n      this.extension = \".png\";\n      this.svgIcons && d.SVG && (this.extension = \".svg\");\n      this.checkDisplay();\n      this.checkTransform(this.div);\n      a.chart = this;\n      d.VML || d.SVG ? (a.handDrawn = this.handDrawn, a.handDrawScatter = this.handDrawScatter, a.handDrawThickness = this.handDrawThickness, d.remove(this.set), this.set = a.set(), d.remove(this.gridSet), this.gridSet = a.set(), d.remove(this.cursorLineSet), this.cursorLineSet = a.set(), d.remove(this.graphsBehindSet), this.graphsBehindSet = a.set(), d.remove(this.bulletBehindSet), this.bulletBehindSet = a.set(), d.remove(this.columnSet), this.columnSet = a.set(), d.remove(this.graphsSet), this.graphsSet = a.set(), d.remove(this.trendLinesSet), this.trendLinesSet = a.set(), d.remove(this.axesSet), this.axesSet = a.set(), d.remove(this.cursorSet), this.cursorSet = a.set(), d.remove(this.scrollbarsSet), this.scrollbarsSet = a.set(), d.remove(this.bulletSet), this.bulletSet = a.set(), d.remove(this.freeLabelsSet), this.freeLabelsSet = a.set(), d.remove(this.axesLabelsSet), this.axesLabelsSet = a.set(), d.remove(this.balloonsSet), this.balloonsSet = a.set(), d.remove(this.plotBalloonsSet), this.plotBalloonsSet = a.set(), d.remove(this.zoomButtonSet), this.zoomButtonSet = a.set(), d.remove(this.zbSet), this.zbSet = null, d.remove(this.linkSet), this.linkSet = a.set()) : this.fire({\n        type: \"failed\",\n        chart: this\n      });\n    },\n    premeasure: function premeasure() {\n      var a = this.div;\n\n      if (a) {\n        try {\n          this.boundingRect = this.chartDiv.getBoundingClientRect();\n        } catch (e) {}\n\n        var b = a.offsetWidth,\n            c = a.offsetHeight;\n        a.clientHeight && (b = a.clientWidth, c = a.clientHeight);\n        if (b != this.mw || c != this.mh) this.mw = b, this.mh = c, this.measure();\n      }\n    },\n    measure: function measure() {\n      var a = this.div;\n\n      if (a) {\n        var b = this.chartDiv,\n            c = a.offsetWidth,\n            e = a.offsetHeight,\n            g = this.container;\n        a.clientHeight && (c = a.clientWidth, e = a.clientHeight);\n        var e = Math.round(e),\n            c = Math.round(c),\n            a = Math.round(d.toCoordinate(this.width, c)),\n            f = Math.round(d.toCoordinate(this.height, e));\n        (c != this.previousWidth || e != this.previousHeight) && 0 < a && 0 < f && (b.style.width = a + \"px\", b.style.height = f + \"px\", b.style.padding = 0, g && g.setSize(a, f), this.balloon = d.processObject(this.balloon, d.AmBalloon, this.theme));\n        this.balloon && this.balloon.setBounds && this.balloon.setBounds(2, 2, a - 2, f);\n        this.updateWidth();\n        this.balloon.chart = this;\n        this.realWidth = a;\n        this.realHeight = f;\n        this.divRealWidth = c;\n        this.divRealHeight = e;\n      }\n    },\n    checkDisplay: function checkDisplay() {\n      if (this.autoDisplay && this.container) {\n        var a = d.rect(this.container, 10, 10),\n            b = a.getBBox();\n        0 === b.width && 0 === b.height && (this.divRealHeight = this.divRealWidth = this.realHeight = this.realWidth = 0, this.previousWidth = this.previousHeight = NaN);\n        a.remove();\n      }\n    },\n    checkTransform: function checkTransform(a) {\n      if (this.autoTransform && window.getComputedStyle && a) {\n        if (a.style) {\n          var b = window.getComputedStyle(a, null);\n\n          if (b && (b = b.getPropertyValue(\"-webkit-transform\") || b.getPropertyValue(\"-moz-transform\") || b.getPropertyValue(\"-ms-transform\") || b.getPropertyValue(\"-o-transform\") || b.getPropertyValue(\"transform\")) && \"none\" !== b) {\n            var c = b.split(\"(\")[1].split(\")\")[0].split(\",\"),\n                b = c[0],\n                c = c[1],\n                b = Math.sqrt(b * b + c * c);\n            isNaN(b) || (this.cssScale *= b);\n          }\n        }\n\n        a.parentNode && this.checkTransform(a.parentNode);\n      }\n    },\n    destroy: function destroy() {\n      this.chartDiv.innerHTML = \"\";\n      this.clearTimeOuts();\n      this.legend && this.legend.destroy && this.legend.destroy();\n    },\n    clearTimeOuts: function clearTimeOuts() {\n      var a = this.timeOuts;\n\n      if (a) {\n        var b;\n\n        for (b = 0; b < a.length; b++) {\n          clearTimeout(a[b]);\n        }\n      }\n\n      this.timeOuts = [];\n    },\n    clear: function clear(a) {\n      try {\n        document.removeEventListener(\"touchstart\", this.docfn1, !0), document.removeEventListener(\"touchend\", this.docfn2, !0);\n      } catch (b) {}\n\n      d.callMethod(\"clear\", [this.chartScrollbar, this.scrollbarV, this.scrollbarH, this.chartCursor]);\n      this.chartCursor = this.scrollbarH = this.scrollbarV = this.chartScrollbar = null;\n      this.clearTimeOuts();\n      this.container && (this.container.remove(this.chartDiv), this.container.remove(this.legendDiv));\n      a || d.removeChart(this);\n      if (a = this.div) for (; a.firstChild;) {\n        a.removeChild(a.firstChild);\n      }\n      this.legend && this.legend.destroy && this.legend.destroy();\n      this.AmExport && this.AmExport.clear && this.AmExport.clear();\n    },\n    setMouseCursor: function setMouseCursor(a) {\n      \"auto\" == a && d.isNN && (a = \"default\");\n      this.chartDiv.style.cursor = a;\n      this.legendDiv.style.cursor = a;\n    },\n    redrawLabels: function redrawLabels() {\n      this.labels = [];\n      var a = this.allLabels;\n      this.createLabelsSet();\n      var b;\n\n      for (b = 0; b < a.length; b++) {\n        this.drawLabel(a[b]);\n      }\n    },\n    drawLabel: function drawLabel(a) {\n      var b = this;\n\n      if (b.container && !1 !== a.enabled) {\n        a = d.processObject(a, d.Label, b.theme);\n        var c = a.y,\n            e = a.text,\n            g = a.align,\n            f = a.size,\n            k = a.color,\n            h = a.rotation,\n            l = a.alpha,\n            m = a.bold,\n            n = d.toCoordinate(a.x, b.realWidth),\n            c = d.toCoordinate(c, b.realHeight);\n        n || (n = 0);\n        c || (c = 0);\n        void 0 === k && (k = b.color);\n        isNaN(f) && (f = b.fontSize);\n        g || (g = \"start\");\n        \"left\" == g && (g = \"start\");\n        \"right\" == g && (g = \"end\");\n        \"center\" == g && (g = \"middle\", h ? c = b.realHeight - c + c / 2 : n = b.realWidth / 2 - n);\n        void 0 === l && (l = 1);\n        void 0 === h && (h = 0);\n        c += f / 2;\n        e = d.text(b.container, e, k, b.fontFamily, f, g, m, l);\n        e.translate(n, c);\n        void 0 !== a.tabIndex && e.setAttr(\"tabindex\", a.tabIndex);\n        d.setCN(b, e, \"label\");\n        a.id && d.setCN(b, e, \"label-\" + a.id);\n        0 !== h && e.rotate(h);\n        a.url ? (e.setAttr(\"cursor\", \"pointer\"), e.click(function () {\n          d.getURL(a.url, b.urlTarget);\n        })) : e.node.style.pointerEvents = \"none\";\n        b.labelsSet.push(e);\n        b.labels.push(e);\n      }\n    },\n    addLabel: function addLabel(a, b, c, e, d, f, k, h, l, m) {\n      a = {\n        x: a,\n        y: b,\n        text: c,\n        align: e,\n        size: d,\n        color: f,\n        alpha: h,\n        rotation: k,\n        bold: l,\n        url: m,\n        enabled: !0\n      };\n      this.container && this.drawLabel(a);\n      this.allLabels.push(a);\n    },\n    clearLabels: function clearLabels() {\n      var a = this.labels,\n          b;\n\n      for (b = a.length - 1; 0 <= b; b--) {\n        a[b].remove();\n      }\n\n      this.labels = [];\n      this.allLabels = [];\n    },\n    updateHeight: function updateHeight() {\n      var a = this.divRealHeight,\n          b = this.legend;\n\n      if (b) {\n        var c = this.legendDiv.offsetHeight,\n            b = b.position;\n\n        if (\"top\" == b || \"bottom\" == b) {\n          a -= c;\n          if (0 > a || isNaN(a)) a = 0;\n          this.chartDiv.style.height = a + \"px\";\n        }\n      }\n\n      return a;\n    },\n    updateWidth: function updateWidth() {\n      var a = this.divRealWidth,\n          b = this.divRealHeight,\n          c = this.legend;\n\n      if (c) {\n        var e = this.legendDiv,\n            d = e.offsetWidth;\n        isNaN(c.width) || (d = c.width);\n        c.ieW && (d = c.ieW);\n        var f = e.offsetHeight,\n            e = e.style,\n            k = this.chartDiv.style,\n            h = c.position;\n\n        if ((\"right\" == h || \"left\" == h) && void 0 === c.divId) {\n          a -= d;\n          if (0 > a || isNaN(a)) a = 0;\n          k.width = a + \"px\";\n          this.balloon && this.balloon.setBounds && this.balloon.setBounds(2, 2, a - 2, this.realHeight);\n          \"left\" == h ? (k.left = d + \"px\", e.left = \"0px\") : (k.left = \"0px\", e.left = a + \"px\");\n          b > f && (e.top = (b - f) / 2 + \"px\");\n        }\n      }\n\n      return a;\n    },\n    getTitleHeight: function getTitleHeight() {\n      this.drawTitles(!0);\n      return this.titleHeight;\n    },\n    addTitle: function addTitle(a, b, c, e, d) {\n      isNaN(b) && (b = this.fontSize + 2);\n      a = {\n        text: a,\n        size: b,\n        color: c,\n        alpha: e,\n        bold: d,\n        enabled: !0\n      };\n      this.titles.push(a);\n      return a;\n    },\n    handleWheel: function handleWheel(a) {\n      var b = 0;\n      a || (a = window.event);\n      a.wheelDelta ? b = a.wheelDelta / 120 : a.detail && (b = -a.detail / 3);\n      b && this.handleWheelReal(b, a.shiftKey);\n      a.preventDefault && a.preventDefault();\n    },\n    handleWheelReal: function handleWheelReal() {},\n    handleDocTouchStart: function handleDocTouchStart() {\n      this.handleMouseMove();\n      this.tmx = this.mouseX;\n      this.tmy = this.mouseY;\n      this.touchStartTime = new Date().getTime();\n    },\n    handleDocTouchEnd: function handleDocTouchEnd() {\n      -.5 < this.tmx && this.tmx < this.divRealWidth + 1 && 0 < this.tmy && this.tmy < this.divRealHeight ? (this.handleMouseMove(), 4 > Math.abs(this.mouseX - this.tmx) && 4 > Math.abs(this.mouseY - this.tmy) ? (this.tapped = !0, this.panRequired && this.panEventsEnabled && this.chartDiv && (this.chartDiv.style.msTouchAction = \"none\", this.chartDiv.style.touchAction = \"none\")) : this.mouseIsOver || this.resetTouchStyle()) : (this.tapped = !1, this.resetTouchStyle());\n    },\n    resetTouchStyle: function resetTouchStyle() {\n      this.panEventsEnabled && this.chartDiv && (this.chartDiv.style.msTouchAction = \"auto\", this.chartDiv.style.touchAction = \"auto\");\n    },\n    checkTouchDuration: function checkTouchDuration(a) {\n      var b = this,\n          c = new Date().getTime();\n      if (a) if (a.touches) b.isTouchEvent = !0;else if (!b.isTouchEvent) return !0;\n      if (c - b.touchStartTime > b.touchClickDuration) return !0;\n      setTimeout(function () {\n        b.resetTouchDuration();\n      }, 300);\n    },\n    resetTouchDuration: function resetTouchDuration() {\n      this.isTouchEvent = !1;\n    },\n    checkTouchMoved: function checkTouchMoved() {\n      if (4 < Math.abs(this.mouseX - this.tmx) || 4 < Math.abs(this.mouseY - this.tmy)) return !0;\n    },\n    addListeners: function addListeners() {\n      var a = this,\n          b = a.chartDiv;\n      document.addEventListener ? (\"ontouchstart\" in document.documentElement && (b.addEventListener(\"touchstart\", function (b) {\n        a.handleTouchStart.call(a, b);\n      }, !0), b.addEventListener(\"touchmove\", function (b) {\n        a.handleMouseMove.call(a, b);\n      }, !0), b.addEventListener(\"touchend\", function (b) {\n        a.handleTouchEnd.call(a, b);\n      }, !0), a.docfn1 = function (b) {\n        a.handleDocTouchStart.call(a, b);\n      }, a.docfn2 = function (b) {\n        a.handleDocTouchEnd.call(a, b);\n      }, document.addEventListener(\"touchstart\", a.docfn1, !0), document.addEventListener(\"touchend\", a.docfn2, !0)), b.addEventListener(\"mousedown\", function (b) {\n        a.mouseIsOver = !0;\n        a.handleMouseMove.call(a, b);\n        a.handleMouseDown.call(a, b);\n        a.handleDocTouchStart.call(a, b);\n      }, !0), b.addEventListener(\"mouseover\", function (b) {\n        a.handleMouseOver.call(a, b);\n      }, !0), b.addEventListener(\"mouseout\", function (b) {\n        a.handleMouseOut.call(a, b);\n      }, !0), b.addEventListener(\"mouseup\", function (b) {\n        a.handleDocTouchEnd.call(a, b);\n      }, !0)) : (b.attachEvent(\"onmousedown\", function (b) {\n        a.handleMouseDown.call(a, b);\n      }), b.attachEvent(\"onmouseover\", function (b) {\n        a.handleMouseOver.call(a, b);\n      }), b.attachEvent(\"onmouseout\", function (b) {\n        a.handleMouseOut.call(a, b);\n      }));\n    },\n    dispDUpd: function dispDUpd() {\n      this.skipEvents || (this.dispatchDataUpdated && (this.dispatchDataUpdated = !1, this.fire({\n        type: \"dataUpdated\",\n        chart: this\n      })), this.chartCreated || (this.chartCreated = !0, this.fire({\n        type: \"init\",\n        chart: this\n      })), !this.chartRendered && 0 < this.divRealWidth && 0 < this.divRealHeight && (this.fire({\n        type: \"rendered\",\n        chart: this\n      }), this.chartRendered = !0), this.fire({\n        type: \"drawn\",\n        chart: this\n      }));\n      this.skipEvents = !1;\n    },\n    validateSize: function validateSize() {\n      var a = this;\n      a.premeasure();\n      a.checkDisplay();\n      a.cssScale = 1;\n      a.cssAngle = 0;\n      a.checkTransform(a.div);\n\n      if (a.divRealWidth != a.previousWidth || a.divRealHeight != a.previousHeight) {\n        var b = a.legend;\n\n        if (0 < a.realWidth && 0 < a.realHeight) {\n          a.sizeChanged = !0;\n\n          if (b) {\n            a.legendInitTO && clearTimeout(a.legendInitTO);\n            var c = setTimeout(function () {\n              b.invalidateSize();\n            }, 10);\n            a.timeOuts.push(c);\n            a.legendInitTO = c;\n          }\n\n          a.marginsUpdated = !1;\n          clearTimeout(a.initTO);\n          c = setTimeout(function () {\n            a.initChart();\n          }, 10);\n          a.timeOuts.push(c);\n          a.initTO = c;\n        }\n\n        a.renderFix();\n        b && b.renderFix && b.renderFix();\n        a.positionCred();\n        clearTimeout(a.resizedTO);\n        a.resizedTO = setTimeout(function () {\n          a.fire({\n            type: \"resized\",\n            chart: a\n          });\n        }, 10);\n        a.previousHeight = a.divRealHeight;\n        a.previousWidth = a.divRealWidth;\n      }\n    },\n    invalidateSize: function invalidateSize() {\n      this.previousHeight = this.previousWidth = NaN;\n      this.invalidateSizeReal();\n    },\n    invalidateSizeReal: function invalidateSizeReal() {\n      var a = this;\n      a.marginsUpdated = !1;\n      clearTimeout(a.validateTO);\n      var b = setTimeout(function () {\n        a.validateSize();\n      }, 5);\n      a.timeOuts.push(b);\n      a.validateTO = b;\n    },\n    validateData: function validateData(a) {\n      this.chartCreated && (this.dataChanged = !0, this.marginsUpdated = !1, this.initChart(a));\n    },\n    validateNow: function validateNow(a, b) {\n      this.initTO && clearTimeout(this.initTO);\n      a && (this.dataChanged = !0, this.marginsUpdated = !1);\n      this.skipEvents = b;\n      this.chartRendered = !1;\n      var c = this.legend;\n      c && c.position != this.prevLegendPosition && (this.previousWidth = this.mw = 0, c.invalidateSize && (c.invalidateSize(), this.validateSize()));\n      this.write(this.div);\n    },\n    showItem: function showItem(a) {\n      a.hidden = !1;\n      this.initChart();\n    },\n    hideItem: function hideItem(a) {\n      a.hidden = !0;\n      this.initChart();\n    },\n    hideBalloon: function hideBalloon() {\n      var a = this;\n      clearTimeout(a.hoverInt);\n      clearTimeout(a.balloonTO);\n      a.hoverInt = setTimeout(function () {\n        a.hideBalloonReal.call(a);\n      }, a.hideBalloonTime);\n    },\n    cleanChart: function cleanChart() {},\n    hideBalloonReal: function hideBalloonReal() {\n      var a = this.balloon;\n      a && a.hide && a.hide();\n    },\n    showBalloon: function showBalloon(a, b, c, e, d) {\n      var f = this;\n      clearTimeout(f.balloonTO);\n      clearTimeout(f.hoverInt);\n      f.balloonTO = setTimeout(function () {\n        f.showBalloonReal.call(f, a, b, c, e, d);\n      }, 1);\n    },\n    showBalloonReal: function showBalloonReal(a, b, c, e, d) {\n      this.handleMouseMove();\n      var f = this.balloon;\n      f.enabled && (f.followCursor(!1), f.changeColor(b), !c || f.fixedPosition ? (f.setPosition(e, d), isNaN(e) || isNaN(d) ? f.followCursor(!0) : f.followCursor(!1)) : f.followCursor(!0), a && f.showBalloon(a));\n    },\n    handleMouseOver: function handleMouseOver() {\n      this.outTO && clearTimeout(this.outTO);\n      d.resetMouseOver();\n      this.mouseIsOver = !0;\n    },\n    handleMouseOut: function handleMouseOut() {\n      var a = this;\n      d.resetMouseOver();\n      a.outTO && clearTimeout(a.outTO);\n      a.outTO = setTimeout(function () {\n        a.handleMouseOutReal();\n      }, 10);\n    },\n    handleMouseOutReal: function handleMouseOutReal() {\n      this.mouseIsOver = !1;\n    },\n    handleMouseMove: function handleMouseMove(a) {\n      a || (a = window.event);\n      this.mouse2Y = this.mouse2X = NaN;\n      var b, c, e, d;\n\n      if (a) {\n        if (a.touches) {\n          var f = a.touches.item(1);\n          f && this.panEventsEnabled && this.boundingRect && (e = f.clientX - this.boundingRect.left, d = f.clientY - this.boundingRect.top);\n          a = a.touches.item(0);\n          if (!a) return;\n        } else this.wasTouched = !1;\n\n        this.boundingRect && a.clientX && (b = a.clientX - this.boundingRect.left, c = a.clientY - this.boundingRect.top);\n        isNaN(e) ? this.mouseX = b : (this.mouseX = Math.min(b, e), this.mouse2X = Math.max(b, e));\n        isNaN(d) ? this.mouseY = c : (this.mouseY = Math.min(c, d), this.mouse2Y = Math.max(c, d));\n        this.autoTransform && (this.mouseX /= this.cssScale, this.mouseY /= this.cssScale);\n      }\n    },\n    handleTouchStart: function handleTouchStart(a) {\n      this.hideBalloonReal();\n      a && (a.touches && this.tapToActivate && !this.tapped || !this.panRequired) || (this.handleMouseMove(a), this.handleMouseDown(a));\n    },\n    handleTouchEnd: function handleTouchEnd(a) {\n      this.wasTouched = !0;\n      this.handleMouseMove(a);\n      d.resetMouseOver();\n      this.handleReleaseOutside(a);\n    },\n    handleReleaseOutside: function handleReleaseOutside() {\n      this.handleDocTouchEnd.call(this);\n    },\n    handleMouseDown: function handleMouseDown(a) {\n      d.resetMouseOver();\n      this.mouseIsOver = !0;\n      a && a.preventDefault && (this.panEventsEnabled ? a.preventDefault() : a.touches || a.preventDefault());\n    },\n    handleKeyUp: function handleKeyUp(a) {},\n    addLegend: function addLegend(a, b) {\n      a = d.processObject(a, d.AmLegend, this.theme);\n      a.divId = b;\n      a.ieW = 0;\n      var c;\n      c = \"object\" != typeof b && b ? document.getElementById(b) : b;\n      this.legend = a;\n      a.chart = this;\n      c ? (a.div = c, a.position = \"outside\", a.autoMargins = !1) : a.div = this.legendDiv;\n      return a;\n    },\n    removeLegend: function removeLegend() {\n      this.legend = void 0;\n      this.previousWidth = 0;\n      this.legendDiv.innerHTML = \"\";\n    },\n    handleResize: function handleResize() {\n      (d.isPercents(this.width) || d.isPercents(this.height)) && this.invalidateSizeReal();\n      this.renderFix();\n    },\n    renderFix: function renderFix() {\n      if (!d.VML) {\n        var a = this.container;\n        a && a.renderFix();\n      }\n    },\n    getSVG: function getSVG() {\n      if (d.hasSVG) return this.container;\n    },\n    animate: function animate(a, b, c, e, g, f, k) {\n      a[\"an_\" + b] && d.removeFromArray(this.animations, a[\"an_\" + b]);\n      c = {\n        obj: a,\n        frame: 0,\n        attribute: b,\n        from: c,\n        to: e,\n        time: g,\n        effect: f,\n        suffix: k\n      };\n      a[\"an_\" + b] = c;\n      this.animations.push(c);\n      return c;\n    },\n    setLegendData: function setLegendData(a) {\n      var b = this.legend;\n      b && b.setData(a);\n    },\n    stopAnim: function stopAnim(a) {\n      d.removeFromArray(this.animations, a);\n    },\n    updateAnimations: function updateAnimations() {\n      var a;\n      this.container && this.container.update();\n      if (this.animations) for (a = this.animations.length - 1; 0 <= a; a--) {\n        var b = this.animations[a],\n            c = d.updateRate * b.time,\n            e = b.frame + 1,\n            g = b.obj,\n            f = b.attribute;\n\n        if (e <= c) {\n          b.frame++;\n          var k = Number(b.from),\n              h = Number(b.to) - k,\n              c = d[b.effect](0, e, k, h, c);\n          0 === h ? (this.animations.splice(a, 1), g.node.style[f] = Number(b.to) + b.suffix) : g.node.style[f] = c + b.suffix;\n        } else g.node.style[f] = Number(b.to) + b.suffix, g.animationFinished = !0, this.animations.splice(a, 1);\n      }\n    },\n    update: function update() {\n      this.updateAnimations();\n      var a = this.animatable;\n\n      if (0 < a.length) {\n        for (var b = !0, c = a.length - 1; 0 <= c; c--) {\n          var e = a[c];\n          e && (e.animationFinished ? a.splice(c, 1) : b = !1);\n        }\n\n        b && (this.fire({\n          type: \"animationFinished\",\n          chart: this\n        }), this.animatable = []);\n      }\n    },\n    inIframe: function inIframe() {\n      try {\n        return window.self !== window.top;\n      } catch (a) {\n        return !0;\n      }\n    },\n    brr: function brr() {\n      if (!this.hideCredits) {\n        var a = \"amcharts.com\",\n            b = window.location.hostname.split(\".\"),\n            c;\n        2 <= b.length && (c = b[b.length - 2] + \".\" + b[b.length - 1]);\n        this.amLink && (b = this.amLink.parentNode) && b.removeChild(this.amLink);\n\n        if (c != a || !0 === this.inIframe()) {\n          c = a = \"http://www.\" + a;\n          var b = \"JavaScript charts\",\n              e = \"JS chart by amCharts\";\n          \"ammap\" == this.product && (c = a + \"/javascript-maps/\", b = \"Interactive JavaScript maps\", e = \"JS map by amCharts\");\n          a = document.createElement(\"a\");\n          e = document.createTextNode(e);\n          a.setAttribute(\"href\", c);\n          a.setAttribute(\"title\", b);\n          this.urlTarget && a.setAttribute(\"target\", this.urlTarget);\n          a.appendChild(e);\n          this.chartDiv.appendChild(a);\n          this.amLink = a;\n          a = a.style;\n          a.position = \"absolute\";\n          a.textDecoration = \"none\";\n          a.color = this.color;\n          a.fontFamily = this.fontFamily;\n          a.fontSize = \"11px\";\n          a.opacity = .7;\n          a.display = \"block\";\n          this.positionCred();\n        }\n      }\n    },\n    positionCred: function positionCred() {\n      var a = this.amLink;\n\n      if (a) {\n        var b = this.creditsPosition,\n            c = a.style,\n            e = a.offsetWidth,\n            a = a.offsetHeight,\n            d = 0,\n            f = 0,\n            k = this.realWidth,\n            h = this.realHeight,\n            l = this.type;\n        if (\"serial\" == l || \"xy\" == l || \"gantt\" == l) d = this.marginLeftReal, f = this.marginTopReal, k = d + this.plotAreaWidth, h = f + this.plotAreaHeight;\n        var l = 5 + d,\n            m = f + 5;\n        \"bottom-left\" == b && (l = 5 + d, m = h - a - 3);\n        \"bottom-right\" == b && (l = k - e - 5, m = h - a - 3);\n        \"top-right\" == b && (l = k - e - 5, m = f + 5);\n        c.left = l + \"px\";\n        c.top = m + \"px\";\n      }\n    }\n  });\n  d.Slice = d.Class({\n    construct: function construct() {}\n  });\n  d.SerialDataItem = d.Class({\n    construct: function construct() {}\n  });\n  d.GraphDataItem = d.Class({\n    construct: function construct() {}\n  });\n  d.Guide = d.Class({\n    construct: function construct(a) {\n      this.cname = \"Guide\";\n      d.applyTheme(this, a, this.cname);\n    }\n  });\n  d.Title = d.Class({\n    construct: function construct(a) {\n      this.cname = \"Title\";\n      d.applyTheme(this, a, this.cname);\n    }\n  });\n  d.Label = d.Class({\n    construct: function construct(a) {\n      this.cname = \"Label\";\n      d.applyTheme(this, a, this.cname);\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.AmBalloon = d.Class({\n    construct: function construct(a) {\n      this.cname = \"AmBalloon\";\n      this.enabled = !0;\n      this.fillColor = \"#FFFFFF\";\n      this.fillAlpha = .8;\n      this.borderThickness = 2;\n      this.borderColor = \"#FFFFFF\";\n      this.borderAlpha = 1;\n      this.cornerRadius = 0;\n      this.maxWidth = 220;\n      this.horizontalPadding = 8;\n      this.verticalPadding = 4;\n      this.pointerWidth = 6;\n      this.pointerOrientation = \"V\";\n      this.color = \"#000000\";\n      this.adjustBorderColor = !0;\n      this.show = this.follow = this.showBullet = !1;\n      this.bulletSize = 3;\n      this.shadowAlpha = .4;\n      this.shadowColor = \"#000000\";\n      this.fadeOutDuration = this.animationDuration = .3;\n      this.fixedPosition = !0;\n      this.offsetY = 6;\n      this.offsetX = 1;\n      this.textAlign = \"center\";\n      this.disableMouseEvents = !0;\n      this.deltaSignX = this.deltaSignY = 1;\n      d.isModern || (this.offsetY *= 1.5);\n      this.sdy = this.sdx = 0;\n      d.applyTheme(this, a, this.cname);\n    },\n    draw: function draw() {\n      var a = this.pointToX,\n          b = this.pointToY;\n      d.isModern || (this.drop = !1);\n      var c = this.chart;\n      d.VML && (this.fadeOutDuration = 0);\n      this.xAnim && c.stopAnim(this.xAnim);\n      this.yAnim && c.stopAnim(this.yAnim);\n      this.sdy = this.sdx = 0;\n\n      if (!isNaN(a)) {\n        var e = this.follow,\n            g = c.container,\n            f = this.set;\n        d.remove(f);\n        this.removeDiv();\n        f = g.set();\n        f.node.style.pointerEvents = \"none\";\n        this.set = f;\n        this.mainSet ? (this.mainSet.push(this.set), this.sdx = this.mainSet.x, this.sdy = this.mainSet.y) : c.balloonsSet.push(f);\n\n        if (this.show) {\n          var k = this.l,\n              h = this.t,\n              l = this.r,\n              m = this.b,\n              n = this.balloonColor,\n              p = this.fillColor,\n              r = this.borderColor,\n              t = p;\n          void 0 != n && (this.adjustBorderColor ? t = r = n : p = n);\n          var q = this.horizontalPadding,\n              y = this.verticalPadding,\n              B = this.pointerWidth,\n              u = this.pointerOrientation,\n              v = this.cornerRadius,\n              w = c.fontFamily,\n              A = this.fontSize;\n          void 0 == A && (A = c.fontSize);\n          var n = document.createElement(\"div\"),\n              C = c.classNamePrefix;\n          n.className = C + \"-balloon-div\";\n          this.className && (n.className = n.className + \" \" + C + \"-balloon-div-\" + this.className);\n          C = n.style;\n          this.disableMouseEvents && (C.pointerEvents = \"none\");\n          C.position = \"absolute\";\n          var x = this.minWidth,\n              z = document.createElement(\"div\");\n          n.appendChild(z);\n          var E = z.style;\n          isNaN(x) || (E.minWidth = x - 2 * q + \"px\");\n          E.textAlign = this.textAlign;\n          E.maxWidth = this.maxWidth + \"px\";\n          E.fontSize = A + \"px\";\n          E.color = this.color;\n          E.fontFamily = w;\n          z.innerHTML = this.text;\n          c.chartDiv.appendChild(n);\n          this.textDiv = n;\n          var E = n.offsetWidth,\n              F = n.offsetHeight;\n          n.clientHeight && (E = n.clientWidth, F = n.clientHeight);\n          w = F + 2 * y;\n          z = E + 2 * q;\n          !isNaN(x) && z < x && (z = x);\n          window.opera && (w += 2);\n          var H = !1,\n              A = this.offsetY;\n          c.handDrawn && (A += c.handDrawScatter + 2);\n          \"H\" != u ? (x = a - z / 2, b < h + w + 10 && \"down\" != u ? (H = !0, e && (b += A), A = b + B, this.deltaSignY = -1) : (e && (b -= A), A = b - w - B, this.deltaSignY = 1)) : (2 * B > w && (B = w / 2), A = b - w / 2, a < k + (l - k) / 2 ? (x = a + B, this.deltaSignX = -1) : (x = a - z - B, this.deltaSignX = 1));\n          A + w >= m && (A = m - w);\n          A < h && (A = h);\n          x < k && (x = k);\n          x + z > l && (x = l - z);\n          var h = A + y,\n              m = x + q,\n              G = this.shadowAlpha,\n              D = this.shadowColor,\n              q = this.borderThickness,\n              L = this.bulletSize,\n              J,\n              y = this.fillAlpha,\n              M = this.borderAlpha;\n          this.showBullet && (J = d.circle(g, L, t, y), f.push(J));\n          this.drop ? (k = z / 1.6, l = 0, \"V\" == u && (u = \"down\"), \"H\" == u && (u = \"left\"), \"down\" == u && (x = a + 1, A = b - k - k / 3), \"up\" == u && (l = 180, x = a + 1, A = b + k + k / 3), \"left\" == u && (l = 270, x = a + k + k / 3 + 2, A = b), \"right\" == u && (l = 90, x = a - k - k / 3 + 2, A = b), h = A - F / 2 + 1, m = x - E / 2 - 1, p = d.drop(g, k, l, p, y, q, r, M)) : 0 < v || 0 === B ? (0 < G && (a = d.rect(g, z, w, p, 0, q + 1, D, G, v), d.isModern ? a.translate(1, 1) : a.translate(4, 4), f.push(a)), p = d.rect(g, z, w, p, y, q, r, M, v)) : (t = [], v = [], \"H\" != u ? (k = a - x, k > z - B && (k = z - B), k < B && (k = B), t = [0, k - B, a - x, k + B, z, z, 0, 0], v = H ? [0, 0, b - A, 0, 0, w, w, 0] : [w, w, b - A, w, w, 0, 0, w]) : (u = b - A, u > w - B && (u = w - B), u < B && (u = B), v = [0, u - B, b - A, u + B, w, w, 0, 0], t = a < k + (l - k) / 2 ? [0, 0, x < a ? 0 : a - x, 0, 0, z, z, 0] : [z, z, x + z > a ? z : a - x, z, z, 0, 0, z]), 0 < G && (a = d.polygon(g, t, v, p, 0, q, D, G), a.translate(1, 1), f.push(a)), p = d.polygon(g, t, v, p, y, q, r, M));\n          this.bg = p;\n          f.push(p);\n          p.toFront();\n          d.setCN(c, p, \"balloon-bg\");\n          this.className && d.setCN(c, p, \"balloon-bg-\" + this.className);\n          g = 1 * this.deltaSignX;\n          m += this.sdx;\n          h += this.sdy;\n          C.left = m + \"px\";\n          C.top = h + \"px\";\n          f.translate(x - g, A, 1, !0);\n          p = p.getBBox();\n          this.bottom = A + w + 1;\n          this.yPos = p.y + A;\n          J && J.translate(this.pointToX - x + g, b - A);\n          b = this.animationDuration;\n          0 < this.animationDuration && !e && !isNaN(this.prevX) && (f.translate(this.prevX, this.prevY, NaN, !0), f.animate({\n            translate: x - g + \",\" + A\n          }, b, \"easeOutSine\"), n && (C.left = this.prevTX + \"px\", C.top = this.prevTY + \"px\", this.xAnim = c.animate({\n            node: n\n          }, \"left\", this.prevTX, m, b, \"easeOutSine\", \"px\"), this.yAnim = c.animate({\n            node: n\n          }, \"top\", this.prevTY, h, b, \"easeOutSine\", \"px\")));\n          this.prevX = x - g;\n          this.prevY = A;\n          this.prevTX = m;\n          this.prevTY = h;\n        }\n      }\n    },\n    fixPrevious: function fixPrevious() {\n      this.rPrevX = this.prevX;\n      this.rPrevY = this.prevY;\n      this.rPrevTX = this.prevTX;\n      this.rPrevTY = this.prevTY;\n    },\n    restorePrevious: function restorePrevious() {\n      this.prevX = this.rPrevX;\n      this.prevY = this.rPrevY;\n      this.prevTX = this.rPrevTX;\n      this.prevTY = this.rPrevTY;\n    },\n    followMouse: function followMouse() {\n      if (this.follow && this.show) {\n        var a = this.chart.mouseX - this.offsetX * this.deltaSignX - this.sdx,\n            b = this.chart.mouseY - this.sdy;\n        this.pointToX = a;\n        this.pointToY = b;\n        if (a != this.previousX || b != this.previousY) if (this.previousX = a, this.previousY = b, 0 === this.cornerRadius) this.draw();else {\n          var c = this.set;\n\n          if (c) {\n            var e = c.getBBox(),\n                a = a - e.width / 2,\n                d = b - e.height - 10;\n            a < this.l && (a = this.l);\n            a > this.r - e.width && (a = this.r - e.width);\n            d < this.t && (d = b + 10);\n            c.translate(a, d);\n            b = this.textDiv.style;\n            b.left = a + this.horizontalPadding + \"px\";\n            b.top = d + this.verticalPadding + \"px\";\n          }\n        }\n      }\n    },\n    changeColor: function changeColor(a) {\n      this.balloonColor = a;\n    },\n    setBounds: function setBounds(a, b, c, e) {\n      this.l = a;\n      this.t = b;\n      this.r = c;\n      this.b = e;\n      this.destroyTO && clearTimeout(this.destroyTO);\n    },\n    showBalloon: function showBalloon(a) {\n      if (this.text != a || this.positionChanged) this.text = a, this.isHiding = !1, this.show = !0, this.destroyTO && clearTimeout(this.destroyTO), a = this.chart, this.fadeAnim1 && a.stopAnim(this.fadeAnim1), this.fadeAnim2 && a.stopAnim(this.fadeAnim2), this.draw(), this.positionChanged = !1;\n    },\n    hide: function hide(a) {\n      var b = this;\n      b.text = void 0;\n      isNaN(a) && (a = b.fadeOutDuration);\n      var c = b.chart;\n\n      if (0 < a && !b.isHiding) {\n        b.isHiding = !0;\n        b.destroyTO && clearTimeout(b.destroyTO);\n        b.destroyTO = setTimeout(function () {\n          b.destroy.call(b);\n        }, 1E3 * a);\n        b.follow = !1;\n        b.show = !1;\n        var e = b.set;\n        e && (e.setAttr(\"opacity\", b.fillAlpha), b.fadeAnim1 = e.animate({\n          opacity: 0\n        }, a, \"easeInSine\"));\n        b.textDiv && (b.fadeAnim2 = c.animate({\n          node: b.textDiv\n        }, \"opacity\", 1, 0, a, \"easeInSine\", \"\"));\n      } else b.show = !1, b.follow = !1, b.destroy();\n    },\n    setPosition: function setPosition(a, b) {\n      if (a != this.pointToX || b != this.pointToY) this.previousX = this.pointToX, this.previousY = this.pointToY, this.pointToX = a, this.pointToY = b, this.positionChanged = !0;\n    },\n    followCursor: function followCursor(a) {\n      var b = this;\n      b.follow = a;\n      clearInterval(b.interval);\n      var c = b.chart.mouseX - b.sdx,\n          e = b.chart.mouseY - b.sdy;\n      !isNaN(c) && a && (b.pointToX = c - b.offsetX * b.deltaSignX, b.pointToY = e, b.followMouse(), b.interval = setInterval(function () {\n        b.followMouse.call(b);\n      }, 40));\n    },\n    removeDiv: function removeDiv() {\n      if (this.textDiv) {\n        var a = this.textDiv.parentNode;\n        a && a.removeChild(this.textDiv);\n      }\n    },\n    destroy: function destroy() {\n      clearInterval(this.interval);\n      d.remove(this.set);\n      this.removeDiv();\n      this.set = null;\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n\n  d.circle = function (a, b, c, e, g, f, k, h, l) {\n    0 >= b && (b = .001);\n    if (void 0 == g || 0 === g) g = .01;\n    void 0 === f && (f = \"#000000\");\n    void 0 === k && (k = 0);\n    e = {\n      fill: c,\n      stroke: f,\n      \"fill-opacity\": e,\n      \"stroke-width\": g,\n      \"stroke-opacity\": k\n    };\n    a = isNaN(l) ? a.circle(0, 0, b).attr(e) : a.ellipse(0, 0, b, l).attr(e);\n    h && a.gradient(\"radialGradient\", [c, d.adjustLuminosity(c, -.6)]);\n    return a;\n  };\n\n  d.text = function (a, b, c, e, g, f, k, h) {\n    f || (f = \"middle\");\n    \"right\" == f && (f = \"end\");\n    \"left\" == f && (f = \"start\");\n    isNaN(h) && (h = 1);\n    void 0 !== b && (b = String(b), d.isIE && !d.isModern && (b = b.replace(\"&amp;\", \"&\"), b = b.replace(\"&\", \"&amp;\")));\n    c = {\n      fill: c,\n      \"font-family\": e,\n      \"font-size\": g + \"px\",\n      opacity: h\n    };\n    !0 === k && (c[\"font-weight\"] = \"bold\");\n    c[\"text-anchor\"] = f;\n    return a.text(b, c);\n  };\n\n  d.polygon = function (a, b, c, e, g, f, k, h, l, m, n) {\n    isNaN(f) && (f = .01);\n    isNaN(h) && (h = g);\n    var p = e,\n        r = !1;\n    \"object\" == typeof p && 1 < p.length && (r = !0, p = p[0]);\n    void 0 === k && (k = p);\n    g = {\n      fill: p,\n      stroke: k,\n      \"fill-opacity\": g,\n      \"stroke-width\": f,\n      \"stroke-opacity\": h\n    };\n    void 0 !== n && 0 < n && (g[\"stroke-dasharray\"] = n);\n    n = d.dx;\n    f = d.dy;\n    a.handDrawn && (c = d.makeHD(b, c, a.handDrawScatter), b = c[0], c = c[1]);\n    k = Math.round;\n    m && (k = Number);\n    h = \"M\" + (k(b[0]) + n) + \",\" + (k(c[0]) + f);\n\n    for (p = 1; p < b.length; p++) {\n      m && (b[p] = d.roundTo(b[p], 5), c[p] = d.roundTo(c[p], 5)), h += \" L\" + (k(b[p]) + n) + \",\" + (k(c[p]) + f);\n    }\n\n    a = a.path(h + \" Z\").attr(g);\n    r && a.gradient(\"linearGradient\", e, l);\n    return a;\n  };\n\n  d.rect = function (a, b, c, e, g, f, k, h, l, m, n) {\n    if (isNaN(b) || isNaN(c)) return a.set();\n    isNaN(f) && (f = 0);\n    void 0 === l && (l = 0);\n    void 0 === m && (m = 270);\n    isNaN(g) && (g = 0);\n    var p = e,\n        r = !1;\n    \"object\" == typeof p && (p = p[0], r = !0);\n    void 0 === k && (k = p);\n    void 0 === h && (h = g);\n    b = Math.round(b);\n    c = Math.round(c);\n    var t = 0,\n        q = 0;\n    0 > b && (b = Math.abs(b), t = -b);\n    0 > c && (c = Math.abs(c), q = -c);\n    t += d.dx;\n    q += d.dy;\n    g = {\n      fill: p,\n      stroke: k,\n      \"fill-opacity\": g,\n      \"stroke-opacity\": h\n    };\n    void 0 !== n && 0 < n && (g[\"stroke-dasharray\"] = n);\n    a = a.rect(t, q, b, c, l, f).attr(g);\n    r && a.gradient(\"linearGradient\", e, m);\n    return a;\n  };\n\n  d.bullet = function (a, b, c, e, g, f, k, h, l, m, n, p, r) {\n    var t;\n    \"circle\" == b && (b = \"round\");\n\n    switch (b) {\n      case \"round\":\n        t = d.circle(a, c / 2, e, g, f, k, h);\n        break;\n\n      case \"square\":\n        t = d.polygon(a, [-c / 2, c / 2, c / 2, -c / 2], [c / 2, c / 2, -c / 2, -c / 2], e, g, f, k, h, m - 180, void 0, r);\n        break;\n\n      case \"rectangle\":\n        t = d.polygon(a, [-c, c, c, -c], [c / 2, c / 2, -c / 2, -c / 2], e, g, f, k, h, m - 180, void 0, r);\n        break;\n\n      case \"diamond\":\n        t = d.polygon(a, [-c / 2, 0, c / 2, 0], [0, -c / 2, 0, c / 2], e, g, f, k, h);\n        break;\n\n      case \"triangleUp\":\n        t = d.triangle(a, c, 0, e, g, f, k, h);\n        break;\n\n      case \"triangleDown\":\n        t = d.triangle(a, c, 180, e, g, f, k, h);\n        break;\n\n      case \"triangleLeft\":\n        t = d.triangle(a, c, 270, e, g, f, k, h);\n        break;\n\n      case \"triangleRight\":\n        t = d.triangle(a, c, 90, e, g, f, k, h);\n        break;\n\n      case \"bubble\":\n        t = d.circle(a, c / 2, e, g, f, k, h, !0);\n        break;\n\n      case \"line\":\n        t = d.line(a, [-c / 2, c / 2], [0, 0], e, g, f, k, h);\n        break;\n\n      case \"yError\":\n        t = a.set();\n        t.push(d.line(a, [0, 0], [-c / 2, c / 2], e, g, f));\n        t.push(d.line(a, [-l, l], [-c / 2, -c / 2], e, g, f));\n        t.push(d.line(a, [-l, l], [c / 2, c / 2], e, g, f));\n        break;\n\n      case \"xError\":\n        t = a.set(), t.push(d.line(a, [-c / 2, c / 2], [0, 0], e, g, f)), t.push(d.line(a, [-c / 2, -c / 2], [-l, l], e, g, f)), t.push(d.line(a, [c / 2, c / 2], [-l, l], e, g, f));\n    }\n\n    t && t.pattern(n, NaN, p);\n    return t;\n  };\n\n  d.triangle = function (a, b, c, e, d, f, k, h) {\n    if (void 0 === f || 0 === f) f = 1;\n    void 0 === k && (k = \"#000\");\n    void 0 === h && (h = 0);\n    e = {\n      fill: e,\n      stroke: k,\n      \"fill-opacity\": d,\n      \"stroke-width\": f,\n      \"stroke-opacity\": h\n    };\n    b /= 2;\n    var l;\n    0 === c && (l = \" M\" + -b + \",\" + b + \" L0,\" + -b + \" L\" + b + \",\" + b + \" Z\");\n    180 == c && (l = \" M\" + -b + \",\" + -b + \" L0,\" + b + \" L\" + b + \",\" + -b + \" Z\");\n    90 == c && (l = \" M\" + -b + \",\" + -b + \" L\" + b + \",0 L\" + -b + \",\" + b + \" Z\");\n    270 == c && (l = \" M\" + -b + \",0 L\" + b + \",\" + b + \" L\" + b + \",\" + -b + \" Z\");\n    return a.path(l).attr(e);\n  };\n\n  d.line = function (a, b, c, e, g, f, k, h, l, m, n) {\n    if (a.handDrawn && !n) return d.handDrawnLine(a, b, c, e, g, f, k, h, l, m, n);\n    f = {\n      fill: \"none\",\n      \"stroke-width\": f\n    };\n    void 0 !== k && 0 < k && (f[\"stroke-dasharray\"] = k);\n    isNaN(g) || (f[\"stroke-opacity\"] = g);\n    e && (f.stroke = e);\n    e = Math.round;\n    m && (e = Number, b[0] = d.roundTo(b[0], 5), c[0] = d.roundTo(c[0], 5));\n    m = d.dx;\n    g = d.dy;\n    k = \"M\" + (e(b[0]) + m) + \",\" + (e(c[0]) + g);\n\n    for (h = 1; h < b.length; h++) {\n      b[h] = d.roundTo(b[h], 5), c[h] = d.roundTo(c[h], 5), k += \" L\" + (e(b[h]) + m) + \",\" + (e(c[h]) + g);\n    }\n\n    if (d.VML) return a.path(k, void 0, !0).attr(f);\n    l && (k += \" M0,0 L0,0\");\n    return a.path(k).attr(f);\n  };\n\n  d.makeHD = function (a, b, c) {\n    for (var e = [], d = [], f = 1; f < a.length; f++) {\n      for (var k = Number(a[f - 1]), h = Number(b[f - 1]), l = Number(a[f]), m = Number(b[f]), n = Math.round(Math.sqrt(Math.pow(l - k, 2) + Math.pow(m - h, 2)) / 50) + 1, l = (l - k) / n, m = (m - h) / n, p = 0; p <= n; p++) {\n        var r = h + p * m + Math.random() * c;\n        e.push(k + p * l + Math.random() * c);\n        d.push(r);\n      }\n    }\n\n    return [e, d];\n  };\n\n  d.handDrawnLine = function (a, b, c, e, g, f, k, h, l, m) {\n    var n,\n        p = a.set();\n\n    for (n = 1; n < b.length; n++) {\n      for (var r = [b[n - 1], b[n]], t = [c[n - 1], c[n]], t = d.makeHD(r, t, a.handDrawScatter), r = t[0], t = t[1], q = 1; q < r.length; q++) {\n        p.push(d.line(a, [r[q - 1], r[q]], [t[q - 1], t[q]], e, g, f + Math.random() * a.handDrawThickness - a.handDrawThickness / 2, k, h, l, m, !0));\n      }\n    }\n\n    return p;\n  };\n\n  d.doNothing = function (a) {\n    return a;\n  };\n\n  d.drop = function (a, b, c, e, d, f, k, h) {\n    var l = 1 / 180 * Math.PI,\n        m = c - 20,\n        n = Math.sin(m * l) * b,\n        p = Math.cos(m * l) * b,\n        r = Math.sin((m + 40) * l) * b,\n        t = Math.cos((m + 40) * l) * b,\n        q = .8 * b,\n        y = -b / 3,\n        B = b / 3;\n    0 === c && (y = -y, B = 0);\n    180 == c && (B = 0);\n    90 == c && (y = 0);\n    270 == c && (y = 0, B = -B);\n    c = {\n      fill: e,\n      stroke: k,\n      \"stroke-width\": f,\n      \"stroke-opacity\": h,\n      \"fill-opacity\": d\n    };\n    b = \"M\" + n + \",\" + p + \" A\" + b + \",\" + b + \",0,1,1,\" + r + \",\" + t + (\" A\" + q + \",\" + q + \",0,0,0,\" + (Math.sin((m + 20) * l) * b + B) + \",\" + (Math.cos((m + 20) * l) * b + y));\n    b += \" A\" + q + \",\" + q + \",0,0,0,\" + n + \",\" + p;\n    return a.path(b, void 0, void 0, \"1000,1000\").attr(c);\n  };\n\n  d.wedge = function (a, b, c, e, g, f, k, h, l, m, n, p, r, t) {\n    var q = Math.round;\n    f = q(f);\n    k = q(k);\n    h = q(h);\n    var y = q(k / f * h),\n        B = d.VML,\n        u = 359.5 + f / 100;\n    359.94 < u && (u = 359.94);\n    g >= u && (g = u);\n    var v = 1 / 180 * Math.PI,\n        u = b + Math.sin(e * v) * h,\n        w = c - Math.cos(e * v) * y,\n        A = b + Math.sin(e * v) * f,\n        C = c - Math.cos(e * v) * k,\n        x = b + Math.sin((e + g) * v) * f,\n        z = c - Math.cos((e + g) * v) * k,\n        E = b + Math.sin((e + g) * v) * h,\n        v = c - Math.cos((e + g) * v) * y,\n        F = {\n      fill: d.adjustLuminosity(m.fill, -.2),\n      \"stroke-opacity\": 0,\n      \"fill-opacity\": m[\"fill-opacity\"]\n    },\n        H = 0;\n    180 < Math.abs(g) && (H = 1);\n    e = a.set();\n    var G;\n    B && (u = q(10 * u), A = q(10 * A), x = q(10 * x), E = q(10 * E), w = q(10 * w), C = q(10 * C), z = q(10 * z), v = q(10 * v), b = q(10 * b), l = q(10 * l), c = q(10 * c), f *= 10, k *= 10, h *= 10, y *= 10, 1 > Math.abs(g) && 1 >= Math.abs(x - A) && 1 >= Math.abs(z - C) && (G = !0));\n    g = \"\";\n    var D;\n    p && (F[\"fill-opacity\"] = 0, F[\"stroke-opacity\"] = m[\"stroke-opacity\"] / 2, F.stroke = m.stroke);\n\n    if (0 < l) {\n      D = \" M\" + u + \",\" + (w + l) + \" L\" + A + \",\" + (C + l);\n      B ? (G || (D += \" A\" + (b - f) + \",\" + (l + c - k) + \",\" + (b + f) + \",\" + (l + c + k) + \",\" + A + \",\" + (C + l) + \",\" + x + \",\" + (z + l)), D += \" L\" + E + \",\" + (v + l), 0 < h && (G || (D += \" B\" + (b - h) + \",\" + (l + c - y) + \",\" + (b + h) + \",\" + (l + c + y) + \",\" + E + \",\" + (l + v) + \",\" + u + \",\" + (l + w)))) : (D += \" A\" + f + \",\" + k + \",0,\" + H + \",1,\" + x + \",\" + (z + l) + \" L\" + E + \",\" + (v + l), 0 < h && (D += \" A\" + h + \",\" + y + \",0,\" + H + \",0,\" + u + \",\" + (w + l)));\n      D += \" Z\";\n      var L = l;\n      B && (L /= 10);\n\n      for (var J = 0; J < L; J += 10) {\n        var M = a.path(D, void 0, void 0, \"1000,1000\").attr(F);\n        e.push(M);\n        M.translate(0, -J);\n      }\n\n      D = a.path(\" M\" + u + \",\" + w + \" L\" + u + \",\" + (w + l) + \" L\" + A + \",\" + (C + l) + \" L\" + A + \",\" + C + \" L\" + u + \",\" + w + \" Z\", void 0, void 0, \"1000,1000\").attr(F);\n      l = a.path(\" M\" + x + \",\" + z + \" L\" + x + \",\" + (z + l) + \" L\" + E + \",\" + (v + l) + \" L\" + E + \",\" + v + \" L\" + x + \",\" + z + \" Z\", void 0, void 0, \"1000,1000\").attr(F);\n      e.push(D);\n      e.push(l);\n    }\n\n    B ? (G || (g = \" A\" + q(b - f) + \",\" + q(c - k) + \",\" + q(b + f) + \",\" + q(c + k) + \",\" + q(A) + \",\" + q(C) + \",\" + q(x) + \",\" + q(z)), k = \" M\" + q(u) + \",\" + q(w) + \" L\" + q(A) + \",\" + q(C) + g + \" L\" + q(E) + \",\" + q(v)) : k = \" M\" + u + \",\" + w + \" L\" + A + \",\" + C + (\" A\" + f + \",\" + k + \",0,\" + H + \",1,\" + x + \",\" + z) + \" L\" + E + \",\" + v;\n    0 < h && (B ? G || (k += \" B\" + (b - h) + \",\" + (c - y) + \",\" + (b + h) + \",\" + (c + y) + \",\" + E + \",\" + v + \",\" + u + \",\" + w) : k += \" A\" + h + \",\" + y + \",0,\" + H + \",0,\" + u + \",\" + w);\n    a.handDrawn && (h = d.line(a, [u, A], [w, C], m.stroke, m.thickness * Math.random() * a.handDrawThickness, m[\"stroke-opacity\"]), e.push(h));\n    a = a.path(k + \" Z\", void 0, void 0, \"1000,1000\").attr(m);\n\n    if (n) {\n      h = [];\n\n      for (y = 0; y < n.length; y++) {\n        h.push(d.adjustLuminosity(m.fill, n[y]));\n      }\n\n      \"radial\" != t || d.isModern || (h = []);\n      0 < h.length && a.gradient(t + \"Gradient\", h);\n    }\n\n    d.isModern && \"radial\" == t && a.grad && (a.grad.setAttribute(\"gradientUnits\", \"userSpaceOnUse\"), a.grad.setAttribute(\"r\", f), a.grad.setAttribute(\"cx\", b), a.grad.setAttribute(\"cy\", c));\n    a.pattern(p, NaN, r);\n    e.wedge = a;\n    e.push(a);\n    return e;\n  };\n\n  d.rgb2hex = function (a) {\n    return (a = a.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i)) && 4 === a.length ? \"#\" + (\"0\" + parseInt(a[1], 10).toString(16)).slice(-2) + (\"0\" + parseInt(a[2], 10).toString(16)).slice(-2) + (\"0\" + parseInt(a[3], 10).toString(16)).slice(-2) : \"\";\n  };\n\n  d.adjustLuminosity = function (a, b) {\n    a && -1 != a.indexOf(\"rgb\") && (a = d.rgb2hex(a));\n    a = String(a).replace(/[^0-9a-f]/gi, \"\");\n    6 > a.length && (a = String(a[0]) + String(a[0]) + String(a[1]) + String(a[1]) + String(a[2]) + String(a[2]));\n    b = b || 0;\n    var c = \"#\",\n        e,\n        g;\n\n    for (g = 0; 3 > g; g++) {\n      e = parseInt(a.substr(2 * g, 2), 16), e = Math.round(Math.min(Math.max(0, e + e * b), 255)).toString(16), c += (\"00\" + e).substr(e.length);\n    }\n\n    return c;\n  };\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.AmLegend = d.Class({\n    construct: function construct(a) {\n      this.enabled = !0;\n      this.cname = \"AmLegend\";\n      this.createEvents(\"rollOverMarker\", \"rollOverItem\", \"rollOutMarker\", \"rollOutItem\", \"showItem\", \"hideItem\", \"clickMarker\", \"clickLabel\");\n      this.position = \"bottom\";\n      this.borderColor = this.color = \"#000000\";\n      this.borderAlpha = 0;\n      this.markerLabelGap = 5;\n      this.verticalGap = 10;\n      this.align = \"left\";\n      this.horizontalGap = 0;\n      this.spacing = 10;\n      this.markerDisabledColor = \"#AAB3B3\";\n      this.markerType = \"square\";\n      this.markerSize = 16;\n      this.markerBorderThickness = this.markerBorderAlpha = 1;\n      this.marginBottom = this.marginTop = 0;\n      this.marginLeft = this.marginRight = 20;\n      this.autoMargins = !0;\n      this.valueWidth = 50;\n      this.switchable = !0;\n      this.switchType = \"x\";\n      this.switchColor = \"#FFFFFF\";\n      this.rollOverColor = \"#CC0000\";\n      this.reversedOrder = !1;\n      this.labelText = \"[[title]]\";\n      this.valueText = \"[[value]]\";\n      this.accessibleLabel = \"[[title]]\";\n      this.useMarkerColorForLabels = !1;\n      this.rollOverGraphAlpha = 1;\n      this.textClickEnabled = !1;\n      this.equalWidths = !0;\n      this.backgroundColor = \"#FFFFFF\";\n      this.backgroundAlpha = 0;\n      this.useGraphSettings = !1;\n      this.showEntries = !0;\n      this.labelDx = 0;\n      d.applyTheme(this, a, this.cname);\n    },\n    setData: function setData(a) {\n      this.legendData = a;\n      this.invalidateSize();\n    },\n    invalidateSize: function invalidateSize() {\n      this.destroy();\n      this.entries = [];\n      this.valueLabels = [];\n      var a = this.legendData;\n      this.enabled && (d.ifArray(a) || d.ifArray(this.data)) && this.drawLegend();\n    },\n    drawLegend: function drawLegend() {\n      var a = this.chart,\n          b = this.position,\n          c = this.width,\n          e = a.divRealWidth,\n          g = a.divRealHeight,\n          f = this.div,\n          k = this.legendData;\n      this.data && (k = this.combineLegend ? this.legendData.concat(this.data) : this.data);\n      isNaN(this.fontSize) && (this.fontSize = a.fontSize);\n      this.maxColumnsReal = this.maxColumns;\n      if (\"right\" == b || \"left\" == b) this.maxColumnsReal = 1, this.autoMargins && (this.marginLeft = this.marginRight = 10);else if (this.autoMargins) {\n        this.marginRight = a.marginRight;\n        this.marginLeft = a.marginLeft;\n        var h = a.autoMarginOffset;\n        \"bottom\" == b ? (this.marginBottom = h, this.marginTop = 0) : (this.marginTop = h, this.marginBottom = 0);\n      }\n      c = void 0 !== c ? d.toCoordinate(c, e) : \"right\" != b && \"left\" != b ? a.realWidth : 0 < this.ieW ? this.ieW : a.realWidth;\n      \"outside\" == b ? (c = f.offsetWidth, g = f.offsetHeight, f.clientHeight && (c = f.clientWidth, g = f.clientHeight)) : (isNaN(c) || (f.style.width = c + \"px\"), f.className = \"amChartsLegend \" + a.classNamePrefix + \"-legend-div\");\n      this.divWidth = c;\n      (b = this.container) ? (b.container.innerHTML = \"\", f.appendChild(b.container), b.width = c, b.height = g, b.setSize(c, g), b.addDefs(a)) : b = new d.AmDraw(f, c, g, a);\n      this.container = b;\n      this.lx = 0;\n      this.ly = 8;\n      g = this.markerSize;\n      g > this.fontSize && (this.ly = g / 2 - 1);\n      0 < g && (this.lx += g + this.markerLabelGap);\n      this.titleWidth = 0;\n      if (g = this.title) g = d.text(this.container, g, this.color, a.fontFamily, this.fontSize, \"start\", !0), d.setCN(a, g, \"legend-title\"), g.translate(this.marginLeft, this.marginTop + this.verticalGap + this.ly + 1), a = g.getBBox(), this.titleWidth = a.width + 15, this.titleHeight = a.height + 6;\n      this.index = this.maxLabelWidth = 0;\n\n      if (this.showEntries) {\n        for (a = 0; a < k.length; a++) {\n          this.createEntry(k[a]);\n        }\n\n        for (a = this.index = 0; a < k.length; a++) {\n          this.createValue(k[a]);\n        }\n      }\n\n      this.arrangeEntries();\n      this.updateValues();\n    },\n    arrangeEntries: function arrangeEntries() {\n      var a = this.position,\n          b = this.marginLeft + this.titleWidth,\n          c = this.marginRight,\n          e = this.marginTop,\n          g = this.marginBottom,\n          f = this.horizontalGap,\n          k = this.div,\n          h = this.divWidth,\n          l = this.maxColumnsReal,\n          m = this.verticalGap,\n          n = this.spacing,\n          p = h - c - b,\n          r = 0,\n          t = 0,\n          q = this.container;\n      this.set && this.set.remove();\n      var y = q.set();\n      this.set = y;\n      var B = q.set();\n      y.push(B);\n      var u = this.entries,\n          v,\n          w;\n\n      for (w = 0; w < u.length; w++) {\n        v = u[w].getBBox();\n        var A = v.width;\n        A > r && (r = A);\n        v = v.height;\n        v > t && (t = v);\n      }\n\n      var A = t = 0,\n          C = f,\n          x = 0,\n          z = 0;\n\n      for (w = 0; w < u.length; w++) {\n        var E = u[w];\n        this.reversedOrder && (E = u[u.length - w - 1]);\n        v = E.getBBox();\n        var F;\n        this.equalWidths ? F = A * (r + n + this.markerLabelGap) : (F = C, C = C + v.width + f + n);\n        F + v.width > p && 0 < w && 0 !== A && (t++, F = A = 0, C = F + v.width + f + n, x = x + z + m, z = 0);\n        v.height > z && (z = v.height);\n        E.translate(F, x);\n        A++;\n        !isNaN(l) && A >= l && (A = 0, t++, x = x + z + m, C = f, z = 0);\n        B.push(E);\n      }\n\n      v = B.getBBox();\n      l = v.height + 2 * m - 1;\n      \"left\" == a || \"right\" == a ? (n = v.width + 2 * f, h = n + b + c, k.style.width = h + \"px\", this.ieW = h) : n = h - b - c - 1;\n      c = d.polygon(this.container, [0, n, n, 0], [0, 0, l, l], this.backgroundColor, this.backgroundAlpha, 1, this.borderColor, this.borderAlpha);\n      d.setCN(this.chart, c, \"legend-bg\");\n      y.push(c);\n      y.translate(b, e);\n      c.toBack();\n      b = f;\n      if (\"top\" == a || \"bottom\" == a || \"absolute\" == a || \"outside\" == a) \"center\" == this.align ? b = f + (n - v.width) / 2 : \"right\" == this.align && (b = f + n - v.width);\n      B.translate(b, m + 1);\n      this.titleHeight > l && (l = this.titleHeight);\n      e = l + e + g + 1;\n      0 > e && (e = 0);\n      \"absolute\" != a && \"outside\" != a && e > this.chart.divRealHeight && (k.style.top = \"0px\");\n      k.style.height = Math.round(e) + \"px\";\n      q.setSize(this.divWidth, e);\n    },\n    createEntry: function createEntry(a) {\n      if (!1 !== a.visibleInLegend && !a.hideFromLegend) {\n        var b = this,\n            c = b.chart,\n            e = b.useGraphSettings,\n            g = a.markerType;\n        g && (e = !1);\n        a.legendEntryWidth = b.markerSize;\n        g || (g = b.markerType);\n        var f = a.color,\n            k = a.alpha;\n        a.legendKeyColor && (f = a.legendKeyColor());\n        a.legendKeyAlpha && (k = a.legendKeyAlpha());\n        var h;\n        !0 === a.hidden && (h = f = b.markerDisabledColor);\n        var l = a.pattern,\n            m,\n            n = a.customMarker;\n        n || (n = b.customMarker);\n        var p = b.container,\n            r = b.markerSize,\n            t = 0,\n            q = 0,\n            y = r / 2;\n\n        if (e) {\n          e = a.type;\n          b.switchType = void 0;\n          if (\"line\" == e || \"step\" == e || \"smoothedLine\" == e || \"ohlc\" == e) m = p.set(), a.hidden || (f = a.lineColorR, h = a.bulletBorderColorR), t = d.line(p, [0, 2 * r], [r / 2, r / 2], f, a.lineAlpha, a.lineThickness, a.dashLength), d.setCN(c, t, \"graph-stroke\"), m.push(t), a.bullet && (a.hidden || (f = a.bulletColorR), t = d.bullet(p, a.bullet, a.bulletSize, f, a.bulletAlpha, a.bulletBorderThickness, h, a.bulletBorderAlpha)) && (d.setCN(c, t, \"graph-bullet\"), t.translate(r + 1, r / 2), m.push(t)), y = 0, t = r, q = r / 3;else {\n            a.getGradRotation && (m = a.getGradRotation(), 0 === m && (m = 180));\n            t = a.fillColorsR;\n            !0 === a.hidden && (t = f);\n            if (m = b.createMarker(\"rectangle\", t, a.fillAlphas, a.lineThickness, f, a.lineAlpha, m, l, a.dashLength)) y = r, m.translate(y, r / 2);\n            t = r;\n          }\n          d.setCN(c, m, \"graph-\" + e);\n          d.setCN(c, m, \"graph-\" + a.id);\n        } else if (n) m = p.image(n, 0, 0, r, r);else {\n          var B;\n          isNaN(b.gradientRotation) || (B = 180 + b.gradientRotation);\n          (m = b.createMarker(g, f, k, void 0, void 0, void 0, B, l)) && m.translate(r / 2, r / 2);\n        }\n\n        d.setCN(c, m, \"legend-marker\");\n        b.addListeners(m, a);\n        p = p.set([m]);\n        b.switchable && a.switchable && p.setAttr(\"cursor\", \"pointer\");\n        void 0 !== a.id && d.setCN(c, p, \"legend-item-\" + a.id);\n        d.setCN(c, p, a.className, !0);\n        h = b.switchType;\n        var u;\n        h && \"none\" != h && 0 < r && (\"x\" == h ? (u = b.createX(), u.translate(r / 2, r / 2)) : u = b.createV(), u.dItem = a, !0 !== a.hidden ? \"x\" == h ? u.hide() : u.show() : \"x\" != h && u.hide(), b.switchable || u.hide(), b.addListeners(u, a), a.legendSwitch = u, p.push(u), d.setCN(c, u, \"legend-switch\"));\n        h = b.color;\n        a.showBalloon && b.textClickEnabled && void 0 !== b.selectedColor && (h = b.selectedColor);\n        b.useMarkerColorForLabels && !l && (h = f);\n        !0 === a.hidden && (h = b.markerDisabledColor);\n        f = d.massReplace(b.labelText, {\n          \"[[title]]\": a.title\n        });\n        void 0 !== b.tabIndex && (p.setAttr(\"tabindex\", b.tabIndex), p.setAttr(\"role\", \"menuitem\"), p.keyup(function (c) {\n          13 == c.keyCode && b.clickMarker(a, c);\n        }));\n        c.accessible && b.accessibleLabel && (l = d.massReplace(b.accessibleLabel, {\n          \"[[title]]\": a.title\n        }), c.makeAccessible(p, l));\n        l = b.fontSize;\n        m && (r <= l && (r = r / 2 + b.ly - l / 2 + (l + 2 - r) / 2 - q, m.translate(y, r), u && u.translate(u.x, r)), a.legendEntryWidth = m.getBBox().width);\n        var v;\n        f && (f = d.fixBrakes(f), a.legendTextReal = f, v = b.labelWidth, v = isNaN(v) ? d.text(b.container, f, h, c.fontFamily, l, \"start\") : d.wrappedText(b.container, f, h, c.fontFamily, l, \"start\", !1, v, 0), d.setCN(c, v, \"legend-label\"), v.translate(b.lx + t, b.ly), p.push(v), b.labelDx = t, c = v.getBBox().width, b.maxLabelWidth < c && (b.maxLabelWidth = c));\n        b.entries[b.index] = p;\n        a.legendEntry = b.entries[b.index];\n        a.legendMarker = m;\n        a.legendLabel = v;\n        b.index++;\n      }\n    },\n    addListeners: function addListeners(a, b) {\n      var c = this;\n      a && a.mouseover(function (a) {\n        c.rollOverMarker(b, a);\n      }).mouseout(function (a) {\n        c.rollOutMarker(b, a);\n      }).click(function (a) {\n        c.clickMarker(b, a);\n      });\n    },\n    rollOverMarker: function rollOverMarker(a, b) {\n      this.switchable && this.dispatch(\"rollOverMarker\", a, b);\n      this.dispatch(\"rollOverItem\", a, b);\n    },\n    rollOutMarker: function rollOutMarker(a, b) {\n      this.switchable && this.dispatch(\"rollOutMarker\", a, b);\n      this.dispatch(\"rollOutItem\", a, b);\n    },\n    clickMarker: function clickMarker(a, b) {\n      this.switchable && (!0 === a.hidden ? this.dispatch(\"showItem\", a, b) : this.dispatch(\"hideItem\", a, b));\n      this.dispatch(\"clickMarker\", a, b);\n    },\n    rollOverLabel: function rollOverLabel(a, b) {\n      a.hidden || this.textClickEnabled && a.legendLabel && a.legendLabel.attr({\n        fill: this.rollOverColor\n      });\n      this.dispatch(\"rollOverItem\", a, b);\n    },\n    rollOutLabel: function rollOutLabel(a, b) {\n      if (!a.hidden && this.textClickEnabled && a.legendLabel) {\n        var c = this.color;\n        void 0 !== this.selectedColor && a.showBalloon && (c = this.selectedColor);\n        this.useMarkerColorForLabels && (c = a.lineColor, void 0 === c && (c = a.color));\n        a.legendLabel.attr({\n          fill: c\n        });\n      }\n\n      this.dispatch(\"rollOutItem\", a, b);\n    },\n    clickLabel: function clickLabel(a, b) {\n      this.textClickEnabled ? a.hidden || this.dispatch(\"clickLabel\", a, b) : this.switchable && (!0 === a.hidden ? this.dispatch(\"showItem\", a, b) : this.dispatch(\"hideItem\", a, b));\n    },\n    dispatch: function dispatch(a, b, c) {\n      a = {\n        type: a,\n        dataItem: b,\n        target: this,\n        event: c,\n        chart: this.chart\n      };\n      this.chart && this.chart.handleLegendEvent(a);\n      this.fire(a);\n    },\n    createValue: function createValue(a) {\n      var b = this,\n          c = b.fontSize,\n          e = b.chart;\n\n      if (!1 !== a.visibleInLegend && !a.hideFromLegend) {\n        var g = b.maxLabelWidth,\n            f = 0;\n        b.forceWidth && (g = b.labelWidth);\n        b.equalWidths || (b.valueAlign = \"left\");\n        f = {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        };\n        a.legendLabel && (f = a.legendLabel.getBBox());\n        \"left\" == b.valueAlign && (g = f.width);\n        var f = f.height,\n            k = g,\n            h = b.markerSize;\n        h < c + 7 && (h = c + 7, d.VML && (h += 3));\n\n        if (b.valueText && 0 < b.valueWidth) {\n          var l = b.color;\n          b.useMarkerColorForValues && (l = a.color, a.legendKeyColor && (l = a.legendKeyColor()));\n          !0 === a.hidden && (l = b.markerDisabledColor);\n          var m = b.valueText,\n              g = g + b.lx + b.labelDx + b.markerLabelGap + b.valueWidth,\n              n = \"end\";\n          \"left\" == b.valueAlign && (g -= b.valueWidth, n = \"start\");\n          c = d.text(b.container, m, l, b.chart.fontFamily, c, n);\n          d.setCN(e, c, \"legend-value\");\n          c.translate(g, b.ly);\n          b.entries[b.index].push(c);\n          k += b.valueWidth + 2 * b.markerLabelGap;\n          c.dItem = a;\n          b.valueLabels.push(c);\n          h < f + 5 && (h = f + 5);\n        }\n\n        b.index++;\n        e = b.container.rect(a.legendEntryWidth, 0, k, h, 0, 0).attr({\n          stroke: \"none\",\n          fill: \"#fff\",\n          \"fill-opacity\": .005\n        });\n        e.dItem = a;\n        b.entries[b.index - 1].push(e);\n        e.mouseover(function (c) {\n          b.rollOverLabel(a, c);\n        }).mouseout(function (c) {\n          b.rollOutLabel(a, c);\n        }).click(function (c) {\n          b.clickLabel(a, c);\n        });\n      }\n    },\n    createV: function createV() {\n      var a = this.markerSize;\n      return d.polygon(this.container, [a / 5, a / 2, a - a / 5, a / 2], [a / 3, a - a / 5, a / 5, a / 1.7], this.switchColor);\n    },\n    createX: function createX() {\n      var a = (this.markerSize - 4) / 2,\n          b = {\n        stroke: this.switchColor,\n        \"stroke-width\": 3\n      },\n          c = this.container,\n          e = d.line(c, [-a, a], [-a, a]).attr(b),\n          a = d.line(c, [-a, a], [a, -a]).attr(b);\n      return this.container.set([e, a]);\n    },\n    createMarker: function createMarker(a, b, c, e, g, f, k, h, l) {\n      var m = this.markerSize,\n          n = this.container;\n      g || (g = this.markerBorderColor);\n      g || (g = b);\n      isNaN(e) && (e = this.markerBorderThickness);\n      isNaN(f) && (f = this.markerBorderAlpha);\n      return d.bullet(n, a, m, b, c, e, g, f, m, k, h, this.chart.path, l);\n    },\n    validateNow: function validateNow() {\n      this.invalidateSize();\n    },\n    updateValues: function updateValues() {\n      var a = this.valueLabels,\n          b = this.chart,\n          c,\n          e = this.data;\n      if (a) for (c = 0; c < a.length; c++) {\n        var g = a[c],\n            f = g.dItem;\n        f.periodDataItem = void 0;\n        f.periodPercentDataItem = void 0;\n        var k = \" \";\n        if (e) f.value ? g.text(f.value) : g.text(\"\");else {\n          var h = null;\n\n          if (void 0 !== f.type) {\n            var h = f.currentDataItem,\n                l = this.periodValueText;\n            f.legendPeriodValueText && (l = f.legendPeriodValueText);\n            f.legendPeriodValueTextR && (l = f.legendPeriodValueTextR);\n            h ? (k = this.valueText, f.legendValueText && (k = f.legendValueText), f.legendValueTextR && (k = f.legendValueTextR), k = b.formatString(k, h)) : l && b.formatPeriodString && (l = d.massReplace(l, {\n              \"[[title]]\": f.title\n            }), k = b.formatPeriodString(l, f));\n          } else k = b.formatString(this.valueText, f);\n\n          l = f;\n          h && (l = h);\n          var m = this.valueFunction;\n          m && (k = m(l, k, b.periodDataItem));\n          var n;\n          this.useMarkerColorForLabels && !h && f.lastDataItem && (h = f.lastDataItem);\n          h ? n = b.getBalloonColor(f, h) : f.legendKeyColor && (n = f.legendKeyColor());\n          f.legendColorFunction && (n = f.legendColorFunction(l, k, f.periodDataItem, f.periodPercentDataItem));\n          g.text(k);\n\n          if (!f.pattern && (this.useMarkerColorForValues && g.setAttr(\"fill\", n), this.useMarkerColorForLabels)) {\n            if (g = f.legendMarker) g.setAttr(\"fill\", n), g.setAttr(\"stroke\", n);\n            (g = f.legendLabel) && (f.hidden ? g.setAttr(\"fill\", this.markerDisabledColor) : g.setAttr(\"fill\", n));\n          }\n        }\n      }\n    },\n    renderFix: function renderFix() {\n      if (!d.VML && this.enabled) {\n        var a = this.container;\n        a && a.renderFix();\n      }\n    },\n    destroy: function destroy() {\n      this.div.innerHTML = \"\";\n      d.remove(this.set);\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.AmMap = d.Class({\n    inherits: d.AmChart,\n    construct: function construct(a) {\n      this.cname = \"AmMap\";\n      this.type = \"map\";\n      this.theme = a;\n      this.svgNotSupported = \"This browser doesn't support SVG. Use Chrome, Firefox, Internet Explorer 9 or later.\";\n      this.createEvents(\"rollOverMapObject\", \"rollOutMapObject\", \"clickMapObject\", \"mouseDownMapObject\", \"selectedObjectChanged\", \"homeButtonClicked\", \"zoomCompleted\", \"dragCompleted\", \"positionChanged\", \"writeDevInfo\", \"click\", \"descriptionClosed\");\n      this.zoomDuration = .6;\n      this.zoomControl = new d.ZoomControl(a);\n      this.fitMapToContainer = !0;\n      this.mouseWheelZoomEnabled = this.backgroundZoomsToTop = !1;\n      this.allowClickOnSelectedObject = this.useHandCursorOnClickableOjects = this.showBalloonOnSelectedObject = !0;\n      this.showObjectsAfterZoom = this.wheelBusy = !1;\n      this.zoomOnDoubleClick = this.useObjectColorForBalloon = !0;\n      this.allowMultipleDescriptionWindows = !1;\n      this.dragMap = this.centerMap = this.linesAboveImages = !0;\n      this.colorSteps = 5;\n      this.forceNormalize = !1;\n      this.showAreasInList = !0;\n      this.showLinesInList = this.showImagesInList = !1;\n      this.areasProcessor = new d.AreasProcessor(this);\n      this.areasSettings = new d.AreasSettings(a);\n      this.imagesProcessor = new d.ImagesProcessor(this);\n      this.imagesSettings = new d.ImagesSettings(a);\n      this.linesProcessor = new d.LinesProcessor(this);\n      this.linesSettings = new d.LinesSettings(a);\n      this.initialTouchZoom = 1;\n      this.showDescriptionOnHover = !1;\n      d.AmMap.base.construct.call(this, a);\n      this.creditsPosition = \"bottom-left\";\n      this.product = \"ammap\";\n      this.areasClasses = {};\n      this.updatableImages = [];\n      d.applyTheme(this, a, this.cname);\n    },\n    initChart: function initChart() {\n      this.zoomInstantly = !0;\n      var a = this.container;\n      this.panRequired = !0;\n\n      if (this.sizeChanged && d.hasSVG && this.chartCreated) {\n        this.updatableImages = [];\n        this.freeLabelsSet && this.freeLabelsSet.remove();\n        this.freeLabelsSet = a.set();\n        this.container.setSize(this.realWidth, this.realHeight);\n        this.resizeMap();\n        this.drawBackground();\n        this.redrawLabels();\n        this.drawTitles();\n        this.processObjects(!0);\n        this.rescaleObjects();\n        this.zoomControl.init(this, a);\n        this.drawBg();\n        var b = this.smallMap;\n        b && b.init(this, a);\n        (b = this.valueLegend) && b.init(this, a);\n        this.sizeChanged = !1;\n        this.zoomToLongLat(this.zLevelTemp, this.zLongTemp, this.zLatTemp, !0);\n        this.previousWidth = this.realWidth;\n        this.previousHeight = this.realHeight;\n        this.updateSmallMap();\n        this.linkSet.toFront();\n        this.zoomControl.update && this.zoomControl.update();\n      } else (d.AmMap.base.initChart.call(this), d.hasSVG) ? (this.dataChanged && (this.parseData(), this.dispatchDataUpdated = !0, this.dataChanged = !1, a = this.legend) && (a.position = \"absolute\", a.invalidateSize()), this.createDescriptionsDiv(), this.svgAreas = [], this.svgAreasById = {}, this.drawChart()) : (this.chartDiv.style.textAlign = \"\", this.chartDiv.setAttribute(\"class\", \"ammapAlert\"), this.chartDiv.innerHTML = this.svgNotSupported, this.fire({\n        type: \"failed\",\n        chart: this\n      }));\n    },\n    storeTemp: function storeTemp() {\n      if (d.hasSVG && 0 < this.realWidth && 0 < this.realHeight) {\n        var a = this.mapContainer.getBBox();\n        0 < a.width && 0 < a.height && (a = this.zoomLongitude(), isNaN(a) || (this.zLongTemp = a), a = this.zoomLatitude(), isNaN(a) || (this.zLatTemp = a), a = this.zoomLevel(), isNaN(a) || (this.zLevelTemp = a));\n      }\n    },\n    invalidateSize: function invalidateSize() {\n      this.storeTemp();\n      d.AmMap.base.invalidateSize.call(this);\n    },\n    validateSize: function validateSize() {\n      this.storeTemp();\n      d.AmMap.base.validateSize.call(this);\n    },\n    handleWheelReal: function handleWheelReal(a) {\n      if (!this.wheelBusy) {\n        this.stopAnimation();\n        var b = this.zoomLevel(),\n            c = this.zoomControl,\n            e = c.zoomFactor;\n        this.wheelBusy = !0;\n        a = d.fitToBounds(0 < a ? b * e : b / e, c.minZoomLevel, c.maxZoomLevel);\n        e = this.mouseX / this.mapWidth;\n        c = this.mouseY / this.mapHeight;\n        e = (this.zoomX() - e) * (a / b) + e;\n        b = (this.zoomY() - c) * (a / b) + c;\n        this.zoomTo(a, e, b);\n      }\n    },\n    addLegend: function addLegend(a, b) {\n      a.position = \"absolute\";\n      a.autoMargins = !1;\n      a.valueWidth = 0;\n      a.switchable = !1;\n      d.AmMap.base.addLegend.call(this, a, b);\n      void 0 === a.enabled && (a.enabled = !0);\n      return a;\n    },\n    handleLegendEvent: function handleLegendEvent() {},\n    createDescriptionsDiv: function createDescriptionsDiv() {\n      if (!this.descriptionsDiv) {\n        var a = document.createElement(\"div\"),\n            b = a.style;\n        b.position = \"absolute\";\n        b.left = \"0px\";\n        b.top = \"0px\";\n        this.descriptionsDiv = a;\n      }\n\n      this.containerDiv.appendChild(this.descriptionsDiv);\n    },\n    drawChart: function drawChart() {\n      d.AmMap.base.drawChart.call(this);\n      var a = this.dataProvider;\n      this.dataProvider = a = d.extend(a, new d.MapData(), !0);\n      this.areasSettings = d.processObject(this.areasSettings, d.AreasSettings, this.theme);\n      this.imagesSettings = d.processObject(this.imagesSettings, d.ImagesSettings, this.theme);\n      this.linesSettings = d.processObject(this.linesSettings, d.LinesSettings, this.theme);\n      var b = this.container;\n      this.mapContainer && this.mapContainer.remove();\n      this.mapContainer = b.set();\n      this.graphsSet.push(this.mapContainer);\n      var c;\n      a.map && (c = d.maps[a.map]);\n      a.mapVar && (c = a.mapVar);\n      c ? (this.svgData = c.svg, this.getBounds(), this.buildEverything()) : (a = a.mapURL) && this.loadXml(a);\n      this.balloonsSet.toFront();\n    },\n    drawBg: function drawBg() {\n      var a = this;\n      a.background.click(function () {\n        a.handleBackgroundClick();\n      });\n      a.background.mouseover(function () {\n        a.rollOutMapObject(a.previouslyHovered);\n      });\n    },\n    buildEverything: function buildEverything() {\n      if (0 < this.realWidth && 0 < this.realHeight) {\n        var a = this.container,\n            b = this.dataProvider;\n        isNaN(b.zoomLevel) || (this.mapContainer.scale = b.zoomLevel);\n        this.projection || (this.projection = b.projection, this.projection || (this.projection = \"equirectangular\"));\n        this.updatableImages = [];\n        var c = this.projection;\n        c && (this.projectionFunction = d[c]);\n        this.projectionFunction || (this.projectionFunction = d.equirectangular);\n        this.dpProjectionFunction = d[b.projection];\n        this.dpProjectionFunction || (this.dpProjectionFunction = d.equirectangular);\n        this.zoomControl = d.processObject(this.zoomControl, d.ZoomControl, this.theme);\n        this.zoomControl.init(this, a);\n        this.drawBg();\n        this.buildSVGMap();\n        this.projectionFunction && c != b.projection || this.forceNormalize ? (this.normalizeMap(), this.changeProjection()) : this.fixMapPosition();\n        if (c = this.smallMap) c = d.processObject(c, d.SmallMap, this.theme), c.init(this, a), this.smallMap = c;\n        isNaN(b.zoomX) && isNaN(b.zoomY) && isNaN(b.zoomLatitude) && isNaN(b.zoomLongitude) && (this.centerMap ? (c = this.xyToCoordinates(this.mapWidth / 2, this.mapHeight / 2), b.zoomLongitudeC = c.longitude, b.zoomLatitudeC = c.latitude) : (b.zoomX = 0, b.zoomY = 0), this.zoomInstantly = !0);\n        this.selectObject(this.dataProvider);\n        this.processAreas();\n        if (b = this.valueLegend) this.valueLegend = b = d.processObject(b, d.ValueLegend, this.theme), b.init(this, a);\n        this.objectList && (a = this.objectList = d.processObject(this.objectList, d.ObjectList)) && (this.clearObjectList(), a.init(this));\n        this.dispDUpd();\n        this.updateSmallMap();\n        this.linkSet.toFront();\n      } else this.cleanChart();\n    },\n    hideGroup: function hideGroup(a) {\n      this.showHideGroup(a, !1);\n    },\n    showGroup: function showGroup(a) {\n      this.showHideGroup(a, !0);\n    },\n    showHideGroup: function showHideGroup(a, b) {\n      this.showHideReal(this.imagesProcessor.allObjects, a, b);\n      this.showHideReal(this.areasProcessor.allObjects, a, b);\n      this.showHideReal(this.linesProcessor.allObjects, a, b);\n    },\n    showHideReal: function showHideReal(a, b, c) {\n      var e;\n\n      for (e = 0; e < a.length; e++) {\n        var d = a[e];\n\n        if (d.groupId == b) {\n          var f = d.displayObject;\n          f && (c ? (d.hidden = !1, f.show()) : (d.hidden = !0, f.hide()));\n        }\n      }\n    },\n    makeObjectAccessible: function makeObjectAccessible(a) {\n      if (a.accessibleLabel) {\n        var b = this.formatString(a.accessibleLabel, a);\n        a.displayObject && this.makeAccessible(a.displayObject, b, \"menuitem\");\n      }\n    },\n    update: function update() {\n      if (d.hasSVG) {\n        d.AmMap.base.update.call(this);\n        this.zoomControl && this.zoomControl.update && this.zoomControl.update();\n\n        for (var a = 0, b = this.updatableImages.length; a < b; a++) {\n          this.updatableImages[a].update();\n        }\n      }\n    },\n    animateMap: function animateMap() {\n      var a = this;\n      a.totalFrames = a.zoomDuration * d.updateRate;\n      a.totalFrames += 1;\n      a.frame = 0;\n      a.tweenPercent = 0;\n      a.balloon.hide(0);\n      setTimeout(function () {\n        a.updateSize.call(a);\n      }, 1E3 / d.updateRate);\n    },\n    updateSize: function updateSize() {\n      var a = this,\n          b = a.totalFrames;\n      a.preventHover = !0;\n      a.frame <= b ? (a.frame++, b = d.easeOutSine(0, a.frame, 0, 1, b), 1 <= b ? (b = 1, a.preventHover = !1, a.wheelBusy = !1) : window.requestAnimationFrame ? window.requestAnimationFrame(function () {\n        a.updateSize.call(a);\n      }) : setTimeout(function () {\n        a.updateSize.call(a);\n      }, 1E3 / d.updateRate), .8 < b && (a.preventHover = !1)) : (b = 1, a.preventHover = !1, a.wheelBusy = !1);\n      a.tweenPercent = b;\n      a.rescaleMapAndObjects();\n    },\n    rescaleMapAndObjects: function rescaleMapAndObjects() {\n      var a = this.initialScale,\n          b = this.initialX,\n          c = this.initialY,\n          e = this.tweenPercent,\n          a = a + (this.finalScale - a) * e;\n      this.mapContainer.translate(b + (this.finalX - b) * e, c + (this.finalY - c) * e, a, !0);\n\n      if (this.areasSettings.adjustOutlineThickness) {\n        for (var b = this.svgAreas, d = 0; d < b.length; d++) {\n          (c = b[d]) && c.setAttr(\"stroke-width\", this.areasSettings.outlineThickness / a / this.mapScale);\n        }\n\n        if (b = this.dataProvider.areas) for (d = 0; d < b.length; d++) {\n          var c = b[d],\n              f = c.displayObject;\n          f && f.setAttr(\"stroke-width\", c.outlineThicknessReal / a / this.mapScale);\n        }\n      }\n\n      this.rescaleObjects();\n      this.positionChanged();\n      this.updateSmallMap();\n      1 == e && this.fire({\n        type: \"zoomCompleted\",\n        chart: this\n      });\n    },\n    updateSmallMap: function updateSmallMap() {\n      this.smallMap && this.smallMap.update();\n    },\n    rescaleObjects: function rescaleObjects() {\n      var a = this.mapContainer.scale,\n          b = this.imagesProcessor.objectsToResize,\n          c;\n\n      for (c = 0; c < b.length; c++) {\n        var e = b[c].image,\n            d = b[c].scale,\n            f = b[c].mapImage;\n        isNaN(f.selectedScaleReal) || f != this.selectedObject || (f.tempScale = d, d *= f.selectedScaleReal);\n        e.translate(e.x, e.y, d / a, !0);\n      }\n\n      b = this.imagesProcessor.labelsToReposition;\n\n      for (c = 0; c < b.length; c++) {\n        e = b[c], e.imageLabel && this.imagesProcessor.positionLabel(e.imageLabel, e, e.labelPositionReal);\n      }\n\n      b = this.linesProcessor;\n      if (e = b.linesToResize) for (c = 0; c < e.length; c++) {\n        d = e[c], d.line.setAttr(\"stroke-width\", d.thickness / a);\n      }\n      b = b.objectsToResize;\n\n      for (c = 0; c < b.length; c++) {\n        e = b[c], e.translate(e.x, e.y, 1 / a, !0);\n      }\n    },\n    handleTouchEnd: function handleTouchEnd(a) {\n      this.initialDistance = NaN;\n      this.mouseIsDown = this.isDragging = !1;\n      d.AmMap.base.handleTouchEnd.call(this, a);\n    },\n    handleMouseDown: function handleMouseDown(a) {\n      d.resetMouseOver();\n      this.mouseIsDown = this.mouseIsOver = !0;\n      this.balloon.hide(0);\n      a && this.mouseIsOver && a.preventDefault && this.panEventsEnabled && a.preventDefault();\n\n      if (this.chartCreated && !this.preventHover && (this.initialTouchZoom = this.zoomLevel(), this.dragMap && (this.stopAnimation(), this.mapContainerClickX = this.mapContainer.x, this.mapContainerClickY = this.mapContainer.y), a || (a = window.event), a.shiftKey && !0 === this.developerMode && this.getDevInfo(), a && a.touches)) {\n        var b = this.mouseX,\n            c = this.mouseY,\n            e = a.touches.item(1);\n        e && this.panEventsEnabled && this.boundingRect && (a = e.clientX - this.boundingRect.left, e = e.clientY - this.boundingRect.top, this.middleXP = (b + (a - b) / 2) / this.realWidth, this.middleYP = (c + (e - c) / 2) / this.realHeight, this.initialDistance = Math.sqrt(Math.pow(a - b, 2) + Math.pow(e - c, 2)));\n      }\n    },\n    stopDrag: function stopDrag() {\n      this.isDragging = !1;\n    },\n    handleReleaseOutside: function handleReleaseOutside() {\n      if (d.isModern) {\n        var a = this;\n        d.AmMap.base.handleReleaseOutside.call(a);\n        a.mouseIsDown = !1;\n        setTimeout(function () {\n          a.resetPinch.call(a);\n        }, 100);\n\n        if (!a.preventHover) {\n          a.stopDrag();\n          var b = a.zoomControl;\n          b && b.draggerUp && b.draggerUp();\n          a.mapWasDragged = !1;\n          var b = a.mapContainer,\n              c = a.mapContainerClickX,\n              e = a.mapContainerClickY;\n          isNaN(c) || isNaN(e) || !(3 < Math.abs(b.x - c) || 3 < Math.abs(b.y - e)) || (a.mapWasDragged = !0, b = {\n            type: \"dragCompleted\",\n            zoomX: a.zoomX(),\n            zoomY: a.zoomY(),\n            zoomLevel: a.zoomLevel(),\n            chart: a\n          }, a.fire(b));\n          (a.mouseIsOver && !a.mapWasDragged && !a.skipClick || a.wasTouched && 3 > Math.abs(a.mouseX - a.tmx) && 3 > Math.abs(a.mouseY - a.tmy)) && a.fire({\n            type: \"click\",\n            x: a.mouseX,\n            y: a.mouseY,\n            chart: a\n          });\n          a.mapContainerClickX = NaN;\n          a.mapContainerClickY = NaN;\n          a.objectWasClicked = !1;\n          a.zoomOnDoubleClick && a.mouseIsOver && (b = new Date().getTime(), 200 > b - a.previousClickTime && 40 < b - a.previousClickTime && a.doDoubleClickZoom(), a.previousClickTime = b);\n        }\n\n        a.wasTouched = !1;\n      }\n    },\n    resetPinch: function resetPinch() {\n      this.mapWasPinched = !1;\n    },\n    handleMouseMove: function handleMouseMove(a) {\n      var b = this;\n      d.AmMap.base.handleMouseMove.call(b, a);\n\n      if (!a || !a.touches || !b.tapToActivate || b.tapped) {\n        b.panEventsEnabled && b.mouseIsOver && a && a.preventDefault && a.preventDefault();\n        var c = b.previuosMouseX,\n            e = b.previuosMouseY,\n            g = b.mouseX,\n            f = b.mouseY,\n            k = b.zoomControl;\n        isNaN(c) && (c = g);\n        isNaN(e) && (e = f);\n        b.mouse2X = NaN;\n        b.mouse2Y = NaN;\n        a && a.touches && (a = a.touches.item(1)) && b.panEventsEnabled && b.boundingRect && (b.mouse2X = a.clientX - b.boundingRect.left, b.mouse2Y = a.clientY - b.boundingRect.top);\n\n        if (a = b.mapContainer) {\n          var h = b.mouse2X,\n              l = b.mouse2Y;\n          b.pinchTO && clearTimeout(b.pinchTO);\n          b.pinchTO = setTimeout(function () {\n            b.resetPinch.call(b);\n          }, 1E3);\n          var m = b.realHeight,\n              n = b.realWidth,\n              p = b.mapWidth,\n              r = b.mapHeight;\n          b.mouseIsDown && b.dragMap && (3 < Math.abs(b.previuosMouseX - b.mouseX) || 3 < Math.abs(b.previuosMouseY - b.mouseY)) && (b.isDragging = !0);\n\n          if (!isNaN(h)) {\n            b.stopDrag();\n            var t = Math.sqrt(Math.pow(h - g, 2) + Math.pow(l - f, 2)),\n                q = b.initialDistance;\n            isNaN(q) && (q = Math.sqrt(Math.pow(h - g, 2) + Math.pow(l - f, 2)));\n\n            if (!isNaN(q)) {\n              var h = b.initialTouchZoom * t / q,\n                  h = d.fitToBounds(h, k.minZoomLevel, k.maxZoomLevel),\n                  k = b.zoomLevel(),\n                  q = b.middleXP,\n                  l = b.middleYP,\n                  t = m / r,\n                  y = n / p,\n                  q = (b.zoomX() - q * y) * (h / k) + q * y,\n                  l = (b.zoomY() - l * t) * (h / k) + l * t;\n              .1 < Math.abs(h - k) && (b.zoomTo(h, q, l, !0), b.mapWasPinched = !0, clearTimeout(b.pinchTO));\n            }\n          }\n\n          h = a.scale;\n          b.isDragging && (b.balloon.hide(0), b.positionChanged(), c = a.x + (g - c), e = a.y + (f - e), b.preventDragOut && (r = -r * h + m / 2 - b.diffY * b.mapScale * h, m = m / 2 - b.diffY * b.mapScale * h, c = d.fitToBounds(c, -p * h + n / 2, n / 2), e = d.fitToBounds(e, r, m)), isNaN(c) || isNaN(e) || (a.translate(c, e, h, !0), b.updateSmallMap()));\n          b.previuosMouseX = g;\n          b.previuosMouseY = f;\n        }\n      }\n    },\n    selectObject: function selectObject(a, b) {\n      var c = this;\n      a || (a = c.dataProvider);\n      a.isOver = !1;\n      var e = a.linkToObject;\n      d.isString(e) && (e = c.getObjectById(e));\n      a.useTargetsZoomValues && e && (a.zoomX = e.zoomX, a.zoomY = e.zoomY, a.zoomLatitude = e.zoomLatitude, a.zoomLongitude = e.zoomLongitude, a.zoomLevel = e.zoomLevel);\n      var g = c.selectedObject;\n      g && c.returnInitialColor(g);\n      c.selectedObject = a;\n      var f = !1,\n          k,\n          h;\n      \"MapArea\" == a.objectType && (a.autoZoomReal && (f = !0), k = c.areasSettings.selectedOutlineColor, h = c.areasSettings.selectedOutlineThickness);\n\n      if (e && !f && (d.isString(e) && (e = c.getObjectById(e)), isNaN(a.zoomLevel) && isNaN(a.zoomX) && isNaN(a.zoomY))) {\n        if (c.extendMapData(e)) return;\n        c.selectObject(e);\n        return;\n      }\n\n      c.allowMultipleDescriptionWindows || c.closeAllDescriptions();\n      clearTimeout(c.selectedObjectTimeOut);\n      clearTimeout(c.processObjectsTimeOut);\n      e = c.zoomDuration;\n      !f && isNaN(a.zoomLevel) && isNaN(a.zoomX) && isNaN(a.zoomY) ? (c.showDescriptionAndGetUrl(), b || c.processObjects()) : (c.selectedObjectTimeOut = setTimeout(function () {\n        c.showDescriptionAndGetUrl.call(c);\n      }, 1E3 * e + 200), c.showObjectsAfterZoom) ? b || (c.processObjectsTimeOut = setTimeout(function () {\n        c.processObjects.call(c);\n      }, 1E3 * e + 200)) : b || c.processObjects();\n      e = a.displayObject;\n      f = a.selectedColorReal;\n\n      if (\"MapImage\" == a.objectType) {\n        k = c.imagesSettings.selectedOutlineColor;\n        h = c.imagesSettings.selectedOutlineThickness;\n        var e = a.image,\n            l = a.selectedScaleReal;\n\n        if (!isNaN(l) && 1 != l) {\n          var m = a.scale;\n          isNaN(a.tempScale) || (m = a.tempScale);\n          isNaN(m) && (m = 1);\n          a.tempScale = m;\n          var n = a.displayObject;\n          n.translate(n.x, n.y, m * l, !0);\n        }\n      }\n\n      if (e) {\n        if (d.removeCN(c, e, \"selected-object\"), d.setCN(c, e, \"selected-object\"), a.bringForwardOnHover && a.displayObject.toFront(), c.outlinesToFront(), !a.preserveOriginalAttributes) {\n          e.setAttr(\"stroke\", a.outlineColorReal);\n          void 0 !== f && e.setAttr(\"fill\", f);\n          void 0 !== k && e.setAttr(\"stroke\", k);\n          void 0 !== h && e.setAttr(\"stroke-width\", h);\n          \"MapLine\" == a.objectType && ((l = a.lineSvg) && l.setAttr(\"stroke\", f), l = a.arrowSvg) && (l.setAttr(\"fill\", f), l.setAttr(\"stroke\", f));\n          if (l = a.imageLabel) m = a.selectedLabelColorReal, void 0 !== m && l.setAttr(\"fill\", m);\n          a.selectable || (e.setAttr(\"cursor\", \"default\"), l && l.setAttr(\"cursor\", \"default\"));\n        }\n      } else c.returnInitialColorReal(a);\n\n      if (e = a.groupId) for (l = a.groupArray, l || (l = c.getGroupById(e), a.groupArray = l), m = 0; m < l.length; m++) {\n        if (n = l[m], n.isOver = !1, e = n.displayObject, \"MapImage\" == n.objectType && (e = n.image), e) {\n          var p = n.selectedColorReal;\n          void 0 !== p && e.setAttr(\"fill\", p);\n          void 0 !== k && e.setAttr(\"stroke\", k);\n          void 0 !== h && e.setAttr(\"stroke-width\", h);\n          \"MapLine\" == n.objectType && ((e = n.lineSvg) && e.setAttr(\"stroke\", f), e = n.arrowSvg) && (e.setAttr(\"fill\", f), e.setAttr(\"stroke\", f));\n        }\n      }\n      c.rescaleObjects();\n      c.zoomToSelectedObject();\n      g != a && c.fire({\n        type: \"selectedObjectChanged\",\n        chart: c\n      });\n    },\n    returnInitialColor: function returnInitialColor(a, b) {\n      this.returnInitialColorReal(a);\n      b && (a.isFirst = !1);\n\n      if (this.selectedObject.bringForwardOnHover) {\n        var c = this.selectedObject.displayObject;\n        c && c.toFront();\n      }\n\n      if (c = a.groupId) {\n        var c = this.getGroupById(c),\n            d;\n\n        for (d = 0; d < c.length; d++) {\n          this.returnInitialColorReal(c[d]), b && (c[d].isFirst = !1);\n        }\n      }\n\n      this.outlinesToFront();\n    },\n    outlinesToFront: function outlinesToFront() {\n      if (this.outlines) for (var a = 0; a < this.outlines.length; a++) {\n        this.outlines[a].toFront();\n      }\n    },\n    closeAllDescriptions: function closeAllDescriptions() {\n      this.descriptionsDiv.innerHTML = \"\";\n    },\n    fireClosed: function fireClosed() {\n      this.fire({\n        type: \"descriptionClosed\",\n        chart: this\n      });\n    },\n    returnInitialColorReal: function returnInitialColorReal(a) {\n      a.isOver = !1;\n      var b = a.displayObject;\n\n      if (b) {\n        d.removeCN(this, b, \"selected-object\");\n        b.toPrevious();\n\n        if (\"MapImage\" == a.objectType) {\n          var c = a.tempScale;\n          isNaN(c) || b.translate(b.x, b.y, c, !0);\n          a.tempScale = NaN;\n          b = a.image;\n        }\n\n        c = a.colorReal;\n\n        if (\"MapLine\" == a.objectType) {\n          var e = a.lineSvg;\n          e && e.setAttr(\"stroke\", c);\n\n          if (e = a.arrowSvg) {\n            var g = a.arrowColor;\n            void 0 === g && (g = c);\n            e.setAttr(\"fill\", g);\n            e.setAttr(\"stroke\", g);\n          }\n        }\n\n        var e = a.alphaReal,\n            g = a.outlineAlphaReal,\n            f = a.outlineThicknessReal,\n            k = a.outlineColorReal;\n\n        if (a.showAsSelected) {\n          var c = a.selectedColorReal,\n              h,\n              l;\n          \"MapImage\" == a.objectType && (h = this.imagesSettings.selectedOutlineColor, l = this.imagesSettings.selectedOutlineThickness);\n          \"MapArea\" == a.objectType && (h = this.areasSettings.selectedOutlineColor, l = this.areasSettings.selectedOutlineThickness);\n          void 0 !== h && (k = h);\n          void 0 !== l && (f = l);\n        }\n\n        \"bubble\" == a.type && (c = void 0);\n        void 0 !== c && b.setAttr(\"fill\", c);\n        if (h = a.image) h.setAttr(\"fill\", c), h.setAttr(\"stroke\", k), h.setAttr(\"stroke-width\", f), h.setAttr(\"fill-opacity\", e), h.setAttr(\"stroke-opacity\", g);\n        \"MapArea\" == a.objectType && (c = 1, this.areasSettings.adjustOutlineThickness && (c = this.zoomLevel() * this.mapScale), b.setAttr(\"stroke\", k), b.setAttr(\"stroke-width\", f / c), b.setAttr(\"fill-opacity\", e), b.setAttr(\"stroke-opacity\", g));\n        (c = a.pattern) && b.pattern(c, this.mapScale, this.path);\n        (b = a.imageLabel) && !a.labelInactive && (a.showAsSelected && void 0 !== a.selectedLabelColor ? b.setAttr(\"fill\", a.selectedLabelColor) : b.setAttr(\"fill\", a.labelColorReal));\n      }\n    },\n    zoomToRectangle: function zoomToRectangle(a, b, c, e) {\n      var g = this.realWidth,\n          f = this.realHeight,\n          k = this.mapSet.scale,\n          h = this.zoomControl,\n          g = d.fitToBounds(c / g > e / f ? .8 * g / (c * k) : .8 * f / (e * k), h.minZoomLevel, h.maxZoomLevel);\n      this.zoomToMapXY(g, (a + c / 2) * k, (b + e / 2) * k);\n    },\n    zoomToLatLongRectangle: function zoomToLatLongRectangle(a, b, c, e) {\n      var g = this.dataProvider,\n          f = this.zoomControl,\n          k = Math.abs(c - a),\n          h = Math.abs(b - e),\n          l = Math.abs(g.rightLongitude - g.leftLongitude),\n          g = Math.abs(g.topLatitude - g.bottomLatitude),\n          f = d.fitToBounds(k / l > h / g ? .8 * l / k : .8 * g / h, f.minZoomLevel, f.maxZoomLevel);\n      this.zoomToLongLat(f, a + (c - a) / 2, e + (b - e) / 2);\n    },\n    getGroupById: function getGroupById(a) {\n      var b = [];\n      this.getGroup(this.imagesProcessor.allObjects, a, b);\n      this.getGroup(this.linesProcessor.allObjects, a, b);\n      this.getGroup(this.areasProcessor.allObjects, a, b);\n      return b;\n    },\n    zoomToGroup: function zoomToGroup(a) {\n      a = \"object\" == typeof a ? a : this.getGroupById(a);\n      var b, c, d, g, f;\n\n      for (f = 0; f < a.length; f++) {\n        var k = a[f].displayObject;\n\n        if (k) {\n          var h = k.getBBox(),\n              k = h.y,\n              l = h.y + h.height,\n              m = h.x,\n              h = h.x + h.width;\n          if (k < b || isNaN(b)) b = k;\n          if (l > g || isNaN(g)) g = l;\n          if (m < c || isNaN(c)) c = m;\n          if (h > d || isNaN(d)) d = h;\n        }\n      }\n\n      c += this.diffX;\n      d += this.diffX;\n      g += this.diffY;\n      b += this.diffY;\n      this.zoomToRectangle(c, b, d - c, g - b);\n    },\n    getGroup: function getGroup(a, b, c) {\n      if (a) {\n        var d;\n\n        for (d = 0; d < a.length; d++) {\n          var g = a[d];\n          g.groupId == b && c.push(g);\n        }\n      }\n    },\n    zoomToStageXY: function zoomToStageXY(a, b, c, e) {\n      if (!this.objectWasClicked) {\n        var g = this.zoomControl;\n        a = d.fitToBounds(a, g.minZoomLevel, g.maxZoomLevel);\n        var g = this.zoomLevel(),\n            f = this.mapSet.getBBox();\n        b = this.xyToCoordinates((b - this.mapContainer.x) / g - f.x * this.mapScale, (c - this.mapContainer.y) / g - f.y * this.mapScale);\n        this.zoomToLongLat(a, b.longitude, b.latitude, e);\n      }\n    },\n    zoomToLongLat: function zoomToLongLat(a, b, c, d) {\n      b = this.coordinatesToXY(b, c);\n      this.zoomToMapXY(a, b.x, b.y, d);\n    },\n    zoomToMapXY: function zoomToMapXY(a, b, c, d) {\n      var g = this.mapWidth,\n          f = this.mapHeight;\n      this.zoomTo(a, -(b / g) * a + this.realWidth / g / 2, -(c / f) * a + this.realHeight / f / 2, d);\n    },\n    zoomToObject: function zoomToObject(a) {\n      if (a) {\n        var b = a.zoomLatitude,\n            c = a.zoomLongitude;\n        isNaN(a.zoomLatitudeC) || (b = a.zoomLatitudeC);\n        isNaN(a.zoomLongitudeC) || (c = a.zoomLongitudeC);\n        var e = a.zoomLevel,\n            g = this.zoomInstantly,\n            f = a.zoomX,\n            k = a.zoomY,\n            h = this.realWidth,\n            l = this.realHeight;\n        isNaN(e) || (isNaN(b) || isNaN(c) ? this.zoomTo(e, f, k, g) : this.zoomToLongLat(e, c, b, g));\n        this.zoomInstantly = !1;\n        \"MapImage\" == a.objectType && isNaN(a.zoomX) && isNaN(a.zoomY) && isNaN(a.zoomLatitude) && isNaN(a.zoomLongitude) && !isNaN(a.latitude) && !isNaN(a.longitude) && this.zoomToLongLat(a.zoomLevel, a.longitude, a.latitude);\n        \"MapArea\" == a.objectType && (g = a.displayObject.getBBox(), f = this.mapScale, b = (g.x + this.diffX) * f, c = (g.y + this.diffY) * f, e = g.width * f, g = g.height * f, h = a.autoZoomReal && isNaN(a.zoomLevel) ? e / h > g / l ? .8 * h / e : .8 * l / g : a.zoomLevel, l = this.zoomControl, h = d.fitToBounds(h, l.minZoomLevel, l.maxZoomLevel), isNaN(a.zoomX) && isNaN(a.zoomY) && isNaN(a.zoomLatitude) && isNaN(a.zoomLongitude) && this.zoomToMapXY(h, b + e / 2, c + g / 2));\n        this.zoomControl.update();\n      }\n    },\n    zoomToSelectedObject: function zoomToSelectedObject() {\n      this.zoomToObject(this.selectedObject);\n    },\n    zoomTo: function zoomTo(a, b, c, e) {\n      var g = this.zoomControl;\n      a = d.fitToBounds(a, g.minZoomLevel, g.maxZoomLevel);\n      g = this.zoomLevel();\n      isNaN(b) && (b = this.realWidth / this.mapWidth, b = (this.zoomX() - .5 * b) * (a / g) + .5 * b);\n      isNaN(c) && (c = this.realHeight / this.mapHeight, c = (this.zoomY() - .5 * c) * (a / g) + .5 * c);\n      this.stopAnimation();\n      isNaN(a) || (g = this.mapContainer, this.initialX = g.x, this.initialY = g.y, this.initialScale = g.scale, this.finalX = this.mapWidth * b, this.finalY = this.mapHeight * c, this.finalScale = a, this.finalX != this.initialX || this.finalY != this.initialY || this.finalScale != this.initialScale ? e ? (this.tweenPercent = 1, this.rescaleMapAndObjects(), this.wheelBusy = !1) : this.animateMap() : this.wheelBusy = !1);\n    },\n    loadXml: function loadXml(a) {\n      var b;\n      window.XMLHttpRequest && (b = new XMLHttpRequest());\n      b.overrideMimeType && b.overrideMimeType(\"text/xml\");\n      b.open(\"GET\", a, !1);\n      b.send();\n      this.parseXMLObject(b.responseXML);\n      this.svgData && this.buildEverything();\n    },\n    stopAnimation: function stopAnimation() {\n      this.frame = this.totalFrames;\n    },\n    processObjects: function processObjects(a) {\n      var b = this.selectedObject;\n\n      if (0 < b.images.length || 0 < b.areas.length || 0 < b.lines.length || b == this.dataProvider || a) {\n        a = this.container;\n        var c = this.stageImagesContainer;\n        c && c.remove();\n        this.stageImagesContainer = c = a.set();\n        this.trendLinesSet.push(c);\n        var d = this.stageLinesContainer;\n        d && d.remove();\n        this.stageLinesContainer = d = a.set();\n        this.trendLinesSet.push(d);\n        var g = this.mapImagesContainer;\n        g && g.remove();\n        this.mapImagesContainer = g = a.set();\n        this.mapContainer.push(g);\n        var f = this.mapLinesContainer;\n        f && f.remove();\n        this.mapLinesContainer = f = a.set();\n        this.mapContainer.push(f);\n        this.linesAboveImages ? (g.toFront(), c.toFront(), f.toFront(), d.toFront()) : (f.toFront(), d.toFront(), g.toFront(), c.toFront());\n        b && (this.imagesProcessor.reset(), this.linesProcessor.reset(), this.linesAboveImages ? (this.imagesProcessor.process(b), this.linesProcessor.process(b)) : (this.linesProcessor.process(b), this.imagesProcessor.process(b)));\n        this.rescaleObjects();\n      }\n    },\n    processAreas: function processAreas() {\n      this.areasProcessor.process(this.dataProvider);\n    },\n    buildSVGMap: function buildSVGMap() {\n      d.remove(this.mapSet);\n      var a = this.svgData.g.path,\n          b = this.container,\n          c = b.set();\n      this.svgAreas = [];\n      this.svgAreasById = {};\n      void 0 === a.length && (a = [a]);\n      var e;\n\n      for (e = 0; e < a.length; e++) {\n        var g = a[e],\n            f = g.d,\n            k = g.title;\n        g.titleTr && (k = g.titleTr);\n        var h = b.path(f);\n        h.id = g.id;\n\n        if (this.areasSettings.preserveOriginalAttributes) {\n          h.customAttr = {};\n\n          for (var l in g) {\n            \"d\" != l && \"id\" != l && \"title\" != l && (h.customAttr[l] = g[l]);\n          }\n        }\n\n        g.outline && (h.outline = !0);\n        h.path = f;\n        this.svgAreasById[g.id] = {\n          area: h,\n          title: k,\n          className: g[\"class\"]\n        };\n        this.svgAreas.push(h);\n        c.push(h);\n      }\n\n      this.mapSet = c;\n      this.mapContainer.push(c);\n      this.resizeMap();\n    },\n    centerAlign: function centerAlign() {},\n    setProjection: function setProjection(a) {\n      this.projection = a;\n      this.chartCreated = !1;\n      this.buildEverything();\n    },\n    addObjectEventListeners: function addObjectEventListeners(a, b) {\n      var c = this;\n      a.mousedown(function (a) {\n        c.mouseDownMapObject(b, a);\n      }).mouseup(function (a) {\n        c.clickMapObject(b, a);\n      }).mouseover(function (a) {\n        c.balloonX = NaN;\n        c.rollOverMapObject(b, !0, a);\n      }).mouseout(function (a) {\n        c.balloonX = NaN;\n        c.rollOutMapObject(b, a);\n      }).touchend(function (a) {\n        4 > Math.abs(c.mouseX - c.tmx) && 4 > Math.abs(c.mouseY - c.tmy) && (c.tapped = !0);\n        c.tapToActivate && !c.tapped || c.mapWasDragged || c.mapWasPinched || (c.balloonX = NaN, c.rollOverMapObject(b, !0, a), c.clickMapObject(b, a));\n      }).touchstart(function (a) {\n        c.tmx = c.mouseX;\n        c.tmy = c.mouseY;\n        c.mouseDownMapObject(b, a);\n      }).keyup(function (a) {\n        13 == a.keyCode && c.clickMapObject(b, a);\n      }).focus(function (a) {\n        var d, f;\n        \"MapImage\" != b.objectType || isNaN(b.longitude) || (d = b.longitude, f = b.latitude);\n        \"MapArea\" == b.objectType && (d = c.getAreaCenterLongitude(b), f = c.getAreaCenterLatitude(b));\n        d = c.coordinatesToStageXY(d, f);\n        c.balloonX = d.x;\n        c.balloonY = d.y;\n        c.rollOverMapObject(b, !0, a);\n        c.focusedItem = b;\n      }).blur(function (a) {\n        c.rollOutMapObject(b, a);\n        c.focusedItem = void 0;\n      });\n    },\n    checkIfSelected: function checkIfSelected(a) {\n      var b = this.selectedObject;\n      if (b == a) return !0;\n\n      if (b = b.groupId) {\n        var b = this.getGroupById(b),\n            c;\n\n        for (c = 0; c < b.length; c++) {\n          if (b[c] == a) return !0;\n        }\n      }\n\n      return !1;\n    },\n    clearMap: function clearMap() {\n      this.chartDiv.innerHTML = \"\";\n      this.clearObjectList();\n    },\n    clearObjectList: function clearObjectList() {\n      var a = this.objectList;\n      a && a.div && (a.div.innerHTML = \"\");\n    },\n    checkIfLast: function checkIfLast(a) {\n      if (a) {\n        var b = a.parentNode;\n        if (b && b.lastChild == a) return !0;\n      }\n\n      return !1;\n    },\n    showAsRolledOver: function showAsRolledOver(a) {\n      var b = a.displayObject;\n\n      if (!a.showAsSelected && b && !a.isOver) {\n        b.node.onmouseout = function () {};\n\n        b.node.onmouseover = function () {};\n\n        b.node.onclick = function () {};\n\n        !a.isFirst && a.bringForwardOnHover && (b.toFront(), a.isFirst = !0);\n        var c = a.rollOverColorReal,\n            e;\n        a.preserveOriginalAttributes && (c = void 0);\n        \"bubble\" == a.type && (c = void 0);\n        void 0 == c && (isNaN(a.rollOverBrightnessReal) || (c = d.adjustLuminosity(a.colorReal, a.rollOverBrightnessReal / 100)));\n        if (void 0 != c) if (\"MapImage\" == a.objectType) (e = a.image) && e.setAttr(\"fill\", c);else if (\"MapLine\" == a.objectType) {\n          if ((e = a.lineSvg) && e.setAttr(\"stroke\", c), e = a.arrowSvg) e.setAttr(\"fill\", c), e.setAttr(\"stroke\", c);\n        } else b.setAttr(\"fill\", c);\n        (c = a.imageLabel) && !a.labelInactive && (e = a.labelRollOverColorReal, void 0 != e && c.setAttr(\"fill\", e));\n        c = a.rollOverOutlineColorReal;\n        void 0 != c && (\"MapImage\" == a.objectType ? (e = a.image) && e.setAttr(\"stroke\", c) : b.setAttr(\"stroke\", c));\n        \"MapImage\" == a.objectType ? (c = this.imagesSettings.rollOverOutlineThickness, (e = a.image) && (isNaN(c) || e.setAttr(\"stroke-width\", c))) : (c = this.areasSettings.rollOverOutlineThickness, isNaN(c) || b.setAttr(\"stroke-width\", c));\n\n        if (\"MapArea\" == a.objectType) {\n          c = this.areasSettings;\n          e = a.rollOverAlphaReal;\n          isNaN(e) || b.setAttr(\"fill-opacity\", e);\n          e = c.rollOverOutlineAlpha;\n          isNaN(e) || b.setAttr(\"stroke-opacity\", e);\n          e = 1;\n          this.areasSettings.adjustOutlineThickness && (e = this.zoomLevel() * this.mapScale);\n          var g = c.rollOverOutlineThickness;\n          isNaN(g) || b.setAttr(\"stroke-width\", g / e);\n          (c = c.rollOverPattern) && b.pattern(c, this.mapScale, this.path);\n        }\n\n        \"MapImage\" == a.objectType && (c = a.rollOverScaleReal, isNaN(c) || 1 == c || (e = b.scale, isNaN(e) && (e = 1), a.tempScale = e, b.translate(b.x, b.y, e * c, !0)));\n        this.useHandCursorOnClickableOjects && this.checkIfClickable(a) && b.setAttr(\"cursor\", \"pointer\");\n        a.mouseEnabled && this.addObjectEventListeners(b, a);\n        a.isOver = !0;\n      }\n\n      this.outlinesToFront();\n    },\n    rollOverMapObject: function rollOverMapObject(a, b, c) {\n      if (this.chartCreated) {\n        this.handleMouseMove();\n        var d = this.previouslyHovered;\n        d && d != a ? (!1 === this.checkIfSelected(d) && (this.returnInitialColor(d, !0), this.previouslyHovered = null), this.balloon.hide(0)) : clearTimeout(this.hoverInt);\n\n        if (!this.preventHover) {\n          if (!1 === this.checkIfSelected(a)) {\n            if (d = a.groupId) {\n              var d = this.getGroupById(d),\n                  g;\n\n              for (g = 0; g < d.length; g++) {\n                d[g] != a && this.showAsRolledOver(d[g]);\n              }\n            }\n\n            this.showAsRolledOver(a);\n          } else (d = a.displayObject) && (this.allowClickOnSelectedObject ? d.setAttr(\"cursor\", \"pointer\") : d.setAttr(\"cursor\", \"default\"));\n\n          this.showDescriptionOnHover ? this.showDescription(a) : !this.showBalloonOnSelectedObject && this.checkIfSelected(a) || !1 === b || (g = this.balloon, this.balloon.fixedPosition = !1, b = a.colorReal, d = \"\", void 0 !== b && this.useObjectColorForBalloon || (b = g.fillColor), (g = a.balloonTextReal) && (d = this.formatString(g, a)), this.balloonLabelFunction && (d = this.balloonLabelFunction(a, this)), d && \"\" !== d && this.showBalloon(d, b, !1, this.balloonX, this.balloonY));\n          c = {\n            type: \"rollOverMapObject\",\n            mapObject: a,\n            chart: this,\n            event: c\n          };\n          a.isOver = !0;\n          this.fire(c);\n          this.previouslyHovered = a;\n        }\n      }\n    },\n    longitudeToX: function longitudeToX(a) {\n      return (this.longitudeToCoordinate(a) + this.diffX * this.mapScale) * this.zoomLevel() + this.mapContainer.x;\n    },\n    latitudeToY: function latitudeToY(a) {\n      return (this.latitudeToCoordinate(a) + this.diffY * this.mapScale) * this.zoomLevel() + this.mapContainer.y;\n    },\n    latitudeToStageY: function latitudeToStageY(a) {\n      return this.latitudeToCoordinate(a) * this.zoomLevel() + this.mapContainer.y + this.diffY * this.mapScale;\n    },\n    longitudeToStageX: function longitudeToStageX(a) {\n      return this.longitudeToCoordinate(a) * this.zoomLevel() + this.mapContainer.x + this.diffX * this.mapScale;\n    },\n    stageXToLongitude: function stageXToLongitude(a) {\n      a = (a - this.mapContainer.x) / this.zoomLevel();\n      return this.coordinateToLongitude(a);\n    },\n    stageYToLatitude: function stageYToLatitude(a) {\n      a = (a - this.mapContainer.y) / this.zoomLevel();\n      return this.coordinateToLatitude(a);\n    },\n    rollOutMapObject: function rollOutMapObject(a, b) {\n      this.hideBalloon();\n\n      if (a && this.chartCreated && a.isOver) {\n        this.checkIfSelected(a) || this.returnInitialColor(a);\n        var c = {\n          type: \"rollOutMapObject\",\n          mapObject: a,\n          chart: this,\n          event: b\n        };\n        a.isOver = !1;\n        this.fire(c);\n      }\n    },\n    formatString: function formatString(a, b) {\n      var c = this.nf,\n          e = this.pf,\n          g = b.title;\n      b.titleTr && (g = b.titleTr);\n      void 0 == g && (g = \"\");\n      var f = b.value,\n          f = isNaN(f) ? \"\" : d.formatNumber(f, c),\n          c = b.percents,\n          c = isNaN(c) ? \"\" : d.formatNumber(c, e),\n          e = b.description;\n      void 0 == e && (e = \"\");\n      var k = b.customData;\n      void 0 == k && (k = \"\");\n      return a = d.massReplace(a, {\n        \"[[title]]\": g,\n        \"[[value]]\": f,\n        \"[[percent]]\": c,\n        \"[[description]]\": e,\n        \"[[customData]]\": k\n      });\n    },\n    mouseDownMapObject: function mouseDownMapObject(a, b) {\n      this.fire({\n        type: \"mouseDownMapObject\",\n        mapObject: a,\n        chart: this,\n        event: b\n      });\n    },\n    clickMapObject: function clickMapObject(a, b) {\n      var c = this;\n      b && (b.touches || isNaN(a.zoomLevel) && isNaN(a.zoomX) && isNaN(a.zoomY) || c.hideBalloon());\n\n      if (c.chartCreated && !c.preventHover && c.checkTouchDuration(b) && !c.mapWasDragged && c.checkIfClickable(a) && !c.mapWasPinched) {\n        c.selectObject(a);\n        var d = c.zoomLevel(),\n            g = c.mapSet.getBBox(),\n            d = c.xyToCoordinates((c.mouseX - c.mapContainer.x) / d - g.x * c.mapScale, (c.mouseY - c.mapContainer.y) / d - g.y * c.mapScale);\n        c.clickLatitude = d.latitude;\n        c.clickLongitude = d.longitude;\n        b && b.touches && setTimeout(function () {\n          c.showBalloonAfterZoom.call(c);\n        }, 1E3 * c.zoomDuration);\n        c.fire({\n          type: \"clickMapObject\",\n          mapObject: a,\n          chart: c,\n          event: b\n        });\n        c.objectWasClicked = !0;\n      }\n    },\n    showBalloonAfterZoom: function showBalloonAfterZoom() {\n      var a = this.clickLongitude,\n          b = this.clickLatitude,\n          c = this.selectedObject;\n      \"MapImage\" != c.objectType || isNaN(c.longitude) || (a = c.longitude, b = c.latitude);\n      a = this.coordinatesToStageXY(a, b);\n      this.balloonX = a.x;\n      this.balloonY = a.y;\n      this.rollOverMapObject(this.selectedObject, !0);\n    },\n    checkIfClickable: function checkIfClickable(a) {\n      var b = this.allowClickOnSelectedObject;\n      return this.selectedObject == a && b ? !0 : this.selectedObject != a || b ? !0 === a.selectable || \"MapArea\" == a.objectType && a.autoZoomReal || a.url || a.linkToObject || 0 < a.images.length || 0 < a.lines.length || !isNaN(a.zoomLevel) || !isNaN(a.zoomX) || !isNaN(a.zoomY) || a.description ? !0 : !1 : !1;\n    },\n    resizeMap: function resizeMap() {\n      var a = this.mapSet;\n\n      if (a) {\n        var b = 1,\n            c = a.getBBox(),\n            d = this.realWidth,\n            g = this.realHeight,\n            f = c.width,\n            c = c.height;\n        0 < f && 0 < c && (this.fitMapToContainer && (b = f / d > c / g ? d / f : g / c), a.translate(0, 0, b, !0), this.mapScale = b, this.mapHeight = c * b, this.mapWidth = f * b);\n      }\n    },\n    zoomIn: function zoomIn() {\n      var a = this.zoomLevel() * this.zoomControl.zoomFactor;\n      this.zoomTo(a);\n    },\n    zoomOut: function zoomOut() {\n      var a = this.zoomLevel() / this.zoomControl.zoomFactor;\n      this.zoomTo(a);\n    },\n    moveLeft: function moveLeft() {\n      var a = this.zoomX() + this.zoomControl.panStepSize;\n      this.zoomTo(this.zoomLevel(), a, this.zoomY());\n    },\n    moveRight: function moveRight() {\n      var a = this.zoomX() - this.zoomControl.panStepSize;\n      this.zoomTo(this.zoomLevel(), a, this.zoomY());\n    },\n    moveUp: function moveUp() {\n      var a = this.zoomY() + this.zoomControl.panStepSize;\n      this.zoomTo(this.zoomLevel(), this.zoomX(), a);\n    },\n    moveDown: function moveDown() {\n      var a = this.zoomY() - this.zoomControl.panStepSize;\n      this.zoomTo(this.zoomLevel(), this.zoomX(), a);\n    },\n    zoomX: function zoomX() {\n      return this.mapSet ? Math.round(1E4 * this.mapContainer.x / this.mapWidth) / 1E4 : NaN;\n    },\n    zoomY: function zoomY() {\n      return this.mapSet ? Math.round(1E4 * this.mapContainer.y / this.mapHeight) / 1E4 : NaN;\n    },\n    goHome: function goHome() {\n      this.selectObject(this.dataProvider);\n      this.fire({\n        type: \"homeButtonClicked\",\n        chart: this\n      });\n    },\n    zoomLevel: function zoomLevel() {\n      return Math.round(1E5 * this.mapContainer.scale) / 1E5;\n    },\n    showDescriptionAndGetUrl: function showDescriptionAndGetUrl() {\n      var a = this.selectedObject;\n\n      if (a) {\n        this.showDescription();\n        var b = a.url;\n        if (b) d.getURL(b, a.urlTarget);else if (b = a.linkToObject) {\n          if (d.isString(b)) {\n            var c = this.getObjectById(b);\n\n            if (c) {\n              this.selectObject(c);\n              return;\n            }\n          }\n\n          b && a.passZoomValuesToTarget && (b.zoomLatitude = this.zoomLatitude(), b.zoomLongitude = this.zoomLongitude(), b.zoomLevel = this.zoomLevel());\n          this.extendMapData(b) || this.selectObject(b);\n        }\n      }\n    },\n    extendMapData: function extendMapData(a) {\n      var b = a.objectType;\n      if (\"MapImage\" != b && \"MapArea\" != b && \"MapLine\" != b) return d.extend(a, new d.MapData(), !0), this.dataProvider = a, this.zoomInstantly = !0, this.validateData(), !0;\n    },\n    showDescription: function showDescription(a) {\n      a || (a = this.selectedObject);\n      this.allowMultipleDescriptionWindows || this.closeAllDescriptions();\n\n      if (a.description) {\n        var b = a.descriptionWindow;\n        b && b.close();\n        b = new d.DescriptionWindow();\n        a.descriptionWindow = b;\n        var c = a.descriptionWindowWidth,\n            e = a.descriptionWindowHeight,\n            g = a.descriptionWindowLeft,\n            f = a.descriptionWindowTop,\n            k = a.descriptionWindowRight,\n            h = a.descriptionWindowBottom;\n        isNaN(k) || (g = this.realWidth - k);\n        isNaN(h) || (f = this.realHeight - h);\n        var l = a.descriptionWindowX;\n        isNaN(l) || (g = l);\n        l = a.descriptionWindowY;\n        isNaN(l) || (f = l);\n        isNaN(g) && (g = this.mouseX, g = g > this.realWidth / 2 ? g - c - 20 : g + 20);\n        isNaN(f) && (f = this.mouseY);\n        b.maxHeight = e;\n        l = a.title;\n        a.titleTr && (l = a.titleTr);\n        b.show(this, this.descriptionsDiv, a.description, l);\n        a = b.div.style;\n        a.position = \"absolute\";\n        a.width = c + \"px\";\n        a.maxHeight = e + \"px\";\n        isNaN(h) || (f -= b.div.offsetHeight);\n        isNaN(k) || (g -= b.div.offsetWidth);\n        a.left = g + \"px\";\n        a.top = f + \"px\";\n      }\n    },\n    parseXMLObject: function parseXMLObject(a) {\n      var b = {\n        root: {}\n      };\n      this.parseXMLNode(b, \"root\", a);\n      this.svgData = b.root.svg;\n      this.getBounds();\n    },\n    getBounds: function getBounds() {\n      var a = this.dataProvider;\n\n      try {\n        var b = this.svgData.defs[\"amcharts:ammap\"];\n        a.leftLongitude = Number(b.leftLongitude);\n        a.rightLongitude = Number(b.rightLongitude);\n        a.topLatitude = Number(b.topLatitude);\n        a.bottomLatitude = Number(b.bottomLatitude);\n        a.projection = b.projection;\n        var c = b.wrappedLongitudes;\n        c && (a.rightLongitude += 360);\n        a.wrappedLongitudes = c;\n      } catch (d) {}\n    },\n    recalcLongitude: function recalcLongitude(a) {\n      return this.dataProvider.wrappedLongitudes ? a < this.dataProvider.leftLongitude ? Number(a) + 360 : a : a;\n    },\n    latitudeToCoordinate: function latitudeToCoordinate(a) {\n      var b,\n          c = this.dataProvider;\n\n      if (this.mapSet) {\n        b = c.topLatitude;\n        var d = c.bottomLatitude;\n        \"mercator\" == c.projection && (a = this.mercatorLatitudeToCoordinate(a), b = this.mercatorLatitudeToCoordinate(b), d = this.mercatorLatitudeToCoordinate(d));\n        b = (a - b) / (d - b) * this.mapHeight;\n      }\n\n      return b;\n    },\n    longitudeToCoordinate: function longitudeToCoordinate(a) {\n      a = this.recalcLongitude(a);\n      var b,\n          c = this.dataProvider;\n      this.mapSet && (b = c.leftLongitude, b = (a - b) / (c.rightLongitude - b) * this.mapWidth);\n      return b;\n    },\n    mercatorLatitudeToCoordinate: function mercatorLatitudeToCoordinate(a) {\n      89.5 < a && (a = 89.5);\n      -89.5 > a && (a = -89.5);\n      a = d.degreesToRadians(a);\n      return d.radiansToDegrees(.5 * Math.log((1 + Math.sin(a)) / (1 - Math.sin(a))) / 2);\n    },\n    zoomLatitude: function zoomLatitude() {\n      if (this.mapContainer) {\n        var a = this.mapSet.getBBox(),\n            b = (-this.mapContainer.x + this.previousWidth / 2) / this.zoomLevel() - a.x * this.mapScale,\n            a = (-this.mapContainer.y + this.previousHeight / 2) / this.zoomLevel() - a.y * this.mapScale;\n        return this.xyToCoordinates(b, a).latitude;\n      }\n    },\n    zoomLongitude: function zoomLongitude() {\n      if (this.mapContainer) {\n        var a = this.mapSet.getBBox(),\n            b = (-this.mapContainer.x + this.previousWidth / 2) / this.zoomLevel() - a.x * this.mapScale,\n            a = (-this.mapContainer.y + this.previousHeight / 2) / this.zoomLevel() - a.y * this.mapScale;\n        return this.xyToCoordinates(b, a).longitude;\n      }\n    },\n    getAreaCenterLatitude: function getAreaCenterLatitude(a) {\n      a = a.displayObject.getBBox();\n      var b = this.mapScale,\n          c = this.mapSet.getBBox();\n      return this.xyToCoordinates((a.x + a.width / 2 + this.diffX) * b - c.x * b, (a.y + a.height / 2 + this.diffY) * b - c.y * b).latitude;\n    },\n    getAreaCenterLongitude: function getAreaCenterLongitude(a) {\n      a = a.displayObject.getBBox();\n      var b = this.mapScale,\n          c = this.mapSet.getBBox();\n      return this.xyToCoordinates((a.x + a.width / 2 + this.diffX) * b - c.x * b, (a.y + a.height / 2 + this.diffY) * b - c.y * b).longitude;\n    },\n    milesToPixels: function milesToPixels(a) {\n      var b = this.dataProvider;\n      return this.mapWidth / (b.rightLongitude - b.leftLongitude) * a / 69.172;\n    },\n    kilometersToPixels: function kilometersToPixels(a) {\n      var b = this.dataProvider;\n      return this.mapWidth / (b.rightLongitude - b.leftLongitude) * a / 111.325;\n    },\n    handleBackgroundClick: function handleBackgroundClick() {\n      if (this.backgroundZoomsToTop && !this.mapWasDragged) {\n        var a = this.dataProvider;\n        if (this.checkIfClickable(a)) this.clickMapObject(a);else {\n          var b = a.zoomX,\n              c = a.zoomY,\n              d = a.zoomLongitude,\n              g = a.zoomLatitude,\n              a = a.zoomLevel;\n          isNaN(b) || isNaN(c) || this.zoomTo(a, b, c);\n          isNaN(d) || isNaN(g) || this.zoomToLongLat(a, d, g, !0);\n        }\n      }\n    },\n    parseXMLNode: function parseXMLNode(a, b, c, d) {\n      void 0 === d && (d = \"\");\n      var g, f, k;\n\n      if (c) {\n        var h = c.childNodes.length;\n\n        for (g = 0; g < h; g++) {\n          f = c.childNodes[g];\n          var l = f.nodeName,\n              m = f.nodeValue ? this.trim(f.nodeValue) : \"\",\n              n = !1;\n          f.attributes && 0 < f.attributes.length && (n = !0);\n          if (0 !== f.childNodes.length || \"\" !== m || !1 !== n) if (3 == f.nodeType || 4 == f.nodeType) {\n            if (\"\" !== m) {\n              f = 0;\n\n              for (k in a[b]) {\n                a[b].hasOwnProperty(k) && f++;\n              }\n\n              f ? a[b][\"#text\"] = m : a[b] = m;\n            }\n          } else if (1 == f.nodeType) {\n            var p;\n            void 0 !== a[b][l] ? void 0 === a[b][l].length ? (p = a[b][l], a[b][l] = [], a[b][l].push(p), a[b][l].push({}), p = a[b][l][1]) : \"object\" == typeof a[b][l] && (a[b][l].push({}), p = a[b][l][a[b][l].length - 1]) : (a[b][l] = {}, p = a[b][l]);\n            if (f.attributes && f.attributes.length) for (m = 0; m < f.attributes.length; m++) {\n              p[f.attributes[m].name] = f.attributes[m].value;\n            }\n            void 0 !== a[b][l].length ? this.parseXMLNode(a[b][l], a[b][l].length - 1, f, d + \"  \") : this.parseXMLNode(a[b], l, f, d + \"  \");\n          }\n        }\n\n        f = 0;\n        c = \"\";\n\n        for (k in a[b]) {\n          \"#text\" == k ? c = a[b][k] : f++;\n        }\n\n        0 === f && void 0 === a[b].length && (a[b] = c);\n      }\n    },\n    doDoubleClickZoom: function doDoubleClickZoom() {\n      if (!this.mapWasDragged) {\n        var a = this.zoomLevel() * this.zoomControl.zoomFactor;\n        this.zoomToStageXY(a, this.mouseX, this.mouseY);\n      }\n    },\n    getDevInfo: function getDevInfo() {\n      var a = this.zoomLevel(),\n          b = this.mapSet.getBBox(),\n          b = this.xyToCoordinates((this.mouseX - this.mapContainer.x) / a - b.x * this.mapScale, (this.mouseY - this.mapContainer.y) / a - b.y * this.mapScale),\n          a = {\n        chart: this,\n        type: \"writeDevInfo\",\n        zoomLevel: a,\n        zoomX: this.zoomX(),\n        zoomY: this.zoomY(),\n        zoomLatitude: this.zoomLatitude(),\n        zoomLongitude: this.zoomLongitude(),\n        latitude: b.latitude,\n        longitude: b.longitude,\n        left: this.mouseX,\n        top: this.mouseY,\n        right: this.realWidth - this.mouseX,\n        bottom: this.realHeight - this.mouseY,\n        percentLeft: Math.round(this.mouseX / this.realWidth * 100) + \"%\",\n        percentTop: Math.round(this.mouseY / this.realHeight * 100) + \"%\",\n        percentRight: Math.round((this.realWidth - this.mouseX) / this.realWidth * 100) + \"%\",\n        percentBottom: Math.round((this.realHeight - this.mouseY) / this.realHeight * 100) + \"%\"\n      },\n          b = \"zoomLevel:\" + a.zoomLevel + \", zoomLongitude:\" + a.zoomLongitude + \", zoomLatitude:\" + a.zoomLatitude + \"\\n\",\n          b = b + (\"zoomX:\" + a.zoomX + \", zoomY:\" + a.zoomY + \"\\n\"),\n          b = b + (\"latitude:\" + a.latitude + \", longitude:\" + a.longitude + \"\\n\"),\n          b = b + (\"left:\" + a.left + \", top:\" + a.top + \"\\n\"),\n          b = b + (\"right:\" + a.right + \", bottom:\" + a.bottom + \"\\n\"),\n          b = b + (\"left:\" + a.percentLeft + \", top:\" + a.percentTop + \"\\n\"),\n          b = b + (\"right:\" + a.percentRight + \", bottom:\" + a.percentBottom + \"\\n\");\n      a.str = b;\n      this.fire(a);\n      return a;\n    },\n    getXY: function getXY(a, b, c) {\n      void 0 !== a && (-1 != String(a).indexOf(\"%\") ? (a = Number(a.split(\"%\").join(\"\")), c && (a = 100 - a), a = Number(a) * b / 100) : c && (a = b - a));\n      return a;\n    },\n    getObjectById: function getObjectById(a) {\n      var b = this.dataProvider;\n\n      if (b.areas) {\n        var c = this.getObject(a, b.areas);\n        if (c) return c;\n      }\n\n      if (c = this.getObject(a, b.images)) return c;\n      if (a = this.getObject(a, b.lines)) return a;\n    },\n    getObject: function getObject(a, b) {\n      if (b) {\n        var c;\n\n        for (c = 0; c < b.length; c++) {\n          var d = b[c];\n          if (d.id == a) return d;\n\n          if (d.areas) {\n            var g = this.getObject(a, d.areas);\n            if (g) return g;\n          }\n\n          if (g = this.getObject(a, d.images)) return g;\n          if (d = this.getObject(a, d.lines)) return d;\n        }\n      }\n    },\n    parseData: function parseData() {\n      var a = this.dataProvider;\n      this.processObject(a.areas, a, \"area\");\n      this.processObject(a.images, a, \"image\");\n      this.processObject(a.lines, a, \"line\");\n    },\n    processObject: function processObject(a, b, c) {\n      if (a) {\n        var e;\n\n        for (e = 0; e < a.length; e++) {\n          var g = a[e];\n          g.parentObject = b;\n          \"area\" == c && d.extend(g, new d.MapArea(this.theme), !0);\n          \"image\" == c && (g = d.extend(g, new d.MapImage(this.theme), !0));\n          \"line\" == c && (g = d.extend(g, new d.MapLine(this.theme), !0));\n          a[e] = g;\n          g.areas && this.processObject(g.areas, g, \"area\");\n          g.images && this.processObject(g.images, g, \"image\");\n          g.lines && this.processObject(g.lines, g, \"line\");\n        }\n      }\n    },\n    positionChanged: function positionChanged() {\n      var a = {\n        type: \"positionChanged\",\n        zoomX: this.zoomX(),\n        zoomY: this.zoomY(),\n        zoomLevel: this.zoomLevel(),\n        chart: this\n      };\n      this.fire(a);\n    },\n    getX: function getX(a, b) {\n      return this.getXY(a, this.realWidth, b);\n    },\n    getY: function getY(a, b) {\n      return this.getXY(a, this.realHeight, b);\n    },\n    trim: function trim(a) {\n      if (a) {\n        var b;\n\n        for (b = 0; b < a.length; b++) {\n          if (-1 === \" \\n\\r\\t\\f\\x0B\\xA0\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u200B\\u2028\\u2029\\u3000\".indexOf(a.charAt(b))) {\n            a = a.substring(b);\n            break;\n          }\n        }\n\n        for (b = a.length - 1; 0 <= b; b--) {\n          if (-1 === \" \\n\\r\\t\\f\\x0B\\xA0\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u200B\\u2028\\u2029\\u3000\".indexOf(a.charAt(b))) {\n            a = a.substring(0, b + 1);\n            break;\n          }\n        }\n\n        return -1 === \" \\n\\r\\t\\f\\x0B\\xA0\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u200B\\u2028\\u2029\\u3000\".indexOf(a.charAt(0)) ? a : \"\";\n      }\n    },\n    destroy: function destroy() {\n      d.AmMap.base.destroy.call(this);\n    },\n    x2c: function x2c(a) {\n      var b = this.dataProvider.leftLongitude;\n      return Math.round(this.unscaledMapWidth * (a - b) / (this.dataProvider.rightLongitude - b) * 100) / 100;\n    },\n    y2c: function y2c(a) {\n      var b = this.dataProvider.topLatitude;\n      return Math.round(this.unscaledMapHeight * (a - b) / (this.dataProvider.bottomLatitude - b) * 100) / 100;\n    },\n    normalize: function normalize(a) {\n      if (!a.pathsArray) {\n        var b;\n        if (a.normalized) b = a.normalized;else {\n          var c = d.normalizePath(a.node);\n          b = a.node.getAttribute(\"d\");\n          a.normalized = b;\n          c.maxX > this.maxMapX && (this.maxMapX = c.maxX);\n          c.minX < this.minMapX && (this.minMapX = c.minX);\n          c.maxY > this.maxMapY && (this.maxMapY = c.maxY);\n          c.minY < this.minMapY && (this.minMapY = c.minY);\n        }\n        a.node.setAttribute(\"d\", b);\n      }\n    },\n    redraw: function redraw(a) {\n      var b = a.normalized,\n          b = b.split(\" Z\").join(\"\"),\n          b = b.split(\"M\");\n      a.pathsArray = [];\n\n      for (var c = 0; c < b.length; c++) {\n        var d = b[c];\n\n        if (d) {\n          for (var d = d.split(\"L\"), g = [], f = 0; f < d.length; f++) {\n            if (d[f]) {\n              var k = d[f].split(\" \"),\n                  k = this.xyToCoordinates(Number(k[1]) - this.minMapX, Number(k[2]) - this.minMapY, this.dpProjectionFunction, this.sourceMapWidth, this.sourceMapHeight);\n              g.push([k.longitude, k.latitude]);\n            }\n          }\n\n          a.pathsArray.push(g);\n        }\n      }\n\n      b = \"\";\n\n      for (c = 0; c < a.pathsArray.length; c++) {\n        b += this.redrawArea(a.pathsArray[c]);\n      }\n\n      a.node.setAttribute(\"d\", b);\n      a.path = b;\n    },\n    redrawArea: function redrawArea(a) {\n      for (var b = !1, c = \"\", e = 0; e < a.length; e++) {\n        var g = a[e][0],\n            f = a[e][1],\n            k = d.degreesToRadians(a[e][0]),\n            h = d.degreesToRadians(a[e][1]),\n            h = this.projectionFunction(k, h),\n            k = d.roundTo(this.x2c(d.radiansToDegrees(h[0])), 3),\n            h = d.roundTo(this.y2c(d.radiansToDegrees(h[1])), 3);\n        k < this.minMapXX && (this.minMapXX = k, this.leftLongLat = {\n          longitude: g,\n          latitude: f\n        });\n        k > this.maxMapXX && (this.maxMapXX = k, this.rightLongLat = {\n          longitude: g,\n          latitude: f\n        });\n        h < this.minMapYY && (this.minMapYY = h, this.topLongLat = {\n          longitude: g,\n          latitude: f\n        });\n        h > this.maxMapYY && (this.maxMapYY = h, this.bottomLongLat = {\n          longitude: g,\n          latitude: f\n        });\n        b ? c += \" L \" : (c += \" M \", b = !0);\n        c += k + \" \" + h;\n      }\n\n      return c + \" Z \";\n    },\n    normalizeMap: function normalizeMap() {\n      var a = d.degreesToRadians(this.dataProvider.leftLongitude),\n          b = d.degreesToRadians(this.dataProvider.rightLongitude),\n          c = d.degreesToRadians(this.dataProvider.topLatitude),\n          e = d.degreesToRadians(this.dataProvider.bottomLatitude),\n          g = a + (b - a) / 2,\n          f = c + (e - c) / 2,\n          k = this.dpProjectionFunction(g, c)[1],\n          h = this.dpProjectionFunction(g, e)[1],\n          l = this.dpProjectionFunction(a, f)[0],\n          m = this.dpProjectionFunction(b, f)[0],\n          c = d.equirectangular(g, c),\n          e = d.equirectangular(g, e),\n          k = (c[1] - e[1]) / (k - h),\n          a = d.equirectangular(a, f),\n          b = d.equirectangular(b, f),\n          l = (a[0] - b[0]) / (l - m);\n      this.minMapX = Infinity;\n      this.maxMapX = -Infinity;\n      this.minMapY = Infinity;\n      this.maxMapY = -Infinity;\n\n      for (m = 0; m < this.svgAreas.length; m++) {\n        this.normalize(this.svgAreas[m]);\n      }\n\n      this.sourceMapHeight = Math.abs(this.maxMapY - this.minMapY);\n      this.sourceMapWidth = Math.abs(this.maxMapX - this.minMapX);\n      this.unscaledMapWidth = this.sourceMapWidth * l;\n      this.unscaledMapHeight = this.sourceMapHeight * k;\n      this.diffY = this.diffX = 0;\n    },\n    fixMapPosition: function fixMapPosition() {\n      var a = d.degreesToRadians(this.dataProvider.leftLongitude),\n          b = d.degreesToRadians(this.dataProvider.rightLongitude),\n          c = d.degreesToRadians(this.dataProvider.topLatitude),\n          e = d.degreesToRadians(this.dataProvider.bottomLatitude),\n          g = a + (b - a) / 2,\n          f = c + (e - c) / 2,\n          k = this.dpProjectionFunction(g, c)[1],\n          h = this.dpProjectionFunction(g, e)[1],\n          l = this.dpProjectionFunction(a, f)[0],\n          m = this.dpProjectionFunction(b, f)[0];\n      this.sourceMapHeight = this.mapHeight / this.mapScale;\n      this.sourceMapWidth = this.mapWidth / this.mapScale;\n      this.unscaledMapWidth = (a - b) / (l - m) * this.sourceMapWidth;\n      this.unscaledMapHeight = (c - e) / (k - h) * this.sourceMapHeight;\n      b = this.coordinatesToXY(d.radiansToDegrees(g), d.radiansToDegrees(c));\n      a = this.coordinatesToXY(d.radiansToDegrees(a), d.radiansToDegrees(f));\n      c = f = Infinity;\n\n      for (e = 0; e < this.svgAreas.length; e++) {\n        g = this.svgAreas[e].getBBox(), g.y < f && (f = g.y), g.x < c && (c = g.x);\n      }\n\n      this.diffY = b.y / this.mapScale - f;\n      this.diffX = a.x / this.mapScale - c;\n\n      for (e = 0; e < this.svgAreas.length; e++) {\n        this.svgAreas[e].translate(this.diffX, this.diffY);\n      }\n    },\n    changeProjection: function changeProjection() {\n      this.minMapXX = Infinity;\n      this.maxMapXX = -Infinity;\n      this.minMapYY = Infinity;\n      this.maxMapYY = -Infinity;\n      this.projectionChanged = !1;\n\n      for (var a = 0; a < this.svgAreas.length; a++) {\n        this.redraw(this.svgAreas[a]);\n      }\n\n      this.projectionChanged = !0;\n      this.resizeMap();\n    },\n    coordinatesToXY: function coordinatesToXY(a, b) {\n      var c, e;\n      c = !1;\n      this.dataProvider && (c = this.dataProvider.wrappedLongitudes) && (a = this.recalcLongitude(a));\n      this.projectionFunction ? (e = this.projectionFunction(d.degreesToRadians(a), d.degreesToRadians(b)), c = this.mapScale * d.roundTo(this.x2c(d.radiansToDegrees(e[0])), 3), e = this.mapScale * d.roundTo(this.y2c(d.radiansToDegrees(e[1])), 3)) : (c = this.longitudeToCoordinate(a), e = this.latitudeToCoordinate(b));\n      return {\n        x: c,\n        y: e\n      };\n    },\n    coordinatesToStageXY: function coordinatesToStageXY(a, b) {\n      var c = this.coordinatesToXY(a, b),\n          d = c.x * this.zoomLevel() + this.mapContainer.x,\n          c = c.y * this.zoomLevel() + this.mapContainer.y;\n      return {\n        x: d,\n        y: c\n      };\n    },\n    stageXYToCoordinates: function stageXYToCoordinates(a, b) {\n      var c = this.mapSet.getBBox(),\n          d = (a - this.mapContainer.x) / this.zoomLevel() - c.x * this.mapScale,\n          c = (b - this.mapContainer.y) / this.zoomLevel() - c.y * this.mapScale;\n      return this.xyToCoordinates(d, c);\n    },\n    xyToCoordinates: function xyToCoordinates(a, b, c, e, g) {\n      var f;\n      isNaN(e) && (e = this.mapWidth);\n      isNaN(g) && (g = this.mapHeight);\n      c || (c = this.projectionFunction);\n\n      if (f = c.invert) {\n        var k = this.dataProvider.leftLongitude,\n            h = this.dataProvider.rightLongitude,\n            l = this.dataProvider.topLatitude,\n            m = this.dataProvider.bottomLatitude,\n            n = k + (h - k) / 2,\n            p = l + (m - l) / 2,\n            l = d.radiansToDegrees(c(d.degreesToRadians(n), d.degreesToRadians(l))[1]),\n            m = d.radiansToDegrees(c(d.degreesToRadians(n), d.degreesToRadians(m))[1]),\n            k = d.radiansToDegrees(c(d.degreesToRadians(k), d.degreesToRadians(p))[0]),\n            h = d.radiansToDegrees(c(d.degreesToRadians(h), d.degreesToRadians(p))[0]);\n        this.projectionChanged && (l = d.radiansToDegrees(c(d.degreesToRadians(this.topLongLat.longitude), d.degreesToRadians(this.topLongLat.latitude))[1]), m = d.radiansToDegrees(c(d.degreesToRadians(this.bottomLongLat.longitude), d.degreesToRadians(this.bottomLongLat.latitude))[1]), k = d.radiansToDegrees(c(d.degreesToRadians(this.leftLongLat.longitude), d.degreesToRadians(this.leftLongLat.latitude))[0]), h = d.radiansToDegrees(c(d.degreesToRadians(this.rightLongLat.longitude), d.degreesToRadians(this.rightLongLat.latitude))[0]));\n        a = d.degreesToRadians(a / e * (h - k) + k);\n        b = d.degreesToRadians(b / g * (m - l) + l);\n        b = f(a, b);\n        f = d.radiansToDegrees(b[0]);\n        b = d.radiansToDegrees(b[1]);\n      } else f = this.coordinateToLongitude(a), b = this.coordinateToLatitude(b);\n\n      return {\n        longitude: d.roundTo(f, 4),\n        latitude: d.roundTo(b, 4)\n      };\n    },\n    coordinateToLatitude: function coordinateToLatitude(a, b) {\n      var c;\n      void 0 === b && (b = this.mapHeight);\n\n      if (this.mapSet) {\n        var e = this.dataProvider,\n            g = e.bottomLatitude;\n        c = e.topLatitude;\n        \"mercator\" == e.projection ? (e = this.mercatorLatitudeToCoordinate(g), c = this.mercatorLatitudeToCoordinate(c), c = 2 * d.degreesToRadians(a * (e - c) / b + c), c = d.radiansToDegrees(2 * Math.atan(Math.exp(c)) - .5 * Math.PI)) : c = a / b * (g - c) + c;\n      }\n\n      return Math.round(1E6 * c) / 1E6;\n    },\n    handleKeyUp: function handleKeyUp(a) {\n      13 == a.keyCode && this.focusedItem && this.selectObject(this.focusedItem);\n    },\n    coordinateToLongitude: function coordinateToLongitude(a, b) {\n      var c,\n          d = this.dataProvider;\n      void 0 === b && (b = this.mapWidth);\n      this.mapSet && (c = a / b * (d.rightLongitude - d.leftLongitude) + d.leftLongitude);\n      return Math.round(1E6 * c) / 1E6;\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.ZoomControl = d.Class({\n    construct: function construct(a) {\n      this.cname = \"ZoomControl\";\n      this.panStepSize = .1;\n      this.zoomFactor = 2;\n      this.maxZoomLevel = 64;\n      this.minZoomLevel = 1;\n      this.panControlEnabled = !1;\n      this.zoomControlEnabled = !0;\n      this.buttonRollOverColor = \"#DADADA\";\n      this.buttonFillColor = \"#FFFFFF\";\n      this.buttonFillAlpha = 1;\n      this.buttonBorderColor = \"#000000\";\n      this.buttonBorderAlpha = .1;\n      this.buttonIconAlpha = this.buttonBorderThickness = 1;\n      this.gridColor = this.buttonIconColor = \"#000000\";\n      this.homeIconFile = \"homeIcon.gif\";\n      this.gridBackgroundColor = \"#000000\";\n      this.draggerAlpha = this.gridAlpha = this.gridBackgroundAlpha = 0;\n      this.draggerSize = this.buttonSize = 31;\n      this.iconSize = 11;\n      this.homeButtonEnabled = !0;\n      this.buttonCornerRadius = 2;\n      this.gridHeight = 5;\n      this.roundButtons = !0;\n      this.top = this.left = 10;\n      d.applyTheme(this, a, this.cname);\n    },\n    init: function init(a, b) {\n      var c = this;\n      c.chart = a;\n      d.remove(c.set);\n      var e = b.set();\n      d.setCN(a, e, \"zoom-control\");\n      var g = c.buttonSize,\n          f = c.zoomControlEnabled,\n          k = c.panControlEnabled,\n          h = c.buttonFillColor,\n          l = c.buttonFillAlpha,\n          m = c.buttonBorderThickness,\n          n = c.buttonBorderColor,\n          p = c.buttonBorderAlpha,\n          r = c.buttonCornerRadius,\n          t = c.buttonRollOverColor,\n          q = c.gridHeight,\n          y = c.zoomFactor,\n          B = c.minZoomLevel,\n          u = c.maxZoomLevel,\n          v = c.buttonIconAlpha,\n          w = c.buttonIconColor,\n          A = c.roundButtons,\n          C = a.svgIcons,\n          x = a.getX(c.left),\n          z = a.getY(c.top);\n      isNaN(c.right) || (x = a.getX(c.right, !0), x = k ? x - 3 * g : x - g);\n      isNaN(c.bottom) || (z = a.getY(c.bottom, !0), f && (z -= q + 3 * g), z = k ? z - 3 * g : c.homeButtonEnabled ? z - .5 * g : z + g);\n      e.translate(x, z);\n      c.previousDY = NaN;\n      var E,\n          x = g / 4 - 1;\n\n      if (f) {\n        E = b.set();\n        d.setCN(a, E, \"zoom-control-zoom\");\n        e.push(E);\n        c.set = e;\n        c.zoomSet = E;\n        5 < q && (f = d.rect(b, g + 6, q + 2 * g + 6, c.gridBackgroundColor, c.gridBackgroundAlpha, 0, \"#000000\", 0, 4), d.setCN(a, f, \"zoom-bg\"), f.translate(-3, -3), f.mouseup(function () {\n          c.handleBgUp();\n        }).touchend(function () {\n          c.handleBgUp();\n        }), E.push(f));\n        var F = g;\n        A && (F = g / 1.5);\n        c.draggerSize = F;\n        var H = Math.log(u / B) / Math.log(y) + 1;\n        1E3 < H && (H = 1E3);\n        var f = q / H,\n            G,\n            D = b.set();\n        D.translate((g - F) / 2 + 1, 1, NaN, !0);\n        E.push(D);\n\n        for (G = 1; G < H; G++) {\n          z = g + G * f, z = d.line(b, [1, F - 2], [z, z], c.gridColor, c.gridAlpha, 1), d.setCN(a, z, \"zoom-grid\"), D.push(z);\n        }\n\n        z = new d.SimpleButton();\n        z.setDownHandler(c.draggerDown, c);\n        z.setClickHandler(c.draggerUp, c);\n        z.init(b, F, f, h, l, m, n, p, r, t);\n        d.setCN(a, z.set, \"zoom-dragger\");\n        E.push(z.set);\n        z.set.setAttr(\"opacity\", c.draggerAlpha);\n        c.dragger = z.set;\n        c.previousY = NaN;\n        z = new d.SimpleButton();\n        C ? (F = b.set(), H = d.line(b, [-x, x], [0, 0], w, v, 1), G = d.line(b, [0, 0], [-x, x], w, v, 1), F.push(H), F.push(G), z.svgIcon = F) : z.setIcon(a.pathToImages + \"plus.gif\", c.iconSize);\n        z.setClickHandler(a.zoomIn, a);\n        z.init(b, g, g, h, l, m, n, p, r, t, v, w, A);\n        d.setCN(a, z.set, \"zoom-in\");\n        E.push(z.set);\n        z = new d.SimpleButton();\n        C ? z.svgIcon = d.line(b, [-x, x], [0, 0], w, v, 1) : z.setIcon(a.pathToImages + \"minus.gif\", c.iconSize);\n        z.setClickHandler(a.zoomOut, a);\n        z.init(b, g, g, h, l, m, n, p, r, t, v, w, A);\n        z.set.translate(0, q + g);\n        d.setCN(a, z.set, \"zoom-out\");\n        E.push(z.set);\n        q -= f;\n        u = Math.log(u / 100) / Math.log(y);\n        c.realStepSize = q / (u - Math.log(B / 100) / Math.log(y));\n        c.realGridHeight = q;\n        c.stepMax = u;\n      }\n\n      k && (k = b.set(), d.setCN(a, k, \"zoom-control-pan\"), e.push(k), E && E.translate(g, 4 * g), y = new d.SimpleButton(), C ? y.svgIcon = d.line(b, [x / 5, -x + x / 5, x / 5], [-x, 0, x], w, v, 1) : y.setIcon(a.pathToImages + \"panLeft.gif\", c.iconSize), y.setClickHandler(a.moveLeft, a), y.init(b, g, g, h, l, m, n, p, r, t, v, w, A), y.set.translate(0, g), d.setCN(a, y.set, \"pan-left\"), k.push(y.set), y = new d.SimpleButton(), C ? y.svgIcon = d.line(b, [-x / 5, x - x / 5, -x / 5], [-x, 0, x], w, v, 1) : y.setIcon(a.pathToImages + \"panRight.gif\", c.iconSize), y.setClickHandler(a.moveRight, a), y.init(b, g, g, h, l, m, n, p, r, t, v, w, A), y.set.translate(2 * g, g), d.setCN(a, y.set, \"pan-right\"), k.push(y.set), y = new d.SimpleButton(), C ? y.svgIcon = d.line(b, [-x, 0, x], [x / 5, -x + x / 5, x / 5], w, v, 1) : y.setIcon(a.pathToImages + \"panUp.gif\", c.iconSize), y.setClickHandler(a.moveUp, a), y.init(b, g, g, h, l, m, n, p, r, t, v, w, A), y.set.translate(g, 0), d.setCN(a, y.set, \"pan-up\"), k.push(y.set), y = new d.SimpleButton(), C ? y.svgIcon = d.line(b, [-x, 0, x], [-x / 5, x - x / 5, -x / 5], w, v, 1) : y.setIcon(a.pathToImages + \"panDown.gif\", c.iconSize), y.setClickHandler(a.moveDown, a), y.init(b, g, g, h, l, m, n, p, r, t, v, w, A), y.set.translate(g, 2 * g), d.setCN(a, y.set, \"pan-down\"), k.push(y.set), e.push(k));\n      c.homeButtonEnabled && (k = new d.SimpleButton(), C ? k.svgIcon = d.polygon(b, [-x, 0, x, x - 1, x - 1, 2, 2, -2, -2, -x + 1, -x + 1], [0, -x, 0, 0, x - 1, x - 1, 2, 2, x - 1, x - 1, 0], w, v, 1, w, v) : k.setIcon(a.pathToImages + c.homeIconFile, c.iconSize), k.setClickHandler(a.goHome, a), c.panControlEnabled && (p = l = 0), k.init(b, g, g, h, l, m, n, p, r, t, v, w, A), c.panControlEnabled ? k.set.translate(g, g) : E && E.translate(0, 1.5 * g), d.setCN(a, k.set, \"pan-home\"), e.push(k.set));\n      c.update();\n    },\n    draggerDown: function draggerDown() {\n      this.chart.stopDrag();\n      this.isDragging = !0;\n    },\n    draggerUp: function draggerUp() {\n      this.isDragging = !1;\n    },\n    handleBgUp: function handleBgUp() {\n      var a = this.chart;\n      a.zoomTo(100 * Math.pow(this.zoomFactor, this.stepMax - (a.mouseY - this.zoomSet.y - this.set.y - this.buttonSize - this.realStepSize / 2) / this.realStepSize));\n    },\n    update: function update() {\n      var a;\n      a = this.zoomFactor;\n      var b = this.realStepSize,\n          c = this.stepMax,\n          e = this.dragger,\n          g = this.buttonSize,\n          f,\n          k = this.chart;\n      k && (this.isDragging ? (k.stopDrag(), f = e.y + (k.mouseY - this.previousY), f = d.fitToBounds(f, g, this.realGridHeight + g), k.zoomTo(100 * Math.pow(a, c - (f - g) / b), NaN, NaN, !0)) : (a = Math.log(k.zoomLevel() / 100) / Math.log(a), f = (c - a) * b + g), this.previousY = k.mouseY, this.previousDY != f && e && (e.translate((this.buttonSize - this.draggerSize) / 2, f), this.previousDY = f));\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.SimpleButton = d.Class({\n    construct: function construct() {},\n    init: function init(a, b, c, e, g, f, k, h, l, m, n, p, r) {\n      var t = this;\n      t.rollOverColor = m;\n      t.color = e;\n      t.container = a;\n      m = a.set();\n      t.set = m;\n      r ? (b /= 2, e = d.circle(a, b, e, g, f, k, h), e.translate(b, b)) : e = d.rect(a, b, c, e, g, f, k, h, l);\n      m.push(e);\n      g = t.iconPath;\n      var q;\n      g && (q = t.iconSize, f = (b - q) / 2, r && (f = (2 * b - q) / 2), q = a.image(g, f, (c - q) / 2, q, q));\n      t.svgIcon && (q = t.svgIcon, r ? q.translate(b, b) : q.translate(b / 2, b / 2));\n      m.setAttr(\"cursor\", \"pointer\");\n      q && (m.push(q), q.setAttr(\"opacity\", n), q.node.style.pointerEvents = \"none\");\n      e.mousedown(function () {\n        t.handleDown();\n      }).touchstart(function () {\n        t.handleDown();\n      }).mouseup(function () {\n        t.handleUp();\n      }).touchend(function () {\n        t.handleUp();\n      }).mouseover(function () {\n        t.handleOver();\n      }).mouseout(function () {\n        t.handleOut();\n      });\n      t.bg = e;\n    },\n    setIcon: function setIcon(a, b) {\n      this.iconPath = a;\n      this.iconSize = b;\n    },\n    setClickHandler: function setClickHandler(a, b) {\n      this.clickHandler = a;\n      this.scope = b;\n    },\n    setDownHandler: function setDownHandler(a, b) {\n      this.downHandler = a;\n      this.scope = b;\n    },\n    handleUp: function handleUp() {\n      var a = this.clickHandler;\n      a && a.call(this.scope);\n    },\n    handleDown: function handleDown() {\n      var a = this.downHandler;\n      a && a.call(this.scope);\n    },\n    handleOver: function handleOver() {\n      this.container.chart.skipClick = !0;\n      this.bg.setAttr(\"fill\", this.rollOverColor);\n    },\n    handleOut: function handleOut() {\n      this.container.chart.skipClick = !1;\n      this.bg.setAttr(\"fill\", this.color);\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.SmallMap = d.Class({\n    construct: function construct(a) {\n      this.cname = \"SmallMap\";\n      this.mapColor = \"#e6e6e6\";\n      this.rectangleColor = \"#FFFFFF\";\n      this.top = this.right = 10;\n      this.minimizeButtonWidth = 23;\n      this.backgroundColor = \"#9A9A9A\";\n      this.backgroundAlpha = 1;\n      this.borderColor = \"#FFFFFF\";\n      this.iconColor = \"#000000\";\n      this.borderThickness = 3;\n      this.borderAlpha = 1;\n      this.size = .2;\n      this.enabled = !0;\n      d.applyTheme(this, a, this.cname);\n    },\n    init: function init(a, b) {\n      var c = this;\n\n      if (c.enabled) {\n        c.chart = a;\n        c.container = b;\n        c.width = a.realWidth * c.size;\n        c.height = a.realHeight * c.size;\n        d.remove(c.mapSet);\n        d.remove(c.allSet);\n        d.remove(c.set);\n        var e = b.set();\n        c.set = e;\n        d.setCN(a, e, \"small-map\");\n        var g = b.set();\n        c.allSet = g;\n        e.push(g);\n        c.buildSVGMap();\n        var f = c.borderThickness,\n            k = c.borderColor,\n            h = d.rect(b, c.width + f, c.height + f, c.backgroundColor, c.backgroundAlpha, f, k, c.borderAlpha);\n        d.setCN(a, h, \"small-map-bg\");\n        h.translate(-f / 2, -f / 2);\n        g.push(h);\n        h.toBack();\n        var l,\n            m,\n            h = c.minimizeButtonWidth,\n            n = new d.SimpleButton(),\n            p = h / 2;\n        a.svgIcons ? n.svgIcon = d.line(b, [-p / 2, 0, p / 2], [-p / 4, p / 4, -p / 4], c.iconColor, 1, 1) : n.setIcon(a.pathToImages + \"arrowDown.gif\", h);\n        n.setClickHandler(c.minimize, c);\n        n.init(b, h, h, k, 1, 1, k, 1);\n        d.setCN(a, n.set, \"small-map-down\");\n        n = n.set;\n        c.downButtonSet = n;\n        e.push(n);\n        var r = new d.SimpleButton();\n        a.svgIcons ? r.svgIcon = d.line(b, [-p / 2, 0, p / 2], [p / 4, -p / 4, p / 4], c.iconColor, 1, 1) : r.setIcon(a.pathToImages + \"arrowUp.gif\", h);\n        r.setClickHandler(c.maximize, c);\n        r.init(b, h, h, k, 1, 1, k, 1);\n        d.setCN(a, r.set, \"small-map-up\");\n        k = r.set;\n        c.upButtonSet = k;\n        k.hide();\n        e.push(k);\n        var t, q;\n        isNaN(c.top) || (l = a.getY(c.top) + f, q = 0);\n        isNaN(c.bottom) || (l = a.getY(c.bottom, !0) - c.height - f, q = c.height - h + f / 2);\n        isNaN(c.left) || (m = a.getX(c.left) + f, t = -f / 2);\n        isNaN(c.right) || (m = a.getX(c.right, !0) - c.width - f, t = c.width - h + f / 2);\n        f = b.set();\n        f.clipRect(1, 1, c.width, c.height);\n        g.push(f);\n        c.rectangleC = f;\n        e.translate(m, l);\n        n.translate(t, q);\n        k.translate(t, q);\n        g.mouseup(function () {\n          c.handleMouseUp();\n        });\n        c.drawRectangle();\n      } else d.remove(c.allSet), d.remove(c.downButtonSet), d.remove(c.upButtonSet);\n    },\n    minimize: function minimize() {\n      this.downButtonSet.hide();\n      this.upButtonSet.show();\n      this.allSet.hide();\n    },\n    maximize: function maximize() {\n      this.downButtonSet.show();\n      this.upButtonSet.hide();\n      this.allSet.show();\n    },\n    buildSVGMap: function buildSVGMap() {\n      var a = this.chart,\n          b = {\n        fill: this.mapColor,\n        stroke: this.mapColor,\n        \"stroke-opacity\": 1\n      },\n          c = this.container,\n          e = c.set();\n      d.setCN(a, e, \"small-map-image\");\n      var g;\n\n      for (g = 0; g < a.svgAreas.length; g++) {\n        var f = c.path(a.svgAreas[g].path).attr(b);\n        e.push(f);\n      }\n\n      this.allSet.push(e);\n      b = e.getBBox();\n      c = this.size * a.mapScale;\n      g = -b.x * c;\n      var f = -b.y * c,\n          k = 0,\n          h = 0;\n      a.centerMap && (k = (this.width - b.width * c) / 2, h = (this.height - b.height * c) / 2);\n      this.mapWidth = b.width * c;\n      this.mapHeight = b.height * c;\n      g += k;\n      f += h;\n      this.dx = k;\n      this.dy = h;\n      e.translate(g, f, c);\n      this.mapSet = e;\n      this.mapX = g;\n      this.mapY = f;\n    },\n    update: function update() {\n      var a = this.chart;\n\n      if (a) {\n        var b = a.zoomLevel(),\n            c = this.width,\n            d = this.height,\n            g = c / (a.realWidth * b),\n            f = a.mapContainer.getBBox(),\n            c = c / b,\n            d = d / b,\n            k = this.rectangle;\n        k.translate(-(a.mapContainer.x + f.x * b) * g + this.dx, -(a.mapContainer.y + f.y * b) * g + this.dy);\n        0 < c && 0 < d && (k.setAttr(\"width\", Math.ceil(c + 1)), k.setAttr(\"height\", Math.ceil(d + 1)));\n        this.rWidth = c;\n        this.rHeight = d;\n      }\n    },\n    drawRectangle: function drawRectangle() {\n      var a = this.rectangle;\n      d.remove(a);\n      a = d.rect(this.container, 10, 10, \"#000\", 0, 1, this.rectangleColor, 1);\n      d.setCN(this.chart, a, \"small-map-rectangle\");\n      this.rectangleC.push(a);\n      this.rectangle = a;\n    },\n    handleMouseUp: function handleMouseUp() {\n      var a = this.chart,\n          b = a.zoomLevel();\n      a.zoomToMapXY(b, (a.mouseX - this.set.x - this.mapX) / this.size + a.diffX * a.mapScale, (a.mouseY - this.set.y - this.mapY) / this.size + a.diffY * a.mapScale);\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.AreasProcessor = d.Class({\n    construct: function construct(a) {\n      this.chart = a;\n    },\n    process: function process(a) {\n      this.updateAllAreas();\n      this.allObjects = [];\n      a = a.areas;\n      var b = this.chart;\n      b.outlines = [];\n      var c = a.length,\n          d,\n          g,\n          f = 0,\n          k = !1,\n          h = !1,\n          l = 0;\n\n      for (d = 0; d < c; d++) {\n        if (g = a[d], g.value = Number(g.value), g = g.value, !isNaN(g)) {\n          if (!1 === k || k < g) k = g;\n          if (!1 === h || h > g) h = g;\n          f += Math.abs(g);\n          l++;\n        }\n      }\n\n      this.minValue = h;\n      this.maxValue = k;\n      isNaN(b.minValue) || (this.minValue = b.minValue);\n      isNaN(b.maxValue) || (this.maxValue = b.maxValue);\n      b.maxValueReal = k;\n      b.minValueReal = h;\n\n      for (d = 0; d < c; d++) {\n        g = a[d], isNaN(g.value) ? g.percents = void 0 : (g.percents = (g.value - h) / f * 100, h == k && (g.percents = 100));\n      }\n\n      for (d = 0; d < c; d++) {\n        g = a[d], this.createArea(g);\n      }\n\n      b.outlinesToFront();\n    },\n    updateAllAreas: function updateAllAreas() {\n      var a = this.chart,\n          b = a.areasSettings,\n          c = b.unlistedAreasColor,\n          e = b.unlistedAreasAlpha,\n          g = b.unlistedAreasOutlineColor,\n          f = b.unlistedAreasOutlineAlpha,\n          k = a.svgAreas,\n          h = a.dataProvider,\n          l = h.areas,\n          m = {},\n          n;\n\n      for (n = 0; n < l.length; n++) {\n        m[l[n].id] = l[n];\n      }\n\n      for (n = 0; n < k.length; n++) {\n        l = k[n];\n\n        if (b.preserveOriginalAttributes) {\n          if (l.customAttr) for (var p in l.customAttr) {\n            l.setAttr(p, l.customAttr[p]);\n          }\n        } else {\n          void 0 != c && l.setAttr(\"fill\", c);\n          isNaN(e) || l.setAttr(\"fill-opacity\", e);\n          void 0 != g && l.setAttr(\"stroke\", g);\n          isNaN(f) || l.setAttr(\"stroke-opacity\", f);\n          var r = b.outlineThickness;\n          b.adjustOutlineThickness && (r = r / a.zoomLevel() / a.mapScale);\n          l.setAttr(\"stroke-width\", r);\n        }\n\n        d.setCN(a, l, \"map-area-unlisted\");\n        h.getAreasFromMap && !m[l.id] && (r = new d.MapArea(a.theme), r.parentObject = h, r.id = l.id, r.outline = l.outline, h.areas.push(r));\n      }\n    },\n    createArea: function createArea(a) {\n      var b = this.chart,\n          c = b.svgAreasById[a.id],\n          e = b.areasSettings;\n\n      if (c && c.className) {\n        var g = b.areasClasses[c.className];\n        g && (e = d.processObject(g, d.AreasSettings, b.theme));\n      }\n\n      var f = e.color,\n          k = e.alpha,\n          h = e.outlineThickness,\n          l = e.rollOverColor,\n          m = e.selectedColor,\n          n = e.rollOverAlpha,\n          p = e.rollOverBrightness,\n          r = e.outlineColor,\n          t = e.outlineAlpha,\n          q = e.balloonText,\n          y = e.selectable,\n          B = e.pattern,\n          u = e.rollOverOutlineColor,\n          v = e.bringForwardOnHover,\n          w = e.preserveOriginalAttributes;\n      this.allObjects.push(a);\n      a.chart = b;\n      a.baseSettings = e;\n      a.autoZoomReal = void 0 == a.autoZoom ? e.autoZoom : a.autoZoom;\n      g = a.color;\n      void 0 == g && (g = f);\n      var A = a.alpha;\n      isNaN(A) && (A = k);\n      k = a.rollOverAlpha;\n      isNaN(k) && (k = n);\n      isNaN(k) && (k = A);\n      n = a.rollOverColor;\n      void 0 == n && (n = l);\n      l = a.pattern;\n      void 0 == l && (l = B);\n      B = a.selectedColor;\n      void 0 == B && (B = m);\n      m = a.balloonText;\n      void 0 === m && (m = q);\n      void 0 == e.colorSolid || isNaN(a.value) || (q = Math.floor((a.value - this.minValue) / ((this.maxValue - this.minValue) / b.colorSteps)), q == b.colorSteps && q--, q *= 1 / (b.colorSteps - 1), this.maxValue == this.minValue && (q = 1), a.colorReal = d.getColorFade(g, e.colorSolid, q));\n      void 0 != a.color && (a.colorReal = a.color);\n      void 0 == a.selectable && (a.selectable = y);\n      void 0 == a.colorReal && (a.colorReal = f);\n      f = a.outlineColor;\n      void 0 == f && (f = r);\n      r = a.outlineAlpha;\n      isNaN(r) && (r = t);\n      t = a.outlineThickness;\n      isNaN(t) && (t = h);\n      h = a.rollOverOutlineColor;\n      void 0 == h && (h = u);\n      u = a.rollOverBrightness;\n      void 0 == u && (u = p);\n      void 0 == a.bringForwardOnHover && (a.bringForwardOnHover = v);\n      void 0 == a.preserveOriginalAttributes && (a.preserveOriginalAttributes = w);\n      isNaN(e.selectedBrightness) || (B = d.adjustLuminosity(a.colorReal, e.selectedBrightness / 100));\n      a.alphaReal = A;\n      a.rollOverColorReal = n;\n      a.rollOverAlphaReal = k;\n      a.balloonTextReal = m;\n      a.selectedColorReal = B;\n      a.outlineColorReal = f;\n      a.outlineAlphaReal = r;\n      a.rollOverOutlineColorReal = h;\n      a.outlineThicknessReal = t;\n      a.patternReal = l;\n      a.rollOverBrightnessReal = u;\n      a.accessibleLabel || (a.accessibleLabel = e.accessibleLabel);\n      d.processDescriptionWindow(e, a);\n\n      if (c && (p = c.area, v = c.title, a.enTitle = c.title, v && !a.title && (a.title = v), (c = b.language) ? (v = d.mapTranslations) && (c = v[c]) && c[a.enTitle] && (a.titleTr = c[a.enTitle]) : a.titleTr = void 0, p)) {\n        c = a.tabIndex;\n        void 0 === c && (c = e.tabIndex);\n        void 0 !== c && p.setAttr(\"tabindex\", c);\n        a.displayObject = p;\n        a.outline && (A = 0, a.alphaReal = 0, a.rollOverAlphaReal = 0, a.mouseEnabled = !1, b.outlines.push(p), p.node.setAttribute(\"pointer-events\", \"none\"));\n        a.mouseEnabled && b.addObjectEventListeners(p, a);\n        var C;\n        void 0 != g && (C = g);\n        void 0 != a.colorReal && (C = a.showAsSelected || b.selectedObject == a ? a.selectedColorReal : a.colorReal);\n        p.node.setAttribute(\"class\", \"\");\n        d.setCN(b, p, \"map-area\");\n        d.setCN(b, p, \"map-area-\" + p.id);\n        e.adjustOutlineThickness && (t = t / b.zoomLevel() / b.mapScale);\n        a.preserveOriginalAttributes || (p.setAttr(\"fill\", C), p.setAttr(\"stroke\", f), p.setAttr(\"stroke-opacity\", r), p.setAttr(\"stroke-width\", t), p.setAttr(\"fill-opacity\", A));\n        b.makeObjectAccessible(a);\n        l && p.pattern(l, b.mapScale, b.path);\n        a.hidden && p.hide();\n      }\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.AreasSettings = d.Class({\n    construct: function construct(a) {\n      this.cname = \"AreasSettings\";\n      this.alpha = 1;\n      this.autoZoom = !1;\n      this.balloonText = \"[[title]]\";\n      this.color = \"#FFCC00\";\n      this.colorSolid = \"#990000\";\n      this.unlistedAreasAlpha = 1;\n      this.unlistedAreasColor = \"#DDDDDD\";\n      this.outlineColor = \"#FFFFFF\";\n      this.outlineThickness = this.outlineAlpha = 1;\n      this.selectedColor = this.rollOverOutlineColor = \"#CC0000\";\n      this.unlistedAreasOutlineColor = \"#FFFFFF\";\n      this.unlistedAreasOutlineAlpha = 1;\n      this.descriptionWindowWidth = 250;\n      this.bringForwardOnHover = this.adjustOutlineThickness = !0;\n      this.accessibleLabel = \"[[title]] [[value]] [[description]]\";\n      d.applyTheme(this, a, this.cname);\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.ImagesProcessor = d.Class({\n    construct: function construct(a) {\n      this.chart = a;\n      this.reset();\n    },\n    process: function process(a) {\n      var b = a.images,\n          c;\n\n      for (c = b.length - 1; 0 <= c; c--) {\n        var d = b[c];\n        this.createImage(d, c);\n        d.parentArray = b;\n      }\n\n      this.counter = c;\n      a.parentObject && a.remainVisible && this.process(a.parentObject);\n    },\n    createImage: function createImage(a, b) {\n      a = d.processObject(a, d.MapImage);\n      a.arrays = [];\n      isNaN(b) && (this.counter++, b = this.counter);\n      var c = this.chart,\n          e = c.container,\n          g = c.mapImagesContainer,\n          f = c.stageImagesContainer,\n          k = c.imagesSettings;\n      a.remove && a.remove();\n      var h = k.color,\n          l = k.alpha,\n          m = k.rollOverColor,\n          n = k.rollOverOutlineColor,\n          p = k.selectedColor,\n          r = k.balloonText,\n          t = k.outlineColor,\n          q = k.outlineAlpha,\n          y = k.outlineThickness,\n          B = k.selectedScale,\n          u = k.rollOverScale,\n          v = k.selectable,\n          w = k.labelPosition,\n          A = k.labelColor,\n          C = k.labelFontSize,\n          x = k.bringForwardOnHover,\n          z = k.labelRollOverColor,\n          E = k.rollOverBrightness,\n          F = k.selectedLabelColor;\n      a.index = b;\n      a.chart = c;\n      a.baseSettings = c.imagesSettings;\n      var H = e.set();\n      a.displayObject = H;\n      var G = a.color;\n      void 0 == G && (G = h);\n      h = a.alpha;\n      isNaN(h) && (h = l);\n      void 0 == a.bringForwardOnHover && (a.bringForwardOnHover = x);\n      l = a.outlineAlpha;\n      isNaN(l) && (l = q);\n      q = a.rollOverColor;\n      void 0 == q && (q = m);\n      m = a.selectedColor;\n      void 0 == m && (m = p);\n      p = a.balloonText;\n      void 0 === p && (p = r);\n      r = a.outlineColor;\n      void 0 == r && (r = t);\n      a.outlineColorReal = r;\n      t = a.outlineThickness;\n      isNaN(t) && (t = y);\n      (y = a.labelPosition) || (y = w);\n      w = a.labelColor;\n      void 0 == w && (w = A);\n      A = a.labelRollOverColor;\n      void 0 == A && (A = z);\n      z = a.selectedLabelColor;\n      void 0 == z && (z = F);\n      F = a.labelFontSize;\n      isNaN(F) && (F = C);\n      C = a.selectedScale;\n      isNaN(C) && (C = B);\n      B = a.rollOverScale;\n      isNaN(B) && (B = u);\n      u = a.rollOverBrightness;\n      void 0 == u && (u = E);\n      void 0 == a.selectable && (a.selectable = v);\n      a.colorReal = G;\n      isNaN(k.selectedBrightness) || (m = d.adjustLuminosity(a.colorReal, k.selectedBrightness / 100));\n      a.alphaReal = h;\n      a.rollOverColorReal = q;\n      a.balloonTextReal = p;\n      a.selectedColorReal = m;\n      a.labelColorReal = w;\n      a.labelRollOverColorReal = A;\n      a.selectedLabelColorReal = z;\n      a.labelFontSizeReal = F;\n      a.labelPositionReal = y;\n      a.selectedScaleReal = C;\n      a.rollOverScaleReal = B;\n      a.rollOverOutlineColorReal = n;\n      a.rollOverBrightnessReal = u;\n      a.accessibleLabel || (a.accessibleLabel = k.accessibleLabel);\n      d.processDescriptionWindow(k, a);\n      a.centeredReal = void 0 == a.centered ? k.centered : a.centered;\n      n = a.type;\n      u = a.imageURL;\n      B = a.svgPath;\n      C = a.width;\n      F = a.height;\n      v = a.scale;\n      isNaN(a.percentWidth) || (C = a.percentWidth / 100 * c.realWidth);\n      isNaN(a.percentHeight) || (F = a.percentHeight / 100 * c.realHeight);\n      var D;\n      u || n || B || (n = \"circle\", C = 1, l = h = 0);\n      q = E = 0;\n      k = a.selectedColorReal;\n\n      if (n) {\n        isNaN(C) && (C = 10);\n        isNaN(F) && (F = 10);\n        \"kilometers\" == a.widthAndHeightUnits && (C = c.kilometersToPixels(a.width), F = c.kilometersToPixels(a.height));\n        \"miles\" == a.widthAndHeightUnits && (C = c.milesToPixels(a.width), F = c.milesToPixels(a.height));\n        if (\"circle\" == n || \"bubble\" == n) F = C;\n        D = this.createPredefinedImage(G, r, t, n, C, F);\n        q = E = 0;\n        a.centeredReal ? (isNaN(a.right) || (E = C * v), isNaN(a.bottom) || (q = F * v)) : (E = C * v / 2, q = F * v / 2);\n        D.translate(E, q, v, !0);\n      } else u ? (isNaN(C) && (C = 10), isNaN(F) && (F = 10), D = e.image(u, 0, 0, C, F), D.node.setAttribute(\"preserveAspectRatio\", \"none\"), D.setAttr(\"opacity\", h), a.centeredReal && (E = isNaN(a.right) ? -C / 2 : C / 2, q = isNaN(a.bottom) ? -F / 2 : F / 2, D.translate(E, q, NaN, !0))) : B && (D = e.path(B), u = D.getBBox(), a.centeredReal ? (E = -u.x * v - u.width * v / 2, isNaN(a.right) || (E = -E), q = -u.y * v - u.height * v / 2, isNaN(a.bottom) || (q = -q)) : E = q = 0, D.translate(E, q, v, !0), D.x = E, D.y = q);\n\n      D && (H.push(D), a.image = D, D.setAttr(\"stroke-opacity\", l), D.setAttr(\"stroke-width\", t), D.setAttr(\"stroke\", r), D.setAttr(\"fill-opacity\", h), \"bubble\" != n && D.setAttr(\"fill\", G), d.setCN(c, D, \"map-image\"), void 0 != a.id && d.setCN(c, D, \"map-image-\" + a.id));\n      G = a.labelColorReal;\n      !a.showAsSelected && c.selectedObject != a || void 0 == k || (D && D.setAttr(\"fill\", k), G = a.selectedLabelColorReal);\n      D = null;\n      void 0 !== a.label && (D = d.text(e, a.label, G, c.fontFamily, a.labelFontSizeReal, a.labelAlign), d.setCN(c, D, \"map-image-label\"), void 0 !== a.id && d.setCN(c, D, \"map-image-label-\" + a.id), G = a.labelBackgroundAlpha, (h = a.labelBackgroundColor) && 0 < G && (l = D.getBBox(), e = d.rect(e, l.width + 16, l.height + 10, h, G), d.setCN(c, e, \"map-image-label-background\"), void 0 != a.id && d.setCN(c, e, \"map-image-label-background-\" + a.id), H.push(e), a.labelBG = e), a.imageLabel = D, H.push(D), d.setCN(c, H, \"map-image-container\"), void 0 != a.id && d.setCN(c, H, \"map-image-container-\" + a.id), this.labelsToReposition.push(a), a.arrays.push({\n        arr: this.labelsToReposition,\n        el: a\n      }));\n      e = isNaN(a.latitude) || isNaN(a.longitude) ? !0 : !1;\n      a.lineId && (D = this.chart.getObjectById(a.lineId)) && 0 < D.longitudes.length && (e = !1);\n      e ? f.push(H) : g.push(H);\n      H.toBack();\n      H && (H.rotation = a.rotation, isNaN(a.rotation) || H.rotate(a.rotation), a.arrays.push({\n        arr: this.allSvgObjects,\n        el: H\n      }), this.allSvgObjects.push(H));\n      this.allObjects.push(a);\n      c.makeObjectAccessible(a);\n      g = a.tabIndex;\n      void 0 === g && (g = c.imagesSettings.tabIndex);\n      void 0 !== g && H.setAttr(\"tabindex\", g);\n      a.arrays.push({\n        arr: this.allObjects,\n        el: a\n      });\n      isNaN(a.longitude) || isNaN(a.latitude) || !a.fixedSize || (a.objToResize = {\n        image: H,\n        mapImage: a,\n        scale: 1\n      }, this.objectsToResize.push(a.objToResize), a.arrays.push({\n        arr: this.objectsToResize,\n        el: a.objToResize\n      }));\n      this.updateSizeAndPosition(a);\n      a.mouseEnabled && c.addObjectEventListeners(H, a);\n      a.hidden && H.hide();\n      d.removeFromArray(c.updatableImages, a);\n      a.animateAlongLine && (c.updatableImages.push(a), a.delayAnimateAlong());\n      return a;\n    },\n    updateSizeAndPosition: function updateSizeAndPosition(a) {\n      var b = this.chart,\n          c = a.displayObject,\n          e = b.getX(a.left),\n          g = b.getY(a.top),\n          f,\n          k = a.image.getBBox();\n      isNaN(a.right) || (e = b.getX(a.right, !0) - k.width * a.scale);\n      isNaN(a.bottom) || (g = b.getY(a.bottom, !0) - k.height * a.scale);\n      var h = a.longitude,\n          l = a.latitude,\n          m = a.positionOnLine,\n          k = a.imageLabel,\n          n = this.chart.zoomLevel(),\n          p,\n          r;\n      a.lineId && (a.line = this.chart.getObjectById(a.lineId));\n\n      if (a.line && a.line.getCoordinates) {\n        a.line.chart = b;\n        var t = a.line.getCoordinates(m, a.lineSegment);\n        t && (h = b.coordinateToLongitude(t.x), l = b.coordinateToLatitude(t.y), p = t.x, r = t.y, a.animateAngle && (f = d.radiansToDegrees(t.angle)));\n      }\n\n      isNaN(f) || c.rotate(f + a.extraAngle);\n      if (!isNaN(e) && !isNaN(g)) c.translate(e, g, NaN, !0);else if (!isNaN(l) && !isNaN(h)) if (g = b.coordinatesToXY(h, l), e = g.x, g = g.y, isNaN(p) || (e = p), isNaN(r) || (g = r), a.fixedSize) {\n        p = a.positionScale;\n        isNaN(p) ? p = 0 : (--p, p *= 1 - 2 * Math.abs(m - .5));\n        if (m = a.objectToResize) m.scale = 1 + p;\n        c.translate(e, g, 1 / n + p, !0);\n      } else c.translate(e, g, NaN, !0);\n      this.positionLabel(k, a, a.labelPositionReal);\n    },\n    positionLabel: function positionLabel(a, b, c) {\n      if (a) {\n        var d = b.image,\n            g = 0,\n            f = 0,\n            k = 0,\n            h = 0;\n        d && (h = d.getBBox(), f = d.y + h.y, g = d.x + h.x, k = h.width, h = h.height, b.svgPath && (k *= b.scale, h *= b.scale));\n        var d = a.getBBox(),\n            l = d.width,\n            m = d.height;\n        \"right\" == c && (g += k + l / 2 + 5, f += h / 2 - 2);\n        \"left\" == c && (g += -l / 2 - 5, f += h / 2 - 2);\n        \"top\" == c && (f -= m / 2 + 3, g += k / 2);\n        \"bottom\" == c && (f += h + m / 2, g += k / 2);\n        \"middle\" == c && (g += k / 2, f += h / 2);\n        a.translate(g + b.labelShiftX, f + b.labelShiftY, NaN, !0);\n        a = b.labelFontSizeReal;\n        b.labelBG && b.labelBG.translate(g - d.width / 2 + b.labelShiftX - 9, f - a / 2 + b.labelShiftY - 4, NaN, !0);\n      }\n    },\n    createPredefinedImage: function createPredefinedImage(a, b, c, e, g, f) {\n      var k = this.chart.container,\n          h;\n\n      switch (e) {\n        case \"circle\":\n          h = d.circle(k, g / 2, a, 1, c, b, 1);\n          break;\n\n        case \"rectangle\":\n          h = d.polygon(k, [-g / 2, g / 2, g / 2, -g / 2], [f / 2, f / 2, -f / 2, -f / 2], a, 1, c, b, 1, 0, !0);\n          break;\n\n        case \"bubble\":\n          h = d.circle(k, g / 2, a, 1, c, b, 1, !0);\n          break;\n\n        case \"hexagon\":\n          g /= Math.sqrt(3), h = d.polygon(k, [.866 * g, 0 * g, -.866 * g, -.866 * g, 0 * g, .866 * g], [.5 * g, 1 * g, .5 * g, -.5 * g, -1 * g, -.5 * g], a, 1, c, b, 1);\n      }\n\n      return h;\n    },\n    reset: function reset() {\n      this.objectsToResize = [];\n      this.allSvgObjects = [];\n      this.allObjects = [];\n      this.allLabels = [];\n      this.labelsToReposition = [];\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.ImagesSettings = d.Class({\n    construct: function construct(a) {\n      this.cname = \"ImagesSettings\";\n      this.balloonText = \"[[title]]\";\n      this.alpha = 1;\n      this.borderAlpha = 0;\n      this.borderThickness = 1;\n      this.labelPosition = \"right\";\n      this.labelColor = \"#000000\";\n      this.labelFontSize = 11;\n      this.color = \"#000000\";\n      this.labelRollOverColor = \"#00CC00\";\n      this.centered = !0;\n      this.rollOverScale = this.selectedScale = 1;\n      this.descriptionWindowWidth = 250;\n      this.bringForwardOnHover = !0;\n      this.outlineColor = \"transparent\";\n      this.adjustAnimationSpeed = !1;\n      this.baseAnimationDistance = 500;\n      this.pauseDuration = 0;\n      this.easingFunction = d.easeInOutQuad;\n      this.animationDuration = 3;\n      this.positionScale = 1;\n      this.accessibleLabel = \"[[title]] [[description]]\";\n      d.applyTheme(this, a, this.cname);\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.LinesProcessor = d.Class({\n    construct: function construct(a) {\n      this.chart = a;\n      this.reset();\n    },\n    process: function process(a) {\n      var b = a.lines,\n          c;\n\n      for (c = 0; c < b.length; c++) {\n        var d = b[c];\n        this.createLine(d, c);\n        d.parentArray = b;\n      }\n\n      this.counter = c;\n      a.parentObject && a.remainVisible && this.process(a.parentObject);\n    },\n    createLine: function createLine(a, b) {\n      a = d.processObject(a, d.MapLine);\n      isNaN(b) && (this.counter++, b = this.counter);\n      a.index = b;\n      a.remove && a.remove();\n      var c = this.chart,\n          e = c.linesSettings,\n          g = this.objectsToResize,\n          f = c.mapLinesContainer,\n          k = c.stageLinesContainer,\n          h = e.thickness,\n          l = e.dashLength,\n          m = e.arrow,\n          n = e.arrowSize,\n          p = e.arrowColor,\n          r = e.arrowAlpha,\n          t = e.color,\n          q = e.alpha,\n          y = e.rollOverColor,\n          B = e.selectedColor,\n          u = e.rollOverAlpha,\n          v = e.balloonText,\n          w = e.bringForwardOnHover,\n          A = e.arc,\n          C = e.rollOverBrightness,\n          x = c.container;\n      a.chart = c;\n      a.baseSettings = e;\n      var z = x.set();\n      a.displayObject = z;\n      var E = a.tabIndex;\n      void 0 === E && (E = e.tabIndex);\n      void 0 !== E && z.setAttr(\"tabindex\", E);\n      this.allSvgObjects.push(z);\n      a.arrays.push({\n        arr: this.allSvgObjects,\n        el: z\n      });\n      this.allObjects.push(a);\n      a.arrays.push({\n        arr: this.allObjects,\n        el: a\n      });\n      a.mouseEnabled && c.addObjectEventListeners(z, a);\n\n      if (a.remainVisible || c.selectedObject == a.parentObject) {\n        E = a.thickness;\n        isNaN(E) && (E = h);\n        h = a.dashLength;\n        isNaN(h) && (h = l);\n        l = a.color;\n        void 0 == l && (l = t);\n        t = a.alpha;\n        isNaN(t) && (t = q);\n        q = a.rollOverAlpha;\n        isNaN(q) && (q = u);\n        isNaN(q) && (q = t);\n        u = a.rollOverColor;\n        void 0 == u && (u = y);\n        y = a.selectedColor;\n        void 0 == y && (y = B);\n        B = a.balloonText;\n        void 0 === B && (B = v);\n        v = Number(a.arc);\n        isNaN(v) && (v = A);\n        A = a.arrow;\n        if (!A || \"none\" == A && \"none\" != m) A = m;\n        m = a.arrowColor;\n        void 0 == m && (m = p);\n        void 0 == m && (m = l);\n        p = a.arrowAlpha;\n        isNaN(p) && (p = r);\n        isNaN(p) && (p = t);\n        r = a.arrowSize;\n        isNaN(r) && (r = n);\n        n = a.rollOverBrightness;\n        void 0 == n && (n = C);\n        a.colorReal = l;\n        a.arrowColor = m;\n        isNaN(e.selectedBrightness) || (y = d.adjustLuminosity(a.colorReal, e.selectedBrightness / 100));\n        a.alphaReal = t;\n        a.rollOverColorReal = u;\n        a.rollOverAlphaReal = q;\n        a.balloonTextReal = B;\n        a.selectedColorReal = y;\n        a.thicknessReal = E;\n        a.rollOverBrightnessReal = n;\n        a.accessibleLabel || (a.accessibleLabel = e.accessibleLabel);\n        void 0 === a.shiftArrow && (a.shiftArrow = e.shiftArrow);\n        void 0 == a.bringForwardOnHover && (a.bringForwardOnHover = w);\n        d.processDescriptionWindow(e, a);\n        w = this.processCoordinates(a.x, c.realWidth);\n        C = this.processCoordinates(a.y, c.realHeight);\n        n = a.longitudes;\n        e = a.latitudes;\n        q = n.length;\n        if (0 < q) for (w = [], C = [], u = 0; u < q; u++) {\n          B = c.coordinatesToXY(n[u], e[u]), w.push(B.x), C.push(B.y);\n        }\n\n        if (0 < w.length) {\n          a.segments = w.length;\n          d.dx = 0;\n          d.dy = 0;\n          var F,\n              H,\n              G,\n              q = 10 * (1 - Math.abs(v));\n          10 <= q && (q = NaN);\n          1 > q && (q = 1);\n          a.arcRadius = [];\n          a.distances = [];\n          n = c.mapContainer.scale;\n\n          if (isNaN(q)) {\n            for (q = 0; q < w.length - 1; q++) {\n              H = Math.sqrt(Math.pow(w[q + 1] - w[q], 2) + Math.pow(C[q + 1] - C[q], 2)), a.distances[q] = H;\n            }\n\n            q = d.line(x, w, C, l, 1, E / n, h, !1, !1, !0);\n            l = d.line(x, w, C, l, .001, 5 / n, h, !1, !1, !0);\n            q.setAttr(\"stroke-linecap\", \"round\");\n          } else {\n            u = 1;\n            B = {\n              fill: \"none\",\n              stroke: l,\n              \"stroke-opacity\": 1,\n              \"stroke-width\": E / n,\n              \"fill-opacity\": 0,\n              \"stroke-linecap\": \"round\"\n            };\n            void 0 !== h && 0 < h && (B[\"stroke-dasharray\"] = h);\n\n            for (var h = \"\", D = 0; D < w.length - 1; D++) {\n              var L = w[D],\n                  J = w[D + 1],\n                  M = C[D],\n                  O = C[D + 1];\n              H = Math.sqrt(Math.pow(J - L, 2) + Math.pow(O - M, 2));\n              G = H / 2 * q;\n              F = 270 + 180 * Math.acos(H / 2 / G) / Math.PI;\n              isNaN(F) && (F = 270);\n              u = L <= J ? 0 > v ? 1 : 0 : 0 < v ? 1 : 0;\n              0 < v && (F = -F);\n              h += \"M\" + L + \",\" + M + \"A\" + G + \",\" + G + \",0,0,\" + u + \",\" + J + \",\" + O;\n              a.arcRadius[D] = G;\n              a.distances[D] = H;\n            }\n\n            q = x.path(h).attr(B);\n            l = x.path(h).attr({\n              \"fill-opacity\": 0,\n              stroke: l,\n              \"stroke-width\": 5 / n,\n              \"stroke-opacity\": .001,\n              fill: \"none\"\n            });\n          }\n\n          d.setCN(c, q, \"map-line\");\n          void 0 != a.id && d.setCN(c, q, \"map-line-\" + a.id);\n          d.dx = .5;\n          d.dy = .5;\n          z.push(q);\n          z.push(l);\n          q.setAttr(\"opacity\", t);\n\n          if (\"none\" != A) {\n            var I, K, N;\n            if (\"end\" == A || \"both\" == A) u = w[w.length - 1], D = C[C.length - 1], 1 < w.length ? (B = w[w.length - 2], I = C[C.length - 2]) : (B = u, I = D), I = 180 * Math.atan((D - I) / (u - B)) / Math.PI, isNaN(F) || (I += F), K = u, N = D, I = 0 > u - B ? I - 90 : I + 90;\n            t = [-r / 2 - .5, -.5, r / 2 - .5];\n            h = [r, -.5, r];\n            a.shiftArrow && \"middle\" != A && (h = [0, 1.2 * -r, 0]);\n            \"both\" == A && (r = d.polygon(x, t, h, m, p, 1, m, p, void 0, !0), z.push(r), r.translate(K, N, 1 / n, !0), isNaN(I) || r.rotate(I), d.setCN(c, q, \"map-line-arrow\"), void 0 != a.id && d.setCN(c, q, \"map-line-arrow-\" + a.id), a.fixedSize && g.push(r));\n            if (\"start\" == A || \"both\" == A) r = w[0], N = C[0], 1 < w.length ? (u = w[1], K = C[1]) : (u = r, K = N), I = 180 * Math.atan((N - K) / (r - u)) / Math.PI, isNaN(F) || (I -= F), K = r, I = 0 > r - u ? I - 90 : I + 90;\n            \"middle\" == A && (u = w[w.length - 1], D = C[C.length - 1], 1 < w.length ? (B = w[w.length - 2], I = C[C.length - 2]) : (B = u, I = D), K = B + (u - B) / 2, N = I + (D - I) / 2, I = 180 * Math.atan2(D - I, u - B) / Math.PI, isNaN(F) || (F = H / 2, G -= Math.sqrt(G * G - F * F), u >= B ? 0 > v && (G = -G) : 0 < v && (G = -G), K -= Math.sin(I / 180 * Math.PI) * G, N += Math.cos(I / 180 * Math.PI) * G), I += 90);\n            r = d.polygon(x, t, h, m, p, 1, m, p, void 0, !0);\n            d.setCN(c, q, \"map-line-arrow\");\n            void 0 != a.id && d.setCN(c, q, \"map-line-arrow-\" + a.id);\n            z.push(r);\n            r.translate(K, N, 1 / n, !0);\n            isNaN(I) || r.rotate(I);\n            a.fixedSize && (g.push(r), a.arrays.push({\n              arr: g,\n              el: r\n            }));\n            a.arrowSvg = r;\n          }\n\n          a.fixedSize && q && (g = {\n            line: q,\n            thickness: E\n          }, this.linesToResize.push(g), a.arrays.push({\n            arr: this.linesToResize,\n            el: g\n          }), g = {\n            line: l,\n            thickness: 5\n          }, this.linesToResize.push(g), a.arrays.push({\n            arr: this.linesToResize,\n            el: g\n          }));\n          a.lineSvg = q;\n          a.showAsSelected && !isNaN(y) && q.setAttr(\"stroke\", y);\n          0 < e.length ? f.push(z) : k.push(z);\n          a.hidden && z.hide();\n          c.makeObjectAccessible(a);\n        }\n      }\n    },\n    processCoordinates: function processCoordinates(a, b) {\n      var c = [],\n          d;\n\n      for (d = 0; d < a.length; d++) {\n        var g = a[d],\n            f = Number(g);\n        isNaN(f) && (f = Number(g.replace(\"%\", \"\")) * b / 100);\n        isNaN(f) || c.push(f);\n      }\n\n      return c;\n    },\n    reset: function reset() {\n      this.objectsToResize = [];\n      this.allSvgObjects = [];\n      this.allObjects = [];\n      this.linesToResize = [];\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.LinesSettings = d.Class({\n    construct: function construct(a) {\n      this.cname = \"LinesSettings\";\n      this.balloonText = \"[[title]]\";\n      this.thickness = 1;\n      this.dashLength = 0;\n      this.arrowSize = 10;\n      this.arrowAlpha = 1;\n      this.arrow = \"none\";\n      this.color = \"#990000\";\n      this.descriptionWindowWidth = 250;\n      this.bringForwardOnHover = !0;\n      d.applyTheme(this, a, this.cname);\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.MapObject = d.Class({\n    construct: function construct(a) {\n      this.fixedSize = this.mouseEnabled = !0;\n      this.images = [];\n      this.lines = [];\n      this.areas = [];\n      this.remainVisible = !0;\n      this.passZoomValuesToTarget = !1;\n      this.objectType = this.cname;\n      d.applyTheme(this, a, \"MapObject\");\n      this.arrays = [];\n    },\n    deleteObject: function deleteObject() {\n      this.remove();\n      this.parentArray && d.removeFromArray(this.parentArray, this);\n      if (this.arrays) for (var a = 0; a < this.arrays.length; a++) {\n        d.removeFromArray(this.arrays[a].arr, this.arrays[a].el);\n      }\n      this.arrays = [];\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.MapArea = d.Class({\n    inherits: d.MapObject,\n    construct: function construct(a) {\n      this.cname = \"MapArea\";\n      d.MapArea.base.construct.call(this, a);\n      d.applyTheme(this, a, this.cname);\n    },\n    validate: function validate() {\n      this.chart.areasProcessor.createArea(this);\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.MapLine = d.Class({\n    inherits: d.MapObject,\n    construct: function construct(a) {\n      this.cname = \"MapLine\";\n      this.longitudes = [];\n      this.latitudes = [];\n      this.x = [];\n      this.y = [];\n      this.segments = 0;\n      this.arrow = \"none\";\n      d.MapLine.base.construct.call(this, a);\n      d.applyTheme(this, a, this.cname);\n    },\n    validate: function validate() {\n      this.chart.linesProcessor.createLine(this);\n    },\n    remove: function remove() {\n      var a = this.displayObject;\n      a && a.remove();\n    },\n    getCoordinates: function getCoordinates(a, b) {\n      isNaN(b) && (b = 0);\n      isNaN(this.arc);\n\n      if (!isNaN(a)) {\n        var c, d, g, f, k, h;\n\n        if (1 < this.longitudes.length) {\n          d = this.chart.coordinatesToXY(this.longitudes[b], this.latitudes[b]);\n          var l = this.chart.coordinatesToXY(this.longitudes[b + 1], this.latitudes[b + 1]);\n          c = d.x;\n          g = l.x;\n          d = d.y;\n          f = l.y;\n        } else 1 < this.x.length && (c = this.x[b], g = this.x[b + 1], d = this.y[b], f = this.y[b + 1]);\n\n        k = c + (g - c) * a;\n        h = d + (f - d) * a;\n        var m = Math.atan2(f - d, g - c),\n            l = this.arc,\n            n = 10 * (1 - Math.abs(l));\n        10 <= n && (n = NaN);\n        1 > n && (n = 1);\n\n        if (!isNaN(l) && 0 !== l && !isNaN(n)) {\n          var p = Math.sqrt(Math.pow(g - c, 2) + Math.pow(f - d, 2));\n          h = p / 2 * n + .001;\n          m = p / 2;\n          n = -Math.sqrt(h * h - m * m);\n          m = 180 * Math.atan2(f - d, g - c) / Math.PI;\n          g >= c ? 0 > l && (n = -n) : 0 < l && (n = -n);\n          k = c + .5 * (g - c) - Math.sin(m / 180 * Math.PI) * n;\n          n = d + .5 * (f - d) + Math.cos(m / 180 * Math.PI) * n;\n          d = (180 * Math.atan2(d - n, c - k) / Math.PI + 360) % 360;\n          f = (180 * Math.atan2(f - n, g - k) / Math.PI + 360) % 360;\n          f < d && (f += 360);\n          180 < f - d && (d += 360);\n          d = (d + (f - d) * a) / 180 * Math.PI;\n          m = g >= c ? 0 > l ? d + Math.PI / 2 : d - Math.PI / 2 : 0 < l ? d + Math.PI / 2 : d - Math.PI / 2;\n          k += h * Math.cos(d);\n          h = n + h * Math.sin(d);\n        }\n\n        this.distance = p;\n        return {\n          x: k,\n          y: h,\n          angle: m\n        };\n      }\n    },\n    fixToStage: function fixToStage() {\n      if (0 < this.latitudes.length) {\n        this.y = [];\n\n        for (var a = 0; a < this.latitudes.length; a++) {\n          var b = this.chart.coordinatesToStageXY(this.longitudes[a], this.latitudes[a]);\n          this.y.push(b.y);\n          this.x.push(b.x);\n        }\n\n        this.latitudes = [];\n        this.longitudes = [];\n      }\n\n      this.validate();\n    },\n    fixToMap: function fixToMap() {\n      if (0 < this.y.length) {\n        this.latitudes = [];\n\n        for (var a = 0; a < this.y.length; a++) {\n          var b = this.chart.stageXYToCoordinates(this.x[a], this.y[a]);\n          this.latitudes.push(b.latitude);\n          this.longitudes.push(b.longitude);\n        }\n\n        this.y = [];\n        this.x = [];\n      }\n\n      this.validate();\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.MapImage = d.Class({\n    inherits: d.MapObject,\n    construct: function construct(a) {\n      this.cname = \"MapImage\";\n      this.scale = 1;\n      this.widthAndHeightUnits = \"pixels\";\n      this.labelShiftY = this.labelShiftX = 0;\n      this.positionOnLine = .5;\n      this.direction = 1;\n      this.lineSegment = this.extraAngle = 0;\n      this.animateAngle = !0;\n      this.createEvents(\"animationStart\", \"animationEnd\");\n      d.MapImage.base.construct.call(this, a);\n      d.applyTheme(this, a, this.cname);\n      this.delayCounter = 0;\n    },\n    validate: function validate() {\n      this.chart.imagesProcessor.createImage(this);\n    },\n    updatePosition: function updatePosition() {\n      this.chart.imagesProcessor.updateSizeAndPosition(this);\n    },\n    remove: function remove() {\n      var a = this.displayObject;\n      a && a.remove();\n      (a = this.imageLabel) && a.remove();\n    },\n    animateTo: function animateTo(a, b, c, d) {\n      isNaN(c) || (this.animationDuration = c);\n      d && (this.easingFunction = d);\n      this.finalX = a;\n      this.finalY = b;\n      isNaN(this.longitude) || (this.initialX = this.longitude);\n      isNaN(this.left) || (this.initialX = this.left);\n      isNaN(this.right) || (this.initialX = this.right);\n      isNaN(this.latitude) || (this.initialY = this.latitude);\n      isNaN(this.top) || (this.initialY = this.top);\n      isNaN(this.bottom) || (this.initialY = this.bottom);\n      this.animatingAlong = !1;\n      this.animate();\n    },\n    animateAlong: function animateAlong(a, b, c) {\n      1 == this.positionOnLine && this.flipDirection && (this.direction = -1, this.extraAngle = 180);\n      isNaN(b) || (this.animationDuration = b);\n      c && (this.easingFunction = c);\n      a && (this.line = this.chart.getObjectById(a));\n      this.animateAlongLine = this.line;\n      this.animatingAlong = !0;\n      this.animate();\n    },\n    animate: function animate() {\n      var a = this.chart.imagesSettings,\n          b = this.animationDuration;\n      isNaN(b) && (b = a.animationDuration);\n      this.totalFrames = b * d.updateRate;\n      b = 1;\n      this.line && a.adjustAnimationSpeed && (this.line.distances && (b = this.line.distances[this.lineSegment] * this.chart.zoomLevel(), b = Math.abs(b / a.baseAnimationDistance)), this.totalFrames = Math.round(b * this.totalFrames));\n      this.frame = 0;\n      this.fire({\n        type: \"animationStart\",\n        chart: this.chart,\n        image: this,\n        lineSegment: this.lineSegment,\n        direction: this.direction\n      });\n    },\n    update: function update() {\n      var a = this.totalFrames;\n      this.frame++;\n      this.delayCounter--;\n      0 === this.delayCounter && this.animateAlong();\n      if (!(0 < this.delayCounter)) if (this.frame <= a) {\n        var b = this.chart.imagesSettings,\n            c = this.easingFunction;\n        c || (c = b.easingFunction);\n        a = c(0, this.frame, 0, 1, a);\n        -1 == this.direction && (a = 1 - a);\n        this.animatingAlong ? this.positionOnLine = a : (b = this.initialX + (this.finalX - this.initialX) * a, isNaN(this.longitude) || (this.longitude = b), isNaN(this.left) || (this.left = b), isNaN(this.right) || (this.right = b), a = this.initialY + (this.finalY - this.initialY) * a, isNaN(this.latitude) || (this.latitude = a), isNaN(this.top) || (this.top = a), isNaN(this.bottom) || (this.bottom = a));\n        this.updatePosition();\n      } else this.frame == a + 1 && (this.fire({\n        type: \"animationEnd\",\n        chart: this.chart,\n        image: this,\n        lineSegment: this.lineSegment,\n        direction: this.direction\n      }), this.line && this.animatingAlong && (1 == this.direction ? this.lineSegment < this.line.segments - 2 ? (this.lineSegment++, this.delayAnimateAlong(), this.positionOnLine = 0) : this.flipDirection ? (this.direction = -1, this.extraAngle = 180, this.delayAnimateAlong()) : this.loop && (this.delayAnimateAlong(), this.lineSegment = 0) : 0 < this.lineSegment ? (this.lineSegment--, this.delayAnimateAlong(), this.positionOnLine = 0) : this.loop && this.flipDirection ? (this.direction = 1, this.extraAngle = 0, this.delayAnimateAlong()) : this.loop && this.delayAnimateAlong()));\n    },\n    delayAnimateAlong: function delayAnimateAlong() {\n      this.animateAlongLine && (this.delayCounter = this.chart.imagesSettings.pauseDuration * d.updateRate);\n    },\n    fixToStage: function fixToStage() {\n      if (!isNaN(this.longitude)) {\n        var a = this.chart.coordinatesToStageXY(this.longitude, this.latitude);\n        this.left = a.x;\n        this.top = a.y;\n        this.latitude = this.longitude = void 0;\n      }\n\n      this.validate();\n    },\n    fixToMap: function fixToMap() {\n      if (!isNaN(this.left)) {\n        var a = this.chart.stageXYToCoordinates(this.left, this.top);\n        this.longitude = a.longitude;\n        this.latitude = a.latitude;\n        this.top = this.left = void 0;\n      }\n\n      this.validate();\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n\n  d.degreesToRadians = function (a) {\n    return a / 180 * Math.PI;\n  };\n\n  d.radiansToDegrees = function (a) {\n    return a / Math.PI * 180;\n  };\n\n  d.getColorFade = function (a, b, c) {\n    var e = d.hex2RGB(b);\n    b = e[0];\n    var g = e[1],\n        e = e[2],\n        f = d.hex2RGB(a);\n    a = f[0];\n    var k = f[1],\n        f = f[2];\n    a += Math.round((b - a) * c);\n    k += Math.round((g - k) * c);\n    f += Math.round((e - f) * c);\n    return \"rgb(\" + a + \",\" + k + \",\" + f + \")\";\n  };\n\n  d.hex2RGB = function (a) {\n    return [parseInt(a.substring(1, 3), 16), parseInt(a.substring(3, 5), 16), parseInt(a.substring(5, 7), 16)];\n  };\n\n  d.processDescriptionWindow = function (a, b) {\n    isNaN(b.descriptionWindowX) && (b.descriptionWindowX = a.descriptionWindowX);\n    isNaN(b.descriptionWindowY) && (b.descriptionWindowY = a.descriptionWindowY);\n    isNaN(b.descriptionWindowLeft) && (b.descriptionWindowLeft = a.descriptionWindowLeft);\n    isNaN(b.descriptionWindowRight) && (b.descriptionWindowRight = a.descriptionWindowRight);\n    isNaN(b.descriptionWindowTop) && (b.descriptionWindowTop = a.descriptionWindowTop);\n    isNaN(b.descriptionWindowBottom) && (b.descriptionWindowBottom = a.descriptionWindowBottom);\n    isNaN(b.descriptionWindowWidth) && (b.descriptionWindowWidth = a.descriptionWindowWidth);\n    isNaN(b.descriptionWindowHeight) && (b.descriptionWindowHeight = a.descriptionWindowHeight);\n  };\n\n  d.normalizePath = function (a) {\n    for (var b = \"\", c = d.parsePath(a.getAttribute(\"d\")), e, g, f = Infinity, k = -Infinity, h = Infinity, l = -Infinity, m = 0; m < c.length; m++) {\n      var n = c[m],\n          p = n.letter,\n          r = n.x,\n          n = n.y;\n      \"h\" == p && (p = \"L\", r += e, n = g);\n      \"H\" == p && (p = \"L\", n = g);\n      \"v\" == p && (p = \"L\", r = e, n += g);\n      \"V\" == p && (p = \"L\", r = e);\n      if (\"m\" === p || \"l\" === p) p = p.toUpperCase(), r += e, n += g;\n      r = d.roundTo(r, 3);\n      n = d.roundTo(n, 3);\n      e = r;\n      g = n;\n      r > k && (k = r);\n      r < f && (f = r);\n      n > l && (l = n);\n      n < h && (h = n);\n      b = \"z\" == p.toLowerCase() ? b + \"Z \" : b + (p + \" \" + r + \" \" + n + \" \");\n    }\n\n    a.setAttribute(\"d\", b);\n    return {\n      minX: f,\n      maxX: k,\n      minY: h,\n      maxY: l\n    };\n  };\n\n  d.mercatorLatitudeToRadians = function (a) {\n    return Math.log(Math.tan(Math.PI / 4 + d.degreesToRadians(a) / 2));\n  };\n\n  d.parsePath = function (a) {\n    a = a.match(/([MmLlHhVvZz]{1}[0-9.,\\-\\s]*)/g);\n\n    for (var b = [], c = 0; c < a.length; c++) {\n      var d = a[c].match(/([MmLlHhVvZz]{1})|([0-9.\\-]+)/g),\n          g = {\n        letter: d[0]\n      };\n\n      switch (d[0]) {\n        case \"Z\":\n        case \"Z\":\n        case \"z\":\n          break;\n\n        case \"V\":\n        case \"v\":\n          g.y = Number(d[1]);\n          break;\n\n        case \"H\":\n        case \"h\":\n          g.x = Number(d[1]);\n          break;\n\n        default:\n          g.x = Number(d[1]), g.y = Number(d[2]);\n      }\n\n      b.push(g);\n    }\n\n    return b;\n  };\n\n  d.acos = function (a) {\n    return 1 < a ? 0 : -1 > a ? Math.PI : Math.acos(a);\n  };\n\n  d.asin = function (a) {\n    return 1 < a ? Math.PI / 2 : -1 > a ? -Math.PI / 2 : Math.asin(a);\n  };\n\n  d.sinci = function (a) {\n    return a ? a / Math.sin(a) : 1;\n  };\n\n  d.asqrt = function (a) {\n    return 0 < a ? Math.sqrt(a) : 0;\n  };\n\n  d.winkel3 = function (a, b) {\n    var c = d.aitoff(a, b);\n    return [(c[0] + a / Math.PI * 2) / 2, (c[1] + b) / 2];\n  };\n\n  d.winkel3.invert = function (a, b) {\n    var c = a,\n        e = b,\n        g = 25,\n        f = Math.PI / 2;\n\n    do {\n      var k = Math.cos(e),\n          h = Math.sin(e),\n          l = Math.sin(2 * e),\n          m = h * h,\n          n = k * k,\n          p = Math.sin(c),\n          r = Math.cos(c / 2),\n          t = Math.sin(c / 2),\n          q = t * t,\n          y = 1 - n * r * r,\n          B = y ? d.acos(k * r) * Math.sqrt(u = 1 / y) : u = 0,\n          u,\n          y = .5 * (2 * B * k * t + c / f) - a,\n          v = .5 * (B * h + e) - b,\n          w = .5 * u * (n * q + B * k * r * m) + .5 / f,\n          A = u * (p * l / 4 - B * h * t),\n          h = .125 * u * (l * t - B * h * n * p),\n          m = .5 * u * (m * r + B * q * k) + .5,\n          k = A * h - m * w,\n          A = (v * A - y * m) / k,\n          y = (y * h - v * w) / k,\n          c = c - A,\n          e = e - y;\n    } while ((1E-6 < Math.abs(A) || 1E-6 < Math.abs(y)) && 0 < --g);\n\n    return [c, e];\n  };\n\n  d.aitoff = function (a, b) {\n    var c = Math.cos(b),\n        e = d.sinci(d.acos(c * Math.cos(a /= 2)));\n    return [2 * c * Math.sin(a) * e, Math.sin(b) * e];\n  };\n\n  d.orthographic = function (a, b) {\n    return [Math.cos(b) * Math.sin(a), Math.sin(b)];\n  };\n\n  d.equirectangular = function (a, b) {\n    return [a, b];\n  };\n\n  d.equirectangular.invert = function (a, b) {\n    return [a, b];\n  };\n\n  d.eckert5 = function (a, b) {\n    var c = Math.PI;\n    return [a * (1 + Math.cos(b)) / Math.sqrt(2 + c), 2 * b / Math.sqrt(2 + c)];\n  };\n\n  d.eckert5.invert = function (a, b) {\n    var c = Math.sqrt(2 + Math.PI),\n        d = b * c / 2;\n    return [c * a / (1 + Math.cos(d)), d];\n  };\n\n  d.eckert6 = function (a, b) {\n    for (var c = Math.PI, d = (1 + c / 2) * Math.sin(b), g = 0, f = Infinity; 10 > g && 1E-5 < Math.abs(f); g++) {\n      b -= f = (b + Math.sin(b) - d) / (1 + Math.cos(b));\n    }\n\n    d = Math.sqrt(2 + c);\n    return [a * (1 + Math.cos(b)) / d, 2 * b / d];\n  };\n\n  d.eckert6.invert = function (a, b) {\n    var c = 1 + Math.PI / 2,\n        e = Math.sqrt(c / 2);\n    return [2 * a * e / (1 + Math.cos(b *= e)), d.asin((b + Math.sin(b)) / c)];\n  };\n\n  d.mercator = function (a, b) {\n    b >= Math.PI / 2 - .02 && (b = Math.PI / 2 - .02);\n    b <= -Math.PI / 2 + .02 && (b = -Math.PI / 2 + .02);\n    return [a, Math.log(Math.tan(Math.PI / 4 + b / 2))];\n  };\n\n  d.mercator.invert = function (a, b) {\n    return [a, 2 * Math.atan(Math.exp(b)) - Math.PI / 2];\n  };\n\n  d.miller = function (a, b) {\n    return [a, 1.25 * Math.log(Math.tan(Math.PI / 4 + .4 * b))];\n  };\n\n  d.miller.invert = function (a, b) {\n    return [a, 2.5 * Math.atan(Math.exp(.8 * b)) - .625 * Math.PI];\n  };\n\n  d.eckert3 = function (a, b) {\n    var c = Math.PI,\n        d = Math.sqrt(c * (4 + c));\n    return [2 / d * a * (1 + Math.sqrt(1 - 4 * b * b / (c * c))), 4 / d * b];\n  };\n\n  d.eckert3.invert = function (a, b) {\n    var c = Math.PI,\n        e = Math.sqrt(c * (4 + c)) / 2;\n    return [a * e / (1 + d.asqrt(1 - b * b * (4 + c) / (4 * c))), b * e / 2];\n  };\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.MapData = d.Class({\n    inherits: d.MapObject,\n    construct: function construct() {\n      this.cname = \"MapData\";\n      d.MapData.base.construct.call(this);\n      this.projection = \"mercator\";\n      this.topLatitude = 90;\n      this.bottomLatitude = -90;\n      this.leftLongitude = -180;\n      this.rightLongitude = 180;\n      this.zoomLevel = 1;\n      this.getAreasFromMap = !1;\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.DescriptionWindow = d.Class({\n    construct: function construct() {},\n    show: function show(a, b, c, d) {\n      var g = this;\n      g.chart = a;\n      var f = document.createElement(\"div\");\n      f.style.position = \"absolute\";\n      var k = a.classNamePrefix + \"-description-\";\n      f.className = \"ammapDescriptionWindow \" + k + \"div\";\n      g.div = f;\n      b.appendChild(f);\n      var h = \".gif\";\n      a.svgIcons && (h = \".svg\");\n      var l = document.createElement(\"img\");\n      l.className = \"ammapDescriptionWindowCloseButton \" + k + \"close-img\";\n      l.src = a.pathToImages + \"xIcon\" + h;\n      l.style.cssFloat = \"right\";\n      l.style.cursor = \"pointer\";\n\n      l.onclick = function () {\n        g.close();\n      };\n\n      l.onmouseover = function () {\n        l.src = a.pathToImages + \"xIconH\" + h;\n      };\n\n      l.onmouseout = function () {\n        l.src = a.pathToImages + \"xIcon\" + h;\n      };\n\n      f.appendChild(l);\n      b = document.createElement(\"div\");\n      b.className = \"ammapDescriptionTitle \" + k + \"title-div\";\n\n      b.onmousedown = function () {\n        g.div.style.zIndex = 1E3;\n      };\n\n      f.appendChild(b);\n      b.innerHTML = d;\n      d = b.offsetHeight;\n      b = document.createElement(\"div\");\n      b.className = \"ammapDescriptionText \" + k + \"text-div\";\n      b.style.maxHeight = g.maxHeight - d - 20 + \"px\";\n      f.appendChild(b);\n      b.innerHTML = c;\n    },\n    close: function close() {\n      try {\n        this.div.parentNode.removeChild(this.div), this.chart.fireClosed();\n      } catch (a) {}\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.ValueLegend = d.Class({\n    construct: function construct(a) {\n      this.cname = \"ValueLegend\";\n      this.enabled = !0;\n      this.showAsGradient = !1;\n      this.minValue = 0;\n      this.height = 12;\n      this.width = 200;\n      this.bottom = this.left = 10;\n      this.borderColor = \"#FFFFFF\";\n      this.borderAlpha = this.borderThickness = 1;\n      this.color = \"#000000\";\n      this.fontSize = 11;\n      d.applyTheme(this, a, this.cname);\n    },\n    init: function init(a, b) {\n      if (this.enabled) {\n        var c = a.areasSettings.color,\n            e = a.areasSettings.colorSolid,\n            g = a.colorSteps;\n        d.remove(this.set);\n        var f = b.set();\n        this.set = f;\n        d.setCN(a, f, \"value-legend\");\n        var k = 0,\n            h = this.minValue,\n            l = this.fontSize,\n            m = a.fontFamily,\n            n = this.color,\n            p = {\n          precision: a.precision,\n          decimalSeparator: a.decimalSeparator,\n          thousandsSeparator: a.thousandsSeparator\n        };\n        void 0 == h && (h = d.formatNumber(a.minValueReal, p));\n        void 0 !== h && (k = d.text(b, h, n, m, l, \"left\"), k.translate(0, l / 2 - 1), d.setCN(a, k, \"value-legend-min-label\"), f.push(k), k = k.getBBox().height);\n        h = this.maxValue;\n        void 0 === h && (h = d.formatNumber(a.maxValueReal, p));\n        void 0 !== h && (k = d.text(b, h, n, m, l, \"right\"), k.translate(this.width, l / 2 - 1), d.setCN(a, k, \"value-legend-max-label\"), f.push(k), k = k.getBBox().height);\n        if (this.showAsGradient) c = d.rect(b, this.width, this.height, [c, e], 1, this.borderThickness, this.borderColor, 1, 0, 0), d.setCN(a, c, \"value-legend-gradient\"), c.translate(0, k), f.push(c);else for (l = this.width / g, m = 0; m < g; m++) {\n          n = d.getColorFade(c, e, 1 * m / (g - 1)), n = d.rect(b, l, this.height, n, 1, this.borderThickness, this.borderColor, 1), d.setCN(a, n, \"value-legend-color\"), d.setCN(a, n, \"value-legend-color-\" + m), n.translate(l * m, k), f.push(n);\n        }\n        e = c = 0;\n        g = f.getBBox();\n        k = a.getY(this.bottom, !0);\n        l = a.getY(this.top);\n        m = a.getX(this.right, !0);\n        n = a.getX(this.left);\n        isNaN(l) || (c = l);\n        isNaN(k) || (c = k - g.height);\n        isNaN(n) || (e = n);\n        isNaN(m) || (e = m - g.width);\n        f.translate(e, c);\n      } else d.remove(this.set);\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.ObjectList = d.Class({\n    construct: function construct(a) {\n      this.divId = a;\n    },\n    init: function init(a) {\n      this.chart = a;\n      var b = this.divId;\n      this.container && (b = this.container);\n      this.div = \"object\" != typeof b ? document.getElementById(b) : b;\n      b = document.createElement(\"div\");\n      b.className = \"ammapObjectList \" + a.classNamePrefix + \"-object-list-div\";\n      this.div.appendChild(b);\n      this.addObjects(a.dataProvider, b);\n    },\n    addObjects: function addObjects(a, b) {\n      var c = this.chart,\n          d = document.createElement(\"ul\");\n      d.className = c.classNamePrefix + \"-object-list-ul\";\n      var g;\n      if (a.areas) for (g = 0; g < a.areas.length; g++) {\n        var f = a.areas[g];\n        void 0 === f.showInList && (f.showInList = c.showAreasInList);\n        this.addObject(f, d);\n      }\n      if (a.images) for (g = 0; g < a.images.length; g++) {\n        f = a.images[g], void 0 === f.showInList && (f.showInList = c.showImagesInList), this.addObject(f, d);\n      }\n      if (a.lines) for (g = 0; g < a.lines.length; g++) {\n        f = a.lines[g], void 0 === f.showInList && (f.showInList = c.showLinesInList), this.addObject(f, d);\n      }\n      0 < d.childNodes.length && b.appendChild(d);\n    },\n    addObject: function addObject(a, b) {\n      var c = this;\n\n      if (a.showInList && void 0 !== a.title) {\n        var d = c.chart,\n            g = document.createElement(\"li\");\n        g.className = d.classNamePrefix + \"-object-list-li\";\n        var f = a.titleTr;\n        f || (f = a.title);\n        var f = document.createTextNode(f),\n            k = document.createElement(\"a\");\n        k.className = d.classNamePrefix + \"-object-list-a\";\n        k.appendChild(f);\n        g.appendChild(k);\n        b.appendChild(g);\n        this.addObjects(a, g);\n\n        k.onmouseover = function () {\n          c.chart.rollOverMapObject(a, !1);\n        };\n\n        k.onmouseout = function () {\n          c.chart.rollOutMapObject(a);\n        };\n\n        k.onclick = function () {\n          c.chart.clickMapObject(a);\n        };\n      }\n    }\n  });\n})();","map":null,"metadata":{},"sourceType":"script"}